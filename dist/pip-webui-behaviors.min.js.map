{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/draggable/CancelDrag.ts","src/draggable/Drag.ts","src/draggable/DraggableService.ts","src/draggable/Drop.ts","src/draggable/PreventDrag.ts","src/draggable/index.ts","src/focused/Focused.ts","src/index.ts","src/infinite_scroll/InfiniteScroll.ts","src/selected/Selected.ts","src/shortcuts/IShortcutsService.ts","src/shortcuts/Shortcut.ts","src/shortcuts/ShortcutBindingService.ts","src/shortcuts/ShortcutDirective.ts","src/shortcuts/ShortcutsService.ts","src/shortcuts/index.ts","src/unsaved_changes/UnsavedChanges.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","CancelDragLink_1","$element","find","attr","CancelDrag","restrict","link","$scope","$attrs","angular","directive","DragLink_1","$rootScope","$parse","$document","$window","pipDraggable","LONG_PRESS","_centerAnchor","_hasTouch","DocumentTouch","_pressEvents","_moveEvents","_releaseEvents","_data","_dragOffset","_dragEnabled","_pressTimer","_elementStyle","scrollParent","scrollContainer","element","_deregisterRootMoveListener","noop","value","ngDrag","_myid","$id","onDragStartCallback","pipDragStart","onDragMoveCallbak","pipDragMove","onDragStopCallback","pipDragStop","onDragSuccessCallback","pipDragSuccess","allowTransform","isDefined","$eval","getDragData","pipDragData","verticalScroll","pipVerticalScroll","horizontalScroll","pipHorizontalScroll","activationDistance","parseFloat","pipActivationDistance","scrollDistance","scrollContainerGetter","pipScrollContainer","css","initialize","prototype","dragHandles","querySelectorAll","_dragHandle","toggleListeners","parent","enable","_this","$on","onDestroy","$watch","pipDrag","newVal","oldVal","onEnableChange","pipCenterAnchor","onCenterAnchor","on","event","onpress","nodeName","toLowerCase","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","setTimeout","onlongpress","left","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","inputEvent","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","origEvent","hasClass","addClass","$broadcast","x","y","tx","ty","data","$apply","$data","$event","dragToScroll","moveElement","uid","dragOffset","extend","callback","onDragComplete","removeClass","reset","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","Drag","$inject","Object","defineProperty","DraggableService","touches","originalEvent","DropLink_1","$timeout","pipDrop","isTouching","onDropCallback","pipDropSuccess","onDragMoveCallback","onEnterCallback","pipEnter","onLeaveCallback","pipLeave","onDiactiveCallback","pipDiactive","obj","onDragStart","onDragMove","onDragEnd","_dropEnabled","updateDragStyles","$target","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","Drop","5","PreventDragLink_1","absorbEvent_","stopPropagation","cancelBubble","returnValue","./Drag","./DraggableService","./Drop","./PreventDrag","7","FocusedLink_1","$mdConstant","opacityDelta","opacityLimit","keydownListener","init","ngModel","pipFocusedData","selector","pipWithHidden","onFocusClass","pipFocusedClass","controls","controlsLength","checkTabindex","currentTarget","$","pipRebind","pipFocusedOpacity","color","oldBackgroundColor","rgba","pipFocusedColor","arr","split","red","blue","green","opacity","setTabindex","_","findIndex","c","pipFocusedTabindex","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","index","filter","focus","pipFocusedRebind","p","m","hasOwnProperty","./focused/Focused","./infinite_scroll/InfiniteScroll","./selected/Selected","./shortcuts/index","./unsaved_changes/UnsavedChanges","9","InfiniteScrollLink_1","$interval","THROTTLE_MILLISECONDS","checkWhenEnabled","immediateCheck","scrollEnabled","unregisterEventListener","useDocumentBottom","windowElement","onContainerScrollThrottle","throttle","onContainerScroll","unbind","v","handleScrollDistance","pipScrollDistance","handleScrollDisabled","pipScrollDisabled","handleScrollUseDocumentBottom","pipScrollUseDocumentBottom","pipScrollListenForEvent","newContainer","handleScrollContainer","pipScrollParent","changeContainer","pipScrolImmediateCheck","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","pipInfiniteScroll","bind","HTMLElement","append","parents","Array","isArray","InfiniteScroll","SelectedLink_1","touchBoundary","tapdelay","tapTimeout","indexGetter","pipSelected","indexSetter","assign","idGetter","pipSelectedId","idSetter","changeGetter","pipSelect","enterSpaceGetter","pipEnterSpacePress","noScroll","pipNoScroll","modifier","pipSkipHidden","className","pipTreeList","selectedIndex","currentElementTabinex","pipSelectedWatch","isScrolled","onClickEvent","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onKeyDown","onFocusIn","onFocusOut","newSelectedId","selectItem","itemId","raiseEvent","newSelectedIndex","itemIndex","items","itemParams","itemsLength","item","undefined","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedId","onSelect","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","getTargetElementFromEventTarget","eventTarget","nodeType","Node","TEXT_NODE","parentNode","touchHasMoved","touch","changedTouches","boundary","Math","abs","touchStartX","touchStartY","ev","targetElement","trackingClick","trackingClickStart","timeStamp","lastClickTime","cancelNextClick","ENTER","SPACE","inc","scope","Selected","11","ShortcutItem","ShortcutsConfig","globalShortcuts","localShortcuts","12","KeyboardEvent","Keydown","Keyup","Keypress","ShortcutOptions","Shortcut","shorcutCombination","option","shift_nums","`","2","3","4","6","8","0","-","=",";","'",",",".","/","\\","special_keys","esc","escape","tab","space","return","enter","backspace","scrolllock","scroll_lock","scroll","capslock","caps_lock","caps","numlock","num_lock","num","pause","break","insert","home","delete","end","pageup","page_up","pu","pagedown","page_down","pd","up","down","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","modifiers","shift","wanted","pressed","ctrl","alt","meta","shorcut","Type","DisableInInput","element_1","srcElement","tagName","character","String","fromCharCode","keys","kp","ctrlKey","shiftKey","altKey","metaKey","k","Keycode","Propagate","ShortcutBindingService_1","$log","_shortcuts","_log","_defaultOption","defaults","getDefaultOption","Shortcut_1","Target","get","enumerable","configurable","add","shortcut","remove","shortcutOption","shortcutCombination","getElementById","error","newKeyboardShortcut","addEventListener","eventCallback","attachEvent","binding","detachEvent","removeEventListener","ShortcutBindingProvider","_option","set","$get","_service","provider","14","ShortcutController","pipShortcutBinding","pipShortcutAction","actionShortcuts","pipShortcutName","isString","nameShortcuts","options","pipShorcutOptions","keypressShortcut","action","shortcutsDirective","ShortcutsChangedEvent","ShortcutsService","config","$location","$injector","_config","_oldConfig","cloneDeep","addShortcuts","sendChangeEvent","removeShortcuts","$emit","collection","access","isFunction","keypress","href","location","url","state","has","$state","stateParams","generalOptions","defaultOptions","targetId","ShortcutsProvider","IShortcutsService_1","./IShortcutsService","16","__export","./ShortcutBindingService","./ShortcutDirective","./ShortcutsService","17","onbeforeunload","unsavedChangesAvailable","unsavedChangesMessage","unbindFunc","confirm","cancelLeave","afterLeave"],"mappings":"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","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    class CancelDragLink {\r\n        constructor(\r\n            $element: JQuery\r\n        ) {\r\n            $element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n        }\r\n    }\r\n\r\n    const CancelDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new CancelDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipCancelDrag', CancelDrag);\r\n}","import {\r\n    IDraggableService\r\n} from './DraggableService';\r\n\r\n{\r\n    interface IDragLinkScope extends ng.IScope {\r\n        value: any;\r\n    }\r\n\r\n    interface IDragLinkAttributes extends ng.IAttributes {\r\n        ngDrag: any;\r\n        pipDragStart: any;\r\n        pipDragMove: any;\r\n        pipDragStop: any;\r\n        pipDragSuccess: any;\r\n        allowTransform: any;\r\n        pipDragData: any;\r\n        pipVerticalScroll: any;\r\n        pipHorizontalScroll: any;\r\n        pipActivationDistance: any;\r\n        pipScrollContainer: any;\r\n        pipDrag: any;\r\n        pipCenterAnchor: any;\r\n    }\r\n\r\n    class DragLink {\r\n        private LONG_PRESS: number = 50; // 50ms for longpress\r\n        private offset: any;\r\n        private _centerAnchor: boolean = false;\r\n        private _mx: number;\r\n        private _my: number;\r\n        private _tx: number;\r\n        private _ty: number;\r\n        private _mrx: number;\r\n        private _mry: number;\r\n        private _hasTouch: boolean = ('ontouchstart' in window) || ( < any > window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n        private _pressEvents: string = 'touchstart mousedown';\r\n        private _moveEvents: string = 'touchmove mousemove';\r\n        private _releaseEvents: string = 'touchend mouseup';\r\n        private _dragHandle: any;\r\n\r\n        // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n        private _myid: string | number;\r\n        private _data: any = null;\r\n\r\n        private _dragOffset: any = null;\r\n\r\n        private _dragEnabled: boolean = false;\r\n\r\n        private _pressTimer: any = null;\r\n\r\n        private _elementStyle: any = {};\r\n\r\n        private onDragStartCallback: Function;\r\n        private onDragMoveCallbak: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragSuccessCallback: Function;\r\n        private allowTransform: boolean;\r\n\r\n        private getDragData: any;\r\n        private verticalScroll: boolean;\r\n        private horizontalScroll: boolean;\r\n        private activationDistance: number;\r\n        private scrollDistance: number;\r\n        private scrollParent: boolean = false;\r\n\r\n        private scrollContainer: JQuery = angular.element(window);\r\n        private scrollContainerGetter: any;\r\n\r\n        // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n        private _deregisterRootMoveListener: Function = angular.noop;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $window: ng.IWindowService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDragLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDragLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.ngDrag;\r\n            this._myid = $scope.$id;\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart) || null;\r\n            this.onDragMoveCallbak = $parse($attrs.pipDragMove) || null;\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop) || null;\r\n            this.onDragSuccessCallback = $parse($attrs.pipDragSuccess) || null;\r\n            this.allowTransform = angular.isDefined($attrs.allowTransform) ? $scope.$eval($attrs.allowTransform) : false;\r\n\r\n            this.getDragData = $parse($attrs.pipDragData);\r\n            this.verticalScroll = $attrs.pipVerticalScroll || true;\r\n            this.horizontalScroll = $attrs.pipHorizontalScroll || true;\r\n            this.activationDistance = parseFloat($attrs.pipActivationDistance) || 75;\r\n            this.scrollDistance = parseFloat($attrs.pipActivationDistance) || 50;\r\n            this.scrollContainerGetter = $parse($attrs.pipScrollContainer);\r\n\r\n            this.$element.css('cursor', 'move');\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false'); // prevent native drag\r\n            // check to see if drag handle(s) was specified\r\n            // if querySelectorAll is available, we use this instead of find\r\n            // as JQLite find is limited to tagnames\r\n            let dragHandles: any;\r\n            if (this.$element[0].querySelectorAll) {\r\n                dragHandles = angular.element(this.$element[0].querySelectorAll('[pip-drag-handle]'));\r\n            } else {\r\n                dragHandles = this.$element.find('[pip-drag-handle]');\r\n            }\r\n            if (dragHandles.length) {\r\n                this._dragHandle = dragHandles;\r\n            }\r\n            this.toggleListeners(true);\r\n\r\n            // Initialize scroll container\r\n            if (this.scrollParent) {\r\n                this.scrollContainer = angular.element(this.$element.parent());\r\n            } else if (this.$attrs.pipScrollContainer) {\r\n                this.scrollContainer = angular.element(this.scrollContainerGetter(this.$scope));\r\n            } else {\r\n                this.scrollContainer = angular.element(window);\r\n            }\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            if (!enable) return;\r\n            // add listeners.\r\n\r\n            this.$scope.$on('$destroy', () => {\r\n                this.onDestroy(enable);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipDrag, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipCenterAnchor, (newVal, oldVal) => {\r\n                this.onCenterAnchor(newVal, oldVal);\r\n            });\r\n            // wire up touch events\r\n            if (this._dragHandle) {\r\n                // handle(s) specified, use those to initiate drag\r\n                this._dragHandle.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            } else {\r\n                // no handle(s) specified, use the element as the handle\r\n                this.$element.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            }\r\n            if (!this._hasTouch && this.$element[0].nodeName.toLowerCase() == \"img\") {\r\n                this.$element.on('mousedown', () => {\r\n                    return false;\r\n                }); // prevent native drag for images\r\n            }\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dragEnabled = (newVal);\r\n        }\r\n\r\n        private onCenterAnchor(newVal, oldVal) {\r\n            if (angular.isDefined(newVal))\r\n                this._centerAnchor = (newVal || 'true');\r\n        }\r\n\r\n        private isClickableElement(evt) {\r\n            return (\r\n                angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n            );\r\n        }\r\n\r\n        /*\r\n         * When the element is clicked start the drag behaviour\r\n         * On touch devices as a small delay so as not to prevent native window scrolling\r\n         */\r\n        private onpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n\r\n            if (this.isClickableElement(evt)) {\r\n                return;\r\n            }\r\n\r\n            if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                // Do not start dragging on right-click\r\n                return;\r\n            }\r\n\r\n            this.saveElementStyles();\r\n\r\n            if (this._hasTouch) {\r\n                this.cancelPress();\r\n                this._pressTimer = setTimeout(() => {\r\n                    this.cancelPress();\r\n                    this.onlongpress(evt);\r\n                }, this.LONG_PRESS);\r\n                this.$document.on(this._moveEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n                this.$document.on(this._releaseEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n            } else {\r\n                this.onlongpress(evt);\r\n            }\r\n        }\r\n\r\n        private saveElementStyles() {\r\n            this._elementStyle.left = this.$element.css('left') || 0;\r\n            this._elementStyle.top = this.$element.css('top') || 0;\r\n            this._elementStyle.position = this.$element.css('position');\r\n            this._elementStyle.width = this.$element.css('width');\r\n        }\r\n\r\n        private cancelPress() {\r\n            clearTimeout(this._pressTimer);\r\n            this.$document.off(this._moveEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n            this.$document.off(this._releaseEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n        }\r\n\r\n        private onlongpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n\r\n            this.offset = this.$element[0].getBoundingClientRect();\r\n            if (this.allowTransform)\r\n                this._dragOffset = this.offset;\r\n            else {\r\n                this._dragOffset = {\r\n                    left: document.body.scrollLeft,\r\n                    top: document.body.scrollTop\r\n                };\r\n            }\r\n\r\n\r\n            ( < any > this.$element).centerX = this.$element[0].offsetWidth / 2;\r\n            ( < any > this.$element).centerY = this.$element[0].offsetHeight / 2;\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n            this._mrx = this._mx - this.offset.left;\r\n            this._mry = this._my - this.offset.top;\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this.$window.pageXOffset;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this.$window.pageYOffset;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this.$window.pageXOffset;\r\n                this._ty = this._my - this._mry - this.$window.pageYOffset;\r\n            }\r\n\r\n            this.$document.on(this._moveEvents, (event) => {\r\n                this.onmove(event);\r\n            });\r\n            this.$document.on(this._releaseEvents, (event) => {\r\n                this.onrelease(event);\r\n            });\r\n            // This event is used to receive manually triggered mouse move events\r\n            // jqLite unfortunately only supports triggerHandler(...)\r\n            // See http://api.jquery.com/triggerHandler/\r\n            // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n            this._deregisterRootMoveListener = this.$rootScope.$on('draggable:_triggerHandlerMove', (event, origEvent) => {\r\n                this.onmove(origEvent);\r\n            });\r\n        }\r\n\r\n        private onmove(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n            if (!this.$element.hasClass('pip-dragging')) {\r\n                this._data = this.getDragData(this.$scope);\r\n                this.$element.addClass('pip-dragging');\r\n                this.$rootScope.$broadcast('draggable:start', {\r\n                    x: this._mx,\r\n                    y: this._my,\r\n                    tx: this._tx,\r\n                    ty: this._ty,\r\n                    event: evt,\r\n                    element: this.$element,\r\n                    data: this._data\r\n                });\r\n\r\n                if (this.onDragStartCallback) {\r\n                    this.$scope.$apply(() => {\r\n                        this.onDragStartCallback(this.$scope, {\r\n                            $data: this._data,\r\n                            $event: evt\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n\r\n            if (this.horizontalScroll || this.verticalScroll) {\r\n                this.dragToScroll();\r\n            }\r\n\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this._dragOffset.left;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this._dragOffset.top;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this._dragOffset.left;\r\n                this._ty = this._my - this._mry - this._dragOffset.top;\r\n            }\r\n\r\n            this.moveElement(this._tx, this._ty);\r\n            \r\n            this.$rootScope.$broadcast('draggable:move', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                uid: this._myid,\r\n                dragOffset: this._dragOffset\r\n            });\r\n\r\n            if (this.onDragMoveCallbak) {\r\n                this.$scope.$apply(() => {\r\n                    this.onDragMoveCallbak(this.$scope, {\r\n                        $data: this._data,\r\n                        $event: angular.extend(evt, ),\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onrelease(evt) {\r\n            if (!this._dragEnabled)\r\n                return;\r\n            evt.preventDefault();\r\n            this.$rootScope.$broadcast('draggable:end', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                callback: this.onDragComplete,\r\n                uid: this._myid\r\n            });\r\n            this.$element.removeClass('pip-dragging');\r\n            this.$element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n            this.reset();\r\n            this.$document.off(this._moveEvents);\r\n            this.$document.off(this._releaseEvents);\r\n            if (this.onDragStopCallback) {\r\n                this.$scope.$apply(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: this._data,\r\n                        $event: evt\r\n                    });\r\n                });\r\n            }\r\n\r\n            this._deregisterRootMoveListener();\r\n        }\r\n\r\n        private onDragComplete(evt) {\r\n            if (!this.onDragSuccessCallback) return;\r\n\r\n            this.$scope.$apply(() => {\r\n                this.onDragSuccessCallback(this.$scope, {\r\n                    $data: this._data,\r\n                    $event: evt\r\n                });\r\n            });\r\n        }\r\n\r\n        private reset() {\r\n            if (this.allowTransform)\r\n                this.$element.css({\r\n                    transform: '',\r\n                    'z-index': '',\r\n                    '-webkit-transform': '',\r\n                    '-ms-transform': ''\r\n                });\r\n            else {\r\n                this.$element.css({\r\n                    position: this._elementStyle.position,\r\n                    top: this._elementStyle.top,\r\n                    left: this._elementStyle.left,\r\n                    'z-index': '',\r\n                    width: this._elementStyle.width\r\n                });\r\n            }\r\n        }\r\n\r\n        private moveElement(x, y) {\r\n            const eWidth = this.$element.css('width');\r\n            if (this.allowTransform) {\r\n                this.$element.css({\r\n                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    'z-index': 99999,\r\n                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                });\r\n            } else {\r\n                this.$element.css({\r\n                    'left': x + 'px',\r\n                    'top': y + 'px',\r\n                    'position': 'fixed',\r\n                    'z-index': 100,\r\n                    width: eWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        private dragToScroll() {\r\n            let scrollX = 0,\r\n                scrollY = 0,\r\n                offset = (element) => {\r\n                    return element.offset() || {\r\n                        left: 0,\r\n                        top: 0\r\n                    };\r\n                };\r\n\r\n            if (this.horizontalScroll) {\r\n                const\r\n                    containerLeft = offset(this.scrollContainer).left,\r\n                    containerWidth = this.scrollContainer.innerWidth(),\r\n                    containerRight = containerLeft + containerWidth;\r\n\r\n                if ((this._mx - containerLeft) < this.activationDistance) {\r\n                    scrollX = -this.scrollDistance;\r\n                } else if ((containerRight - this._mx) < this.activationDistance) {\r\n                    scrollX = this.scrollDistance;\r\n                }\r\n            }\r\n\r\n            if (this.verticalScroll) {\r\n                const\r\n                    containerTop = offset(this.scrollContainer).top,\r\n                    containerHeight = this.scrollContainer.innerHeight(),\r\n                    containerBottom = containerTop + containerHeight;\r\n\r\n                if ((this._my - containerTop) < this.activationDistance) {\r\n                    scrollY = -this.scrollDistance + 30;\r\n                } else if ((containerBottom - this._my) < this.activationDistance) {\r\n                    scrollY = this.scrollDistance - 30;\r\n                }\r\n            }\r\n            if (scrollX !== 0 || scrollY !== 0) {\r\n                const\r\n                    containerScrollLeft = this.scrollContainer.scrollLeft(),\r\n                    containerScrollTop = this.scrollContainer.scrollTop();\r\n\r\n                this.scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                this.scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const Drag = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $window: ng.IWindowService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDragLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDragLinkAttributes\r\n            ) {\r\n                new DragLink($rootScope, $parse, $document, $window, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrag', Drag);\r\n}","export interface IDraggableService {\r\n    inputEvent(event: any);\r\n}\r\n\r\nclass DraggableService implements IDraggableService {\r\n    public inputEvent(event) {\r\n        if (angular.isDefined(event.touches)) {\r\n            return event.touches[0];\r\n        }\r\n        //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n        else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n            return event.originalEvent.touches[0];\r\n        }\r\n        return event;\r\n    };\r\n}\r\n\r\nangular\r\n    .module(\"pipDraggable\")\r\n    .service('pipDraggable', DraggableService);\r\n    ","import {\r\n    IDraggableService\r\n} from './DraggableService';\r\n\r\n{\r\n    interface IDropLinkScope extends ng.IScope {\r\n        value: any;\r\n        isTouching: any;\r\n    }\r\n\r\n    interface IDropLinkAttributes extends ng.IAttributes {\r\n        pipDrop: any;\r\n        pipDropSuccess: any;\r\n        pipDragStart: any;\r\n        pipDragStop: any;\r\n        pipDragMove: any;\r\n        pipEnter: any;\r\n        pipLeave: any;\r\n        pipDiactive: any;\r\n    }\r\n\r\n    class DropLink {\r\n\r\n        private _lastDropTouch: any;\r\n        private _myid: number | string;\r\n        private _dropEnabled: boolean;\r\n\r\n        private onDropCallback: Function; // || function(){};\r\n        private onDragStartCallback: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragMoveCallback: Function;\r\n        private onEnterCallback: Function;\r\n        private onLeaveCallback: Function;\r\n        private onDiactiveCallback: Function;\r\n\r\n        constructor(\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDropLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDropLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.pipDrop;\r\n            $scope.isTouching = false;\r\n\r\n            this._myid = $scope.$id;\r\n            this.onDropCallback = $parse($attrs.pipDropSuccess); // || function(){};\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart);\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop);\r\n            this.onDragMoveCallback = $parse($attrs.pipDragMove);\r\n            this.onEnterCallback = $parse($attrs.pipEnter);\r\n            this.onLeaveCallback = $parse($attrs.pipLeave);\r\n            this.onDiactiveCallback = $parse($attrs.pipDiactive);\r\n\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$scope.$watch(this.$attrs.pipDrop, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$on('$destroy', (event) => {\r\n                this.onDestroy(event);\r\n            });\r\n            this.$scope.$on('draggable:start', (evt, obj) => {\r\n                this.onDragStart(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:move', (evt, obj) => {\r\n                this.onDragMove(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:end', (evt, obj) => {\r\n                this.onDragEnd(evt, obj);\r\n            });\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dropEnabled = newVal;\r\n        }\r\n\r\n        private onDragStart(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element, evt, obj);\r\n\r\n            if (this.$attrs.pipDragStart) {\r\n                this.$timeout(() => {\r\n                    this.onDragStartCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragMove(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element, evt, obj);\r\n\r\n            if (this.$attrs.pipDragMove) {\r\n                this.$timeout(() => {\r\n                    this.onDragMoveCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragEnd(evt, obj) {\r\n            // don't listen to drop events if this is the element being dragged\r\n            // only update the styles and return\r\n            if (!this._dropEnabled) {\r\n                this.updateDragStyles(false, obj.element);\r\n                return;\r\n            }\r\n\r\n            if (this.isTouching(obj.x, obj.y, obj.element, evt, obj)) {\r\n                // call the pipDraggable pipDragSuccess element callback\r\n                if (obj.callback) {\r\n                    obj.callback(obj);\r\n                }\r\n\r\n                if (this.$attrs.pipDropSuccess) {\r\n                    this.$timeout(() => {\r\n                        this.onDropCallback(this.$scope, {\r\n                            $data: obj.data,\r\n                            $event: obj,\r\n                            $target: this.$scope.$eval(this.$scope.value)\r\n                        });\r\n                    });\r\n                }\r\n\r\n                if (this.$attrs.pipDiactive) {\r\n                    this.$timeout(() => {\r\n                        this.onDiactiveCallback(this.$scope, {\r\n                            $data: obj.data,\r\n                            $event: obj,\r\n                            $target: this.$scope.$eval(this.$scope.value)\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.$attrs.pipDragStop) {\r\n                this.$timeout(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.updateDragStyles(false, obj.element);\r\n        }\r\n\r\n        private isTouching(mouseX, mouseY, dragElement, evt, obj) {\r\n            const touching = this.hitTest(mouseX, mouseY);\r\n            if (touching !== this.$scope.isTouching) {\r\n                if (touching) {\r\n                    this.onEnterCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj,\r\n                        $target: this.$scope.$eval(this.$scope.value)\r\n                    });\r\n                } else {\r\n                    this.onLeaveCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj,\r\n                        $target: this.$scope.$eval(this.$scope.value)\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.$scope.isTouching = touching;\r\n            if (touching) {\r\n                this._lastDropTouch = this.$element;\r\n            }\r\n            this.updateDragStyles(touching, dragElement);\r\n            return touching;\r\n        }\r\n\r\n        private updateDragStyles(touching, dragElement) {\r\n            if (touching) {\r\n                this.$element.addClass('pip-drag-enter');\r\n                dragElement.addClass('pip-drag-over');\r\n            } else if (this._lastDropTouch == this.$element) {\r\n                this._lastDropTouch = null;\r\n                this.$element.removeClass('pip-drag-enter');\r\n                dragElement.removeClass('pip-drag-over');\r\n            }\r\n        };\r\n\r\n        private hitTest(x, y) {\r\n            const bounds = this.$element[0].getBoundingClientRect();\r\n            x -= this.$document[0].body.scrollLeft + this.$document[0].documentElement.scrollLeft;\r\n            y -= this.$document[0].body.scrollTop + this.$document[0].documentElement.scrollTop;\r\n            return x >= bounds.left &&\r\n                x <= bounds.right &&\r\n                y <= bounds.bottom &&\r\n                y >= bounds.top;\r\n        }\r\n    }\r\n\r\n    const Drop = function (\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDropLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDropLinkAttributes\r\n            ) {\r\n                new DropLink($parse, $document, $timeout, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrop', Drop);\r\n}","{\r\n\r\n    class PreventDragLink {\r\n        constructor(\r\n            private $element: JQuery\r\n        ) {\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false');\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$element.on('mousedown touchstart touchmove touchend touchcancel', (event) => { this.absorbEvent_(event); });\r\n        }\r\n\r\n        private absorbEvent_(event) {\r\n            const e = event.originalEvent;\r\n            e.preventDefault && e.preventDefault();\r\n            e.stopPropagation && e.stopPropagation();\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    const PreventDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new PreventDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipPreventDrag', PreventDrag);\r\n}","angular.module(\"pipDraggable\", []);\r\n\r\nimport './DraggableService';\r\nimport './Drag';\r\nimport './Drop';\r\nimport './PreventDrag';\r\nimport './CancelDrag';\r\n","{\r\n    interface FocusedScope extends ng.IScope {\r\n        pipFocusedColor: Function;\r\n        pipFocusedClass: Function;\r\n        pipFocusedRebind: Function;\r\n        pipFocusedTabindex: Function;\r\n        pipFocusedOpacity: Function;\r\n        pipFocusedData: Function;\r\n        pipWithHidden: Function;\r\n        pipRebind: Function;\r\n    }\r\n\r\n    interface FocusedAttributes extends ng.IAttributes {\r\n        ngModel: any;\r\n        pipFocusedData: any;\r\n    }\r\n\r\n    class FocusedLink implements ng.IDirective {\r\n        private controls: JQuery;\r\n        private controlsLength: number;\r\n        private color: string;\r\n        private opacityDelta: number = 0.4;\r\n        private opacityLimit: number = 0.5;\r\n        private oldBackgroundColor: string;\r\n        private onFocusClass: string;\r\n\r\n        constructor(\r\n            private $scope: FocusedScope,\r\n            private $element: JQuery,\r\n            $attrs: FocusedAttributes,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $mdConstant: any,\r\n            private $window: ng.IWindowService\r\n        ) {\r\n\r\n            $element.on('keydown', (e) => {\r\n                this.keydownListener(e);\r\n            });\r\n\r\n            $timeout(() => {\r\n                this.init();\r\n            });\r\n\r\n            if ($attrs.ngModel) {\r\n                $scope.$watch('ngModel', function () {\r\n                    $timeout(this.init);\r\n                }, true);\r\n            }\r\n\r\n            if ($attrs.pipFocusedData) {\r\n                $scope.$watch('pipFocusedData', function () {\r\n                    $timeout(this.init);\r\n                }, true);\r\n            }\r\n        }\r\n\r\n        private init() {\r\n            const selector = this.$scope.pipWithHidden && this.$scope.pipWithHidden() ? '.pip-focusable' : '.pip-focusable:visible';\r\n            this.onFocusClass = this.$scope.pipFocusedClass ? this.$scope.pipFocusedClass() : '';\r\n            this.controls = this.$element.find(selector);\r\n            this.controlsLength = this.controls.length;\r\n            this.checkTabindex(this.controls);\r\n            // Add event listeners\r\n            this.controls.on('focus', (event) => {\r\n                const target = event.currentTarget;\r\n                if ($(target).hasClass('md-focused')) {\r\n                    return;\r\n                }\r\n                if (this.$scope.pipRebind && this.$scope.pipRebind()) {\r\n                    this.init();\r\n                }\r\n                this.$element.addClass('pip-focused-container');\r\n                $(target).addClass(this.onFocusClass);\r\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\r\n\r\n                    this.color = $(target).css('backgroundColor');\r\n                    this.oldBackgroundColor = this.color;\r\n                    $(target).css('backgroundColor', this.rgba(this.color));\r\n                    $(target).addClass('md-focused');\r\n                } else {\r\n                    $(target).addClass('md-focused md-focused-opacity');\r\n                }\r\n\r\n            }).on('focusout', (event) => {\r\n                const target = event.currentTarget;\r\n                if (!$(target).hasClass('md-focused')) {\r\n                    return;\r\n                }\r\n                this.$element.removeClass('pip-focused-container');\r\n                $(target).removeClass(this.onFocusClass);\r\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\r\n                    $(target).css('backgroundColor', this.oldBackgroundColor);\r\n                    $(target).removeClass('md-focused md-focused-opacity');\r\n                } else {\r\n                    $(target).removeClass('md-focused');\r\n                }\r\n            });\r\n        }\r\n\r\n        private rgba(color) {\r\n            if (this.$scope.pipFocusedColor && this.$scope.pipFocusedColor()) {\r\n                return this.$scope.pipFocusedColor();\r\n            }\r\n\r\n            const arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\r\n            if (!arr || arr.length < 3) {\r\n                return ''\r\n            }\r\n\r\n            let red, blue, green, opacity;\r\n\r\n            opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\r\n            red = arr[0];\r\n            blue = arr[1];\r\n            green = arr[2];\r\n\r\n            if (opacity < this.opacityLimit) {\r\n                opacity += this.opacityDelta;\r\n            } else {\r\n                opacity -= this.opacityDelta;\r\n            }\r\n\r\n            return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\r\n        }\r\n\r\n        private setTabindex(element, value) {\r\n            element.attr('tabindex', value);\r\n        }\r\n\r\n        private checkTabindex(controls) {\r\n            const index = _.findIndex(controls, (c) => {\r\n                return c['tabindex'] > -1;\r\n            });\r\n\r\n            if (index == -1 && controls.length > 0 && this.$scope.pipFocusedTabindex) {\r\n                this.setTabindex(angular.element(controls[0]), this.$scope.pipFocusedTabindex());\r\n            }\r\n        }\r\n\r\n        private keydownListener(e) {\r\n            const keyCode = e.which || e.keyCode;\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                e.preventDefault();\r\n\r\n                const\r\n                    increment = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    moveToControl = this.controls.index(this.controls.filter(\".md-focused\")) + increment;\r\n                // Move focus to next control\r\n                if (moveToControl >= 0 && moveToControl < this.controlsLength) {\r\n                    this.controls[moveToControl].focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const Focused = function ($timeout: ng.ITimeoutService, \r\n        $mdConstant: any, \r\n        $window: ng.IWindowService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipFocusedColor: '&?',\r\n                pipFocusedClass: '&?',\r\n                pipFocusedRebind: '&?',\r\n                pipFocusedTabindex: '&?',\r\n                pipFocusedOpacity: '&?',\r\n                pipFocusedData: '&?',\r\n                pipWithHidden: '&?',\r\n                pipRebind: '&?'\r\n            },\r\n            link: function($scope: FocusedScope, $element: JQuery, $attrs: FocusedAttributes) {\r\n                new FocusedLink($scope, $element, $attrs, $timeout, $mdConstant, $window);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipFocused\", [])\r\n        .directive('pipFocused', Focused);\r\n}","﻿import './unsaved_changes/UnsavedChanges';\r\nimport './shortcuts/index';\r\nimport './focused/Focused';\r\nimport './draggable/index';\r\nimport './selected/Selected';\r\nimport './infinite_scroll/InfiniteScroll';\r\n\r\nangular.module('pipBehaviors', [\r\n    'pipFocused',\r\n    'pipSelected',\r\n    'pipInfiniteScroll',\r\n    'pipUnsavedChanges',\r\n    'pipDraggable',\r\n    'pipShortcuts'\r\n]);\r\n\r\nexport * from './shortcuts/index';\r\n","{\r\n    interface InfiniteScrollScope extends ng.IScope {\r\n        pipInfiniteScroll: Function;\r\n        pipScrollContainer: JQuery;\r\n        pipScrollDistance: number | string;\r\n        pipScrollDisabled: boolean;\r\n        pipScrollUseDocumentBottom: boolean;\r\n        pipScrollListenForEvent: string;\r\n    }\r\n\r\n    interface InfiniteScrollAttributes extends ng.IAttributes {\r\n        pipScrollParent: any;\r\n        pipScrolImmediateCheck: any;\r\n    }\r\n\r\n    class InfiniteScrollLink {\r\n        private THROTTLE_MILLISECONDS: number = 500;\r\n        private checkWhenEnabled = null;\r\n        private scrollContainer = null;\r\n        private immediateCheck = true;\r\n        private scrollDistance = null;\r\n        private scrollEnabled = null;\r\n        private unregisterEventListener = null;\r\n        private useDocumentBottom = false;\r\n        private windowElement = null;\r\n        private onContainerScrollThrottle: Function;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $window: ng.IWindowService,\r\n            private $interval: ng.IIntervalService,\r\n            private $scope: InfiniteScrollScope,\r\n            private $element: JQuery,\r\n            private $attrs: InfiniteScrollAttributes\r\n        ) {\r\n            this.windowElement = angular.element($window);\r\n\r\n            this.onContainerScrollThrottle = _.throttle(() => {\r\n                this.onContainerScroll();\r\n            }, this.THROTTLE_MILLISECONDS);\r\n\r\n            $scope.$on('$destroy', () => {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n                if (this.unregisterEventListener !== null) {\r\n                    this.unregisterEventListener();\r\n                    return this.unregisterEventListener = null;\r\n                }\r\n            });\r\n\r\n            $scope.$watch('pipScrollDistance', (v) => {\r\n                this.handleScrollDistance(v);\r\n            });\r\n            this.handleScrollDistance($scope.pipScrollDistance);\r\n\r\n            $scope.$watch('pipScrollDisabled', (v) => {\r\n                this.handleScrollDisabled(v);\r\n            });\r\n            this.handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n            $scope.$watch('pipScrollUseDocumentBottom', (v) => {\r\n                this.handleScrollUseDocumentBottom(v);\r\n            });\r\n            this.handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n            this.changeContainer(this.windowElement);\r\n            if ($scope.pipScrollListenForEvent) {\r\n                this.unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            $scope.$watch('pipScrollContainer', (newContainer) => {\r\n                if (newContainer != this.scrollContainer)\r\n                    this.handleScrollContainer(newContainer);\r\n            });\r\n            this.handleScrollContainer($scope.pipScrollContainer || []);\r\n\r\n            if ($attrs.pipScrollParent !== null) {\r\n                this.changeContainer(angular.element($element.parent()));\r\n            }\r\n            if ($attrs.pipScrolImmediateCheck !== null) {\r\n                this.immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n            }\r\n\r\n            $interval((function () {\r\n                if (this.immediateCheck) {\r\n                    return this.onContainerScrollThrottle();\r\n                }\r\n            }), 0, 1);\r\n        }\r\n\r\n        private height(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(element.offsetHeight)) {\r\n                return element.document.documentElement.clientHeight;\r\n            } else {\r\n                return element.offsetHeight;\r\n            }\r\n        }\r\n\r\n        private offsetTop(element) {\r\n            if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                return;\r\n            }\r\n            return element[0].getBoundingClientRect().top + this.pageYOffset(element);\r\n        }\r\n\r\n        private pageYOffset(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(window.pageYOffset)) {\r\n                return element.document.documentElement.scrollTop;\r\n            } else {\r\n                return element.ownerDocument.defaultView.pageYOffset;\r\n            }\r\n        }\r\n\r\n        private onContainerScroll() {\r\n            let containerBottom,\r\n                containerTopOffset,\r\n                elementBottom,\r\n                remaining,\r\n                shouldScroll;\r\n\r\n            if (this.scrollContainer === this.windowElement) {\r\n                containerBottom = this.height(this.scrollContainer) + this.pageYOffset(this.scrollContainer[0].document.documentElement);\r\n                elementBottom = this.offsetTop(this.$element) + this.height(this.$element);\r\n            } else {\r\n                containerBottom = this.height(this.scrollContainer);\r\n                containerTopOffset = 0;\r\n                if (this.offsetTop(this.scrollContainer) !== void 0) {\r\n                    containerTopOffset = this.offsetTop(this.scrollContainer);\r\n                }\r\n                elementBottom = this.offsetTop(this.$element) - containerTopOffset + this.height(this.$element);\r\n            }\r\n\r\n            if (this.useDocumentBottom) {\r\n                elementBottom = this.height((this.$element[0].ownerDocument || ( < any > this.$element[0]).document).documentElement);\r\n            }\r\n\r\n            remaining = elementBottom - containerBottom;\r\n            shouldScroll = remaining <= this.height(this.scrollContainer) * this.scrollDistance + 1;\r\n\r\n            if (shouldScroll) {\r\n                this.checkWhenEnabled = true;\r\n                if (this.scrollEnabled) {\r\n                    if (this.$scope.$$phase || this.$rootScope.$$phase) {\r\n                        return this.$scope.pipInfiniteScroll();\r\n                    } else {\r\n                        return this.$scope.$apply(() => {\r\n                            this.$scope.pipInfiniteScroll();\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                return this.checkWhenEnabled = false;\r\n            }\r\n        }\r\n\r\n        private handleScrollDistance(v) {\r\n            return this.scrollDistance = parseFloat(v) || 0;\r\n        }\r\n\r\n        private handleScrollDisabled(v) {\r\n            this.scrollEnabled = !v;\r\n            if (this.scrollEnabled && this.checkWhenEnabled) {\r\n                this.checkWhenEnabled = false;\r\n                this.onContainerScrollThrottle();\r\n            }\r\n        }\r\n\r\n        private handleScrollUseDocumentBottom(v) {\r\n            return this.useDocumentBottom = v;\r\n        }\r\n\r\n        private changeContainer(newContainer) {\r\n            if (this.scrollContainer) {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            this.scrollContainer = newContainer;\r\n            if (newContainer) {\r\n                return this.scrollContainer.bind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n        }\r\n\r\n        private handleScrollContainer(newContainer) {\r\n            if ((newContainer == null) || newContainer.length === 0) {\r\n                return;\r\n            }\r\n            if (newContainer instanceof HTMLElement) {\r\n                newContainer = angular.element(newContainer);\r\n            } else if (typeof newContainer.append === 'function') {\r\n                newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n            } else if (typeof newContainer === 'string') {\r\n                newContainer = this.$element.parents().find(newContainer);\r\n            }\r\n\r\n            if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                    (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                return this.changeContainer(newContainer);\r\n            } else {\r\n                throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const InfiniteScroll = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $interval: ng.IIntervalService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipInfiniteScroll: '&',\r\n                pipScrollContainer: '=',\r\n                pipScrollDistance: '=',\r\n                pipScrollDisabled: '=',\r\n                pipScrollUseDocumentBottom: '=',\r\n                pipScrollListenForEvent: '@'\r\n            },\r\n            link: function (\r\n                $scope: InfiniteScrollScope,\r\n                $element: JQuery,\r\n                $attrs: InfiniteScrollAttributes\r\n            ) {\r\n                new InfiniteScrollLink($rootScope, $window, $interval, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipInfiniteScroll\", [])\r\n        .directive('pipInfiniteScroll', InfiniteScroll);\r\n}","{\r\n    interface SelectedAttributes extends ng.IAttributes {\r\n        pipSelected: any;\r\n        pipSelectedId: any;\r\n        pipSelect: any;\r\n        pipEnterSpacePress: any;\r\n        pipNoScroll: any;\r\n        pipSkipHidden: any;\r\n        pipTreeList: any;\r\n        pipSelectedWatch: any;\r\n    }\r\n\r\n    class SelectedLink {\r\n        private indexGetter: any;\r\n        private indexSetter: any;\r\n        private idSetter: any;\r\n        private idGetter: any;\r\n        private changeGetter: any;\r\n        private enterSpaceGetter: any;\r\n        private noScroll: any;\r\n        private modifier: any;\r\n        private className: any;\r\n        private selectedIndex: any;\r\n        private currentElementTabinex: any;\r\n        private pipSelectedWatch: any;\r\n        private isScrolled: any;\r\n        // Variables for touch functions\r\n        private touchStartX: any;\r\n        private touchStartY: any;\r\n        private trackingClick: any;\r\n        private trackingClickStart: any;\r\n        private targetElement: any;\r\n        private lastClickTime: any;\r\n        private cancelNextClick: any;\r\n        // Constants for touch functions\r\n        private touchBoundary: number = 10;\r\n        private tapdelay: number = 200;\r\n        private tapTimeout: number = 700;\r\n\r\n        constructor(\r\n            $parse: ng.IParseService,\r\n            private $mdConstant: any,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $scope: ng.IScope,\r\n            private $element: JQuery,\r\n            private $attrs: SelectedAttributes\r\n        ) {\r\n            //todo add stopSelect parametr to disable select\r\n            this.indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null;\r\n            this.indexSetter = this.indexGetter ? this.indexGetter.assign : null;\r\n            this.idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null;\r\n            this.idSetter = this.idGetter ? this.idGetter.assign : null;\r\n            this.changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null;\r\n            this.enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null;\r\n            this.noScroll = $attrs.pipNoScroll;\r\n            this.modifier = $attrs.pipSkipHidden ? ':visible' : '';\r\n            this.className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable';\r\n            this.selectedIndex = this.indexGetter($scope);\r\n            this.currentElementTabinex = $element.attr('tabindex');\r\n            this.pipSelectedWatch = $attrs.pipSelectedWatch;\r\n            this.isScrolled = false;\r\n\r\n            $element.attr('tabindex', this.currentElementTabinex || 0);\r\n\r\n            $element.on('click', this.className, (event) => {\r\n                this.onClickEvent(event);\r\n            });\r\n            $element.on('touchstart', this.className, (event) => {\r\n                this.onTouchStart(event);\r\n            });\r\n            $element.on('touchmove', this.className, (event) => {\r\n                this.onTouchMove(event);\r\n            });\r\n            $element.on('touchend', this.className, (event) => {\r\n                this.onTouchEnd(event);\r\n            });\r\n            $element.on('touchcancel', this.className, (event) => {\r\n                this.onTouchCancel(event);\r\n            });\r\n            $element.on('keydown', (event) => {\r\n                this.onKeyDown(event);\r\n            });\r\n            $element.on('focusin', (event) => {\r\n                this.onFocusIn(event);\r\n            });\r\n            $element.on('focusout', (event) => {\r\n                this.onFocusOut(event);\r\n            });\r\n\r\n            // Watch selected item index\r\n            if (!$attrs.pipTreeList) {\r\n                $scope.$watch(this.indexGetter, (newSelectedIndex) => {\r\n                    this.selectItem({\r\n                        itemIndex: newSelectedIndex\r\n                    });\r\n                });\r\n            } else {\r\n                $scope.$watch(this.idGetter, (newSelectedId) => {\r\n                    $timeout(() => {\r\n                        this.selectItem({\r\n                            itemId: newSelectedId,\r\n                            raiseEvent: true\r\n                        });\r\n                    }, 0);\r\n                });\r\n            }\r\n\r\n            // Watch resync selection\r\n            if (this.pipSelectedWatch) {\r\n                $scope.$watch(this.pipSelectedWatch, () => {\r\n                    // Delay update to allow ng-repeat to update DOM\r\n                    $timeout(() => {\r\n                        this.selectedIndex = this.indexGetter($scope);\r\n                        this.selectItem({\r\n                            itemIndex: this.selectedIndex\r\n                        });\r\n                    }, 100);\r\n                });\r\n            }\r\n\r\n            // Select item defined by index\r\n            this.selectItem({\r\n                itemIndex: this.selectedIndex,\r\n                items: $element.find(this.className)\r\n            });\r\n        }\r\n\r\n        private selectItem(itemParams) {\r\n            if (this.isScrolled) return;\r\n            let itemIndex = itemParams.itemIndex,\r\n                itemId = itemParams.itemId,\r\n                items = itemParams.items || this.$element.find(this.className + this.modifier),\r\n                itemsLength = items.length,\r\n                item = () => {\r\n                    if (itemParams.item) return itemParams.item;\r\n                    if (itemIndex === undefined && itemIndex === -1) {\r\n                        itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                    }\r\n                    if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                        return items[itemIndex]\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                raiseEvent = itemParams.raiseEvent;\r\n                item = item();\r\n            if (item) {\r\n                this.$element.find(this.className).removeClass('selected md-focused');\r\n                item = <any>angular.element(item)\r\n                    .addClass('selected md-focused')\r\n                    .focus();\r\n                if (!this.noScroll) this.scrollToItem(item);\r\n                if (raiseEvent) this.defineSelectedIndex(items);\r\n            }\r\n        };\r\n\r\n        private defineSelectedIndex(items) {\r\n            const oldSelectedIndex = this.selectedIndex;\r\n            this.selectedIndex = -1;\r\n            for (var index = 0; index < items.length; index++) {\r\n                if ($(items[index]).hasClass('selected')) {\r\n                    this.selectedIndex = index;\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            const updateIndex = () => {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.indexSetter) this.indexSetter(this.$scope, this.selectedIndex);\r\n                if (this.idSetter) this.idSetter(this.$scope, selectedId);\r\n                onSelect();\r\n            };\r\n\r\n            const onSelect = () => {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.changeGetter) {\r\n                    this.changeGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            item: selectedItem,\r\n                            index: this.selectedIndex,\r\n                            id: selectedId,\r\n                            newIndex: this.selectedIndex,\r\n                            oldIndex: oldSelectedIndex\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Execute callback to notify about item select\r\n            if (oldSelectedIndex != this.selectedIndex && this.selectedIndex !== -1) {\r\n                this.$scope.$apply(() => { updateIndex(); });\r\n            } else {\r\n                this.$scope.$apply(() => { onSelect(); });\r\n            }\r\n        };\r\n\r\n        private scrollToItem($item) {\r\n            if (this.noScroll || !$item.offset()) return;\r\n\r\n            const\r\n                containerTop = this.$element.offset().top,\r\n                containerHeight = this.$element.height(),\r\n                containerBottom = containerTop + containerHeight,\r\n                itemTop = $item.offset().top,\r\n                itemHeight = $item.outerHeight(true),\r\n                itemBottom = itemTop + itemHeight,\r\n                containerScrollTop = this.$element.scrollTop();\r\n\r\n            this.isScrolled = true;\r\n            this.$timeout(() => {\r\n                this.isScrolled = false;\r\n            }, 100);\r\n\r\n            if (containerTop > itemTop) {\r\n                this.$element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n            } else if (containerBottom < itemBottom) {\r\n                this.$element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n            }\r\n        };\r\n\r\n        private getTargetElementFromEventTarget(eventTarget) {\r\n            // On some older browsers the event target may be a text node.\r\n            if (eventTarget.nodeType === Node.TEXT_NODE) {\r\n                return eventTarget.parentNode;\r\n            }\r\n\r\n            return eventTarget;\r\n        };\r\n\r\n        private touchHasMoved(event) {\r\n            const touch = event.changedTouches[0],\r\n                boundary = this.touchBoundary; // Touchmove boundary, beyond which a click will be cancelled.\r\n\r\n            if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        private onClickEvent(event) {\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n        }\r\n\r\n        private onTouchStart(event) {\r\n            const ev = event.originalEvent;\r\n            if (ev['targetTouches'].length > 1) {\r\n                return true;\r\n            }\r\n            const targetElement = this.getTargetElementFromEventTarget(ev.target),\r\n                touch = ev['targetTouches'][0];\r\n\r\n            this.trackingClick = true;\r\n            this.trackingClickStart = ev.timeStamp;\r\n            this.targetElement = targetElement;\r\n\r\n            this.touchStartX = touch.pageX;\r\n            this.touchStartY = touch.pageY;\r\n\r\n            /*if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                //  event.preventDefault();\r\n            }*/\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchMove(event) {\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // If the touch has moved, cancel the click tracking\r\n            if (this.targetElement !== this.getTargetElementFromEventTarget(ev.target) || this.touchHasMoved(ev)) {\r\n                this.trackingClick = false;\r\n                this.targetElement = null;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchEnd(event) {\r\n            let forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = this.targetElement;\r\n\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // Prevent phantom clicks on fast double-tap \r\n            if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                this.cancelNextClick = true;\r\n                return true;\r\n            }\r\n\r\n            if ((ev.timeStamp - this.trackingClickStart) > this.tapTimeout) {\r\n                return true;\r\n            }\r\n\r\n            // Reset to prevent wrong click cancel on input \r\n            this.cancelNextClick = false;\r\n\r\n            this.lastClickTime = event.timeStamp;\r\n\r\n            newTrackingClickStart = this.trackingClickStart;\r\n            this.trackingClick = false;\r\n            this.trackingClickStart = 0;\r\n\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        private onTouchCancel(event) {\r\n            this.trackingClick = false;\r\n            this.targetElement = null;\r\n        }\r\n\r\n        private onKeyDown(event) {\r\n            var keyCode = event.which || event.keyCode;\r\n\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.ENTER || keyCode == this.$mdConstant.KEY_CODE.SPACE) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (this.enterSpaceGetter) {\r\n                    this.enterSpaceGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            index: this.selectedIndex,\r\n                            item: this.$element.find('.selected')\r\n                        }\r\n                    });\r\n                }\r\n\r\n            } else\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW || keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                // Get next selectable control index\r\n                const items = this.$element.find(this.className + this.modifier),\r\n                    inc = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    newSelectedIndex = this.selectedIndex + inc;\r\n\r\n                // Set next control as selected\r\n                this.selectItem({\r\n                    itemIndex: newSelectedIndex,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusIn(event) {\r\n            // Choose selected element\r\n            let items,\r\n                selectedItem = this.$element.find(this.className + '.selected');\r\n\r\n            selectedItem.addClass('md-focused');\r\n\r\n            // If there are not selected elements then pick the first one\r\n            if (selectedItem.length === 0) {\r\n                this.selectedIndex = this.indexGetter(this.$scope);\r\n                items = this.$element.find(this.className + this.modifier);\r\n                this.selectItem({\r\n                    itemIndex: this.selectedIndex || 0,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusOut(event) {\r\n            this.$element.find(this.className + '.md-focused' + this.modifier).removeClass('md-focused');\r\n        }\r\n    }\r\n\r\n    const Selected = function (\r\n        $parse: ng.IParseService,\r\n        $mdConstant: any,\r\n        $timeout: ng.ITimeoutService\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: SelectedAttributes\r\n            ) {\r\n                new SelectedLink($parse, $mdConstant, $timeout, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipSelected\", [])\r\n        .directive('pipSelected', Selected);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\n\r\nexport class ShortcutItem {\r\n    // Shortcut combination\r\n    public shortcut: string;\r\n    // Target object \r\n    public target?: any;\r\n    // Target element by Id\r\n    public targetId?: string;\r\n    // Target element by class (firstelement??)\r\n    // Public targetClass?: string;\r\n    // Access function\r\n    public access?: (event: JQueryEventObject) => boolean;\r\n    // Window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public keypress?: (event: JQueryEventObject) => void;\r\n    // Default options\r\n    public options?: ShortcutOptions;    \r\n}\r\n\r\n// export class ShortcutItem extends SimpleShortcutItem {\r\n//     public shortcuts: SimpleShortcutItem[];\r\n// }\r\n\r\nexport class ShortcutsConfig {\r\n    // Global shortcut \r\n    public globalShortcuts: ShortcutItem[] = [];\r\n    // Local shortcut \r\n    public localShortcuts: ShortcutItem[] = [];\r\n    // Default options\r\n    public defaultOptions: ShortcutOptions = null;\r\n}\r\n\r\nexport interface IShortcutsService {\r\n    readonly config: ShortcutsConfig;\r\n\r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n}\r\n\r\nexport interface IShortcutsProvider extends ng.IServiceProvider {\r\n    config: ShortcutsConfig;\r\n    \r\n    globalShortcuts: ShortcutItem[];\r\n    defaultOptions: ShortcutOptions;\r\n}\r\n","export class KeyboardEvent {\r\n    static Keydown: string = 'keydown';\r\n    static Keyup: string = 'keyup';\r\n    static Keypress: string = 'keypress';\r\n}\r\n\r\nexport class ShortcutOptions {\r\n    Type: KeyboardEvent;\r\n    Propagate: boolean;\r\n    DisableInInput: boolean;\r\n    Target: any; // Event target object\r\n    Keycode: number;\r\n}\r\n\r\nexport class Shortcut {\r\n    private shift_nums = {\r\n        \"`\": \"~\",\r\n        \"1\": \"!\",\r\n        \"2\": \"@\",\r\n        \"3\": \"#\",\r\n        \"4\": \"$\",\r\n        \"5\": \"%\",\r\n        \"6\": \"^\",\r\n        \"7\": \"&\",\r\n        \"8\": \"*\",\r\n        \"9\": \"(\",\r\n        \"0\": \")\",\r\n        \"-\": \"_\",\r\n        \"=\": \"+\",\r\n        \";\": \":\",\r\n        \"'\": \"\\\"\",\r\n        \",\": \"<\",\r\n        \".\": \">\",\r\n        \"/\": \"?\",\r\n        \"\\\\\": \"|\"\r\n    };\r\n\r\n    private special_keys = {\r\n        'esc': 27,\r\n        'escape': 27,\r\n        'tab': 9,\r\n        'space': 32,\r\n        'return': 13,\r\n        'enter': 13,\r\n        'backspace': 8,\r\n\r\n        'scrolllock': 145,\r\n        'scroll_lock': 145,\r\n        'scroll': 145,\r\n        'capslock': 20,\r\n        'caps_lock': 20,\r\n        'caps': 20,\r\n        'numlock': 144,\r\n        'num_lock': 144,\r\n        'num': 144,\r\n\r\n        'pause': 19,\r\n        'break': 19,\r\n\r\n        'insert': 45,\r\n        'home': 36,\r\n        'delete': 46,\r\n        'end': 35,\r\n\r\n        'pageup': 33,\r\n        'page_up': 33,\r\n        'pu': 33,\r\n\r\n        'pagedown': 34,\r\n        'page_down': 34,\r\n        'pd': 34,\r\n\r\n        'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,\r\n\r\n        'f1': 112,\r\n        'f2': 113,\r\n        'f3': 114,\r\n        'f4': 115,\r\n        'f5': 116,\r\n        'f6': 117,\r\n        'f7': 118,\r\n        'f8': 119,\r\n        'f9': 120,\r\n        'f10': 121,\r\n        'f11': 122,\r\n        'f12': 123\r\n    };\r\n\r\n    private modifiers = {\r\n        shift: { wanted: false, pressed: false },\r\n        ctrl: { wanted: false, pressed: false },\r\n        alt: { wanted: false, pressed: false },\r\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\r\n    };\r\n\r\n    public eventCallback: Function;\r\n    public target: any;\r\n    public event: KeyboardEvent;\r\n    public option: ShortcutOptions;\r\n    public shorcut: string;\r\n    public callback: Function;\r\n\r\n    public constructor(\r\n        element: any,\r\n        shorcutCombination: string,\r\n        option: ShortcutOptions,\r\n        callback: (e?: JQueryEventObject) => void\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.target = element;\r\n        this.shorcut = shorcutCombination;\r\n        this.event = option.Type;\r\n        this.option = option;\r\n        this.callback = callback;\r\n\r\n        this.eventCallback = (event: JQueryEventObject) => {\r\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\r\n            let code: number;\r\n\r\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\r\n                let element;\r\n                if (e.target) {\r\n                    element = e.target;\r\n                } else if (e.srcElement) {\r\n                    element = e.srcElement;\r\n                }\r\n\r\n                if (element.nodeType == 3) {\r\n                    element = element.parentNode;\r\n                }\r\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\r\n            }\r\n            // Find Which key is pressed\r\n            if (e.keyCode) {\r\n                code = e.keyCode;\r\n            } else if (e.which) {\r\n                code = e.which;\r\n            }\r\n\r\n            let character = String.fromCharCode(code).toLowerCase();\r\n\r\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\r\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\r\n\r\n            let keys: string[] = this.shorcut.split(\"+\");\r\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\r\n            let kp: number = 0;\r\n\r\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\r\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\r\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\r\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\r\n\r\n            let i: number = 0;\r\n            for (i = 0; i < keys.length; i++) {\r\n                let k: string = keys[i];\r\n                // Modifiers\r\n                if (k == 'ctrl' || k == 'control') {\r\n                    kp++;\r\n                    this.modifiers.ctrl.wanted = true;\r\n                } else if (k == 'shift') {\r\n                    kp++;\r\n                    this.modifiers.shift.wanted = true;\r\n                } else if (k == 'alt') {\r\n                    kp++;\r\n                    this.modifiers.alt.wanted = true;\r\n                } else if (k == 'meta') {\r\n                    kp++;\r\n                    this.modifiers.meta.wanted = true;\r\n                } else if (k.length > 1) { // If it is a special key\r\n                    if (this.special_keys[k] == code) {\r\n                        kp++;\r\n                    }\r\n                } else if (this.option.Keycode) {\r\n                    if (this.option.Keycode == code) kp++;\r\n                } else { // The special keys did not match\r\n                    if (character == k) kp++;\r\n                    else {\r\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\r\n                            character = this.shift_nums[character];\r\n                            if (character == k) {\r\n                                kp++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (kp == keys.length &&\r\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\r\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\r\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\r\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\r\n\r\n                this.callback(e);\r\n\r\n                if (!this.option.Propagate) { // Stop the event\r\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    // e.stopPropagation works in Firefox.\r\n                    if (e.stopPropagation) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n            this.modifiers.ctrl.pressed = false;\r\n            this.modifiers.shift.pressed = false;\r\n            this.modifiers.alt.pressed = false;\r\n            this.modifiers.meta.pressed = false;\r\n        };\r\n    }\r\n}\r\n","import { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { IKeyboardShortcuts, IShortcutBindingService, IShortcutBindingProvider } from './IShortcutBindingService';\r\n\r\n{\r\n    class ShortcutBindingService implements IShortcutBindingService {\r\n        private _log: ng.ILogService;\r\n        private _defaultOption: ShortcutOptions;\r\n        private _shortcuts: IKeyboardShortcuts = {};\r\n\r\n        public constructor(\r\n            $log: ng.ILogService,\r\n            option: ShortcutOptions\r\n        ) {\r\n            \"ngInject\";\r\n            this._log = $log;\r\n            this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\r\n        }\r\n\r\n        private getDefaultOption(): ShortcutOptions {\r\n            let defaultOption: ShortcutOptions = {\r\n                Type: KeyboardEvent.Keydown,\r\n                Propagate: false,\r\n                DisableInInput: false,\r\n                Target: document,\r\n                Keycode: null\r\n            };\r\n\r\n            return defaultOption;\r\n        }\r\n\r\n        public get shortcuts(): IKeyboardShortcuts {\r\n            return this._shortcuts;\r\n        }\r\n\r\n        public add(shortcut: string, callback: (e: JQueryEventObject) => void, option: ShortcutOptions): void {\r\n            this.remove(shortcut);\r\n            let shortcutOption: ShortcutOptions = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\r\n            let shortcutCombination: string = shortcut.toLowerCase();\r\n            let element = shortcutOption.Target;\r\n\r\n            if (typeof shortcutOption.Target == 'string') {\r\n                element = document.getElementById(shortcutOption.Target);\r\n            } else {\r\n                element = shortcutOption.Target;\r\n            }\r\n\r\n            if (!element) {\r\n                this._log.error('Register shortcut: element undentified!');\r\n                return;\r\n            }\r\n\r\n            if (!shortcutCombination) {\r\n                this._log.error('Register shortcut: shortcut combination undentified!');\r\n                return;\r\n            }\r\n\r\n            if (!callback) {\r\n                this._log.error('Register shortcut: shorcut callback undentified!');\r\n                return;\r\n            }\r\n\r\n            let newKeyboardShortcut = new Shortcut(element, shortcutCombination, shortcutOption, callback);\r\n\r\n            this._shortcuts[shortcutCombination] = newKeyboardShortcut;\r\n\r\n            //Attach the function with the event\r\n            if (element.addEventListener) {\r\n                element.addEventListener(shortcutOption.Type, newKeyboardShortcut.eventCallback, false);\r\n            } else if (element.attachEvent) {\r\n                element.attachEvent('on' + shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n            } else {\r\n                element.on(shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n            }\r\n        }\r\n\r\n        public remove(shorcut: string): void {\r\n            let shortcutCombination = shorcut.toLowerCase();\r\n            let binding: Shortcut = this._shortcuts[shortcutCombination];\r\n\r\n            delete(this._shortcuts[shortcutCombination])\r\n            if (!binding) return;\r\n\r\n            let type = binding.event;\r\n            let element = binding.target;\r\n            let callback = binding.eventCallback;\r\n\r\n            if (element.detachEvent) {\r\n                element.detachEvent('on' + type, callback);\r\n            } else if (element.removeEventListener) {\r\n                element.removeEventListener(type, callback, false);\r\n            } else {\r\n                // element['on' + type] = false;\r\n                element.off(type, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    class ShortcutBindingProvider implements IShortcutBindingProvider {\r\n        private _service: ShortcutBindingService;\r\n        private _option: ShortcutOptions;\r\n\r\n        public get option(): ShortcutOptions {\r\n            return this._option;\r\n        }\r\n\r\n        public set option(value: ShortcutOptions) {\r\n            this._option = value || new ShortcutOptions();\r\n        }\r\n\r\n        public $get(\r\n            $log: ng.ILogService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null)\r\n                this._service = new ShortcutBindingService($log, this._option);\r\n\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .provider('pipShortcutBinding', ShortcutBindingProvider);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\nimport { IShortcutBindingService } from \"./IShortcutBindingService\";\r\n\r\ninterface ShortcutAttributes extends ng.IAttributes {\r\n    pipShortcutAction: any;\r\n    pipShortcutName: any;\r\n    pipShorcutOptions: ShortcutOptions;\r\n}\r\n\r\nclass ShortcutController implements ng.IController  {\r\n    private actionShortcuts: Function;\r\n    private nameShortcuts: string;\r\n    private options: ShortcutOptions;\r\n\r\n    constructor(\r\n        $element: JQuery,\r\n        $attrs: ShortcutAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $parse: ng.IParseService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if ($attrs.pipShortcutAction) {\r\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\r\n            // this.actionShortcuts($scope, {$event: {}});\r\n        } else {\r\n            $log.error('Shortcut action does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\r\n            this.nameShortcuts = $attrs.pipShortcutName;\r\n        } else {\r\n            $log.error('Shortcut name does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOptions>$attrs.pipShorcutOptions : <ShortcutOptions>{};\r\n        this.options.Target = $element;\r\n        \r\n        // Registration of keybord shortcuts\r\n        pipShortcutBinding.add(this.nameShortcuts, (e?: any) => {\r\n            this.actionShortcuts($scope, {$event: {'e': e}});          \r\n        }, this.options);\r\n    }\r\n\r\n    private keypressShortcut(action) {\r\n        this.actionShortcuts();\r\n    }\r\n}\r\n\r\n// Prevent junk from going into typescript definitions\r\n{\r\n    const shortcutsDirective = function(): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,            \r\n            controller: ShortcutController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .directive('pipShortcut', shortcutsDirective);\r\n}","import { IShortcutBindingService } from \"./IShortcutBindingService\"\r\nimport { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { ShortcutsConfig, ShortcutItem, IShortcutsService, IShortcutsProvider } from './IShortcutsService';\r\n\r\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\r\n\r\nclass ShortcutsService implements IShortcutsService {\r\n    private _oldConfig: ShortcutsConfig;\r\n    private _config: ShortcutsConfig;\r\n\r\n    public constructor(\r\n        config: ShortcutsConfig,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService, \r\n        private $location: ng.ILocationService, \r\n        private $injector: ng.auto.IInjectorService,\r\n        private pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        this._config = config;\r\n        this._oldConfig = _.cloneDeep(this._config);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this._config.globalShortcuts);\r\n        this.addShortcuts(this._config.localShortcuts);        \r\n    }\r\n\r\n    // Describe private functions\r\n    private sendChangeEvent() {\r\n        // Remove shortcuts\r\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\r\n        this.removeShortcuts(this._oldConfig.localShortcuts);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this.config.globalShortcuts);\r\n        this.addShortcuts(this.config.localShortcuts);\r\n\r\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\r\n\r\n        // Save current config to oldConfig\r\n        this._oldConfig = _.cloneDeep(this.config);\r\n    }\r\n\r\n    private removeShortcuts(collection: ShortcutItem[]): void {\r\n        _.each(collection, (k) => {\r\n            this.pipShortcutBinding.remove(k.shortcut);\r\n        });\r\n    }\r\n\r\n    private keypressShortcut(item: ShortcutItem, event: JQueryEventObject) {\r\n        if (item.access && _.isFunction(item.access)) {\r\n            if (!item.access(event)) {\r\n                return;\r\n            }\r\n        } \r\n\r\n        if (item.keypress) {\r\n            item.keypress(event);\r\n            return;\r\n        }\r\n\r\n        if (item.href) {\r\n            this.$window.location.href = item.href;\r\n            return;\r\n        }\r\n\r\n        if (item.url) {\r\n            this.$location.url(item.url);\r\n            return;\r\n        }\r\n\r\n        if (item.state) {\r\n            if (this.$injector.has('$state')) {\r\n                var $state = this.$injector.get('$state');\r\n                $state['go'](item.state, item.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (item.event) {\r\n            this.$rootScope.$broadcast(item.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipShortcutKeypress', item.shortcut);\r\n        }\r\n    }\r\n\r\n    private addShortcuts(collection: ShortcutItem[]): void {\r\n        let generalOptions: ShortcutOptions = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOptions>{};\r\n        \r\n        _.each(collection, (k) => {\r\n            let option: ShortcutOptions = k.options ? k.options : generalOptions;\r\n            let target: any;\r\n\r\n            target = k.target ? k.target : k.targetId;\r\n            if (target) { \r\n                option.Target = target;\r\n            }\r\n            // Registration of keyboard shortcut\r\n            this.pipShortcutBinding.add(k.shortcut, (e?: any) => {\r\n                this.keypressShortcut(k, e);        \r\n            }, option);              \r\n        });\r\n    }\r\n\r\n    // Describe public functions \r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n}\r\n\r\nclass ShortcutsProvider implements IShortcutsProvider {\r\n    private _config: ShortcutsConfig = new ShortcutsConfig();\r\n    private _service: ShortcutsService;\r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ShortcutsConfig) {\r\n        this._config = value || new ShortcutsConfig();\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: ng.IRootScopeService, \r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutBinding);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcuts', ShortcutsProvider);\r\n\r\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\r\n\r\nimport './ShortcutBindingService';\r\nimport './ShortcutsService';\r\nimport './ShortcutDirective';\r\n\r\nexport * from './IShortcutsService';\r\nexport * from './IShortcutBindingService';\r\nexport * from './ShortcutsService';\r\nexport * from './ShortcutBindingService';","{\r\n    interface UnsavedChangesScope extends ng.IScope {\r\n        unsavedChangesAvailable: Function;\r\n        unsavedChangesMessage: string;\r\n        cancelLeave: Function;\r\n        afterLeave: Function;\r\n    }\r\n\r\n    class UnsavedChangesLink {\r\n        constructor(\r\n            $scope: UnsavedChangesScope,\r\n            $window: ng.IWindowService\r\n        ) {\r\n            $window.onbeforeunload = () => {\r\n                if ($scope.unsavedChangesAvailable()) {\r\n                    return $scope.unsavedChangesMessage;\r\n                }\r\n            };\r\n\r\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\r\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\r\n                    event.preventDefault();\r\n                } else {\r\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                }\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                $window.onbeforeunload = null;\r\n                unbindFunc();\r\n            });\r\n        }\r\n    }\r\n\r\n    const UnsavedChanges = function ($window: ng.IWindowService) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave',\r\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\r\n            },\r\n            link: function ($scope: UnsavedChangesScope) {\r\n                new UnsavedChangesLink($scope, $window);\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"pipUnsavedChanges\", [])\r\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\r\n}"]}