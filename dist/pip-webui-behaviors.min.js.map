{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/behaviors.ts","src/draggable/draggable.ts","src/focused/focused.ts","src/infinite_scroll/infinite_scroll.ts","src/keyboard_shortcuts/KeyboardShortcut.ts","src/keyboard_shortcuts/ShorcutsRegisterService.ts","src/keyboard_shortcuts/ShortcutDirective.ts","src/keyboard_shortcuts/ShortcutsService.ts","src/keyboard_shortcuts/index.ts","src/selected/selected.ts","src/unsaved_changes/unsaved_changes.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","thisModule","service","scope","inputEvent","event","isDefined","touches","originalEvent","directive","$rootScope","$parse","$document","$window","pipDraggable","restrict","link","element","attrs","initialize","attr","dragHandles","querySelectorAll","find","_dragHandle","toggleListeners","scrollContainer","scrollParent","parent","pipScrollContainer","scrollContainerGetter","toBoolean","value","toString","toLowerCase","enable","$on","onDestroy","$watch","pipDrag","onEnableChange","pipCenterAnchor","onCenterAnchor","on","_pressEvents","onpress","_hasTouch","nodeName","newVal","oldVal","_dragEnabled","_centerAnchor","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","_pressTimer","setTimeout","onlongpress","LONG_PRESS","_moveEvents","_releaseEvents","_elementStyle","left","css","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","_dragOffset","allowTransform","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","_deregisterRootMoveListener","origEvent","hasClass","_data","getDragData","addClass","$broadcast","x","y","tx","ty","data","onDragStartCallback","$apply","$data","$event","horizontalScroll","verticalScroll","dragToScroll","moveElement","uid","_myid","dragOffset","callback","onDragComplete","removeClass","reset","onDragStopCallback","onDragSuccessCallback","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","activationDistance","scrollDistance","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","ngDrag","DocumentTouch","$id","pipDragStart","pipDragStop","pipDragSuccess","$eval","pipDragData","pipVerticalScroll","pipHorizontalScroll","parseFloat","pipActivationDistance","pipScrollDistance","noop","$timeout","pipDrop","onDragStart","onDragMove","onDragEnd","_dropEnabled","obj","isTouching","pipDragMove","onDragMoveCallback","pipDropSuccess","onDropCallback","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","absorbEvent_","stopPropagation","cancelBubble","returnValue","$mdConstant","$scope","$element","$attrs","rgba","color","focusedColor","arr","split","red","blue","green","opacity","opacityLimit","opacityDelta","setTabindex","checkTabindex","controls","index","_","findIndex","c","focusedTabindex","init","selector","withHidden","controlsLength","$","reInit","isOpacity","_color","keydownListener","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","filter","focus","pipWithHidden","pipFocusedColor","pipFocusedRebind","pipFocusedTabindex","parseInt","pipFocusedOpacity","ngModel","pipFocusedData","$observe","$interval","THROTTLE_MILLISECONDS","pipInfiniteScroll","pipScrollDisabled","pipScrollUseDocumentBottom","pipScrollListenForEvent","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","handleScrollDistance","v","handleScrollDisabled","scrollEnabled","checkWhenEnabled","onContainerScroll","handleScrollUseDocumentBottom","useDocumentBottom","changeContainer","newContainer","unbind","bind","handleScrollContainer","HTMLElement","append","parents","Array","isArray","immediateCheck","unregisterEventListener","windowElement","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","throttle","pipScrollParent","pipScrolImmediateCheck","ShortcutOption","KeyboardEvent","Keydown","Keyup","Keypress","KeyboardShortcut","shorcutCombination","option","_this","shift_nums","`","2","3","4","5","6","7","8","9","0","-","=",";","'",",",".","/","\\","special_keys","esc","escape","tab","space","return","enter","backspace","scrolllock","scroll_lock","scroll","capslock","caps_lock","caps","numlock","num_lock","num","pause","break","insert","home","delete","end","pageup","page_up","pu","pagedown","page_down","pd","up","down","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","modifiers","shift","wanted","pressed","ctrl","alt","meta","shorcut","Type","eventCallback","DisableInInput","element_1","srcElement","nodeType","parentNode","tagName","character","String","fromCharCode","keys","kp","ctrlKey","shiftKey","altKey","metaKey","k","Keycode","Propagate","$inject","KeyboardShortcut_1","ShortcutsRegister","$log","_log","_defaultOption","defaults","getDefaultOption","_shortcuts","prototype","defaultOption","Target","checkAddShortcut","error","get","enumerable","configurable","add","shorcutName","shorcutOption","getElementById","newKeyboardShortcut","addEventListener","attachEvent","remove","shortcutCombination","binding","detachEvent","removeEventListener","ShortcutsRegisterProvider","_option","set","$get","_service","provider","./KeyboardShortcut","ShortcutController","pipShortcutsRegister","pipShortcutAction","actionShortcuts","pipShortcutName","isString","nameShortcuts","options","pipShorcutOptions","keypressShortcut","action","shortcutsDirective","controller","__","constructor","d","p","b","hasOwnProperty","Object","create","ShortcutsChangedEvent","SimpleShortcutItem","ShortcutItem","_super","apply","arguments","__extends","ShortcutsConfig","globalShortcuts","localShortcuts","defaultOptions","ShortcutsService","config","$location","$injector","_config","_oldConfig","cloneDeep","_rootScope","_window","_location","_injector","_pipShortcutsRegister","addShortcuts","sendChangeEvent","removeShortcuts","$emit","collection","each","shortcut","access","isFunction","keypress","href","location","url","state","has","$state","stateParams","generalOptions","targetId","onLocal","ShortcutsProvider","__export","m","./ShortcutDirective","./ShortcutsService","10","selectItem","itemParams","itemIndex","itemId","items","className","modifier","itemsLength","item","undefined","raiseEvent","noScroll","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedIndex","selectedId","indexSetter","idSetter","onSelect","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","isScrolled","getTargetElementFromEventTarget","eventTarget","Node","TEXT_NODE","touchHasMoved","touch","changedTouches","boundary","touchBoundary","Math","abs","touchStartX","touchStartY","onClickEvent","currentTarget","onTouchStart","ev","targetElement","trackingClick","trackingClickStart","timeStamp","lastClickTime","tapdelay","onTouchMove","onTouchEnd","newTrackingClickStart","cancelNextClick","tapTimeout","onTouchCancel","onKeyDown","ENTER","SPACE","inc","newSelectedIndex","onFocusIn","indexGetter","onFocusOut","pipSelected","assign","idGetter","pipSelectedId","changeGetter","pipSelect","enterSpaceGetter","pipEnterSpacePress","pipNoScroll","pipSkipHidden","pipTreeList","currentElementTabinex","pipSelectedWatch","newSelectedId","11","unsavedChangesAvailable","unsavedChangesMessage","afterLeave","onbeforeunload","$routing","confirm","cancelLeave","unbindFunc"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,MAAAL,EAAAK,SAAAC,UAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,ICOA,WACI,YAEA2B,SAAQ1B,OAAO,gBACX,aACA,cACA,oBACA,oBACA,eACA,6CCdR,WACI,YAEA,IAAI2B,GAAaD,QAAQ1B,OAAO,kBAEhC2B,GAAWC,QAAQ,eAAgB,WAE/B,GAAIC,GAAQtB,IACZsB,GAAMC,WAAa,SAAUC,GACzB,MAAIL,SAAQM,UAAUD,EAAME,SACjBF,EAAME,QAAQ,GAGhBP,QAAQM,UAAUD,EAAMG,gBAAkBR,QAAQM,UAAUD,EAAMG,cAAcD,SAC9EF,EAAMG,cAAcD,QAAQ,GAEhCF,KAKfJ,EAAWQ,UAAU,WACjB,aAAU,SAAY,YAAQ,UAAkB,eAAc,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAC1D,OAEIC,SAAU,IACVC,KAAM,SAAUb,EAAYc,EAASC,GA+CjC,QAAAC,KACIF,EAAQG,KAAK,gBAAiB,QAI9B,IAAIC,EAEAA,GADAJ,EAAQ,GAAGK,iBACGtB,QAAQiB,QAAQA,EAAQ,GAAGK,iBAAiB,sBAE5CL,EAAQM,KAAK,qBAE3BF,EAAYvB,SACZ0B,EAAcH,GAElBI,GAAgB,GAIZC,GADAC,GACkB3B,QAAQiB,QAAQA,EAAQW,UACnCV,EAAMW,mBACK7B,QAAQiB,QAAQa,GAAsB3B,IAEtCH,QAAQiB,QAAQvC,QAI1C,QAAAqD,GAAmBC,GACf,MAAa,OAATA,MACCA,IACLA,EAAQA,EAAMC,WAAWC,cACT,KAATF,GAAyB,QAATA,IAG3B,QAAAP,GAAyBU,GAChBA,IAGLhC,EAAMiC,IAAI,WAAYC,GACtBlC,EAAMmC,OAAOpB,EAAMqB,QAASC,GAC5BrC,EAAMmC,OAAOpB,EAAMuB,gBAAiBC,GAEhClB,EAEAA,EAAYmB,GAAGC,EAAcC,GAG7B5B,EAAQ0B,GAAGC,EAAcC,GAExBC,GAAkD,OAArC7B,EAAQ,GAAG8B,SAASb,eAClCjB,EAAQ0B,GAAG,YAAa,WACpB,OAAO,KAKnB,QAAAN,GAAmBF,GACfV,GAAgB,GAGpB,QAAAe,GAAwBQ,EAAQC,GAC5BC,EAAe,EAGnB,QAAAR,GAAwBM,EAAQC,GACxBjD,QAAQM,UAAU0C,KAClBG,EAAiBH,GAAU,QAGnC,QAAAI,GAA4BC,GACxB,MACIrD,SAAQM,UAAUN,QAAQiB,QAAQoC,EAAIC,QAAQlC,KAAK,oBAQ3D,QAAAyB,GAAiBQ,GACRH,IAEDE,EAAmBC,IAIP,aAAZA,EAAIE,MAAqC,GAAdF,EAAIG,SAKnCC,IAEIX,GACAY,IACAC,EAAcC,WAAW,WACrBF,IACAG,EAAYR,IACbS,GACHlD,EAAU+B,GAAGoB,EAAaL,GAC1B9C,EAAU+B,GAAGqB,EAAgBN,IAE7BG,EAAYR,KAKpB,QAAAI,KACIQ,EAAcC,KAAOjD,EAAQkD,IAAI,QAAU,EAC3CF,EAAcG,IAAMnD,EAAQkD,IAAI,QAAU,EAC1CF,EAAcI,SAAWpD,EAAQkD,IAAI,YACrCF,EAAcK,MAAQrD,EAAQkD,IAAI,SAGtC,QAAAT,KACIa,aAAaZ,GACb/C,EAAU4D,IAAIT,EAAaL,GAC3B9C,EAAU4D,IAAIR,EAAgBN,GAGlC,QAAAG,GAAqBR,GACZH,IACLG,EAAIoB,iBAEJC,EAASzD,EAAQ,GAAG0D,wBAEhBC,EADAC,EACcH,GAECR,KAAMY,SAASC,KAAKC,WAAYZ,IAAKU,SAASC,KAAKE,WAIhEhE,EAASiE,QAAUjE,EAAQ,GAAGkE,YAAc,EAC5ClE,EAASmE,QAAUnE,EAAQ,GAAGoE,aAAe,EAEnDC,EAAMxE,EAAaV,WAAWiD,GAAKkC,MACnCC,EAAM1E,EAAaV,WAAWiD,GAAKoC,MACnCC,EAAOJ,EAAMZ,EAAOR,KACpByB,EAAOH,EAAMd,EAAON,IAChBjB,GACAyC,EAAMN,EAAYrE,EAASiE,QAAUrE,EAAQgF,YAC7CC,EAAMN,EAAYvE,EAASmE,QAAUvE,EAAQkF,cAE7CH,EAAMN,EAAMI,EAAO7E,EAAQgF,YAC3BC,EAAMN,EAAMG,EAAO9E,EAAQkF,aAG/BnF,EAAU+B,GAAGoB,EAAaiC,GAC1BpF,EAAU+B,GAAGqB,EAAgBiC,GAK7BC,GAA8BxF,EAAW0B,IAAI,gCAAiC,SAAU/B,EAAO8F,GAC3FH,EAAOG,MAIf,QAAAH,GAAgB3C,GACPH,IACLG,EAAIoB,iBAECxD,EAAQmF,SAAS,kBAClBC,EAAQC,EAAYnG,GACpBc,EAAQsF,SAAS,gBACjB7F,EAAW8F,WAAW,mBAClBC,EAAGnB,EACHoB,EAAGlB,EACHmB,GAAIf,EACJgB,GAAId,EACJzF,MAAOgD,EACPpC,QAASA,EACT4F,KAAMR,IAGNS,GACA3G,EAAM4G,OAAO,WACTD,EAAoB3G,GAAQ6G,MAAOX,EAAOY,OAAQ5D,OAK9DiC,EAAMxE,EAAaV,WAAWiD,GAAKkC,MACnCC,EAAM1E,EAAaV,WAAWiD,GAAKoC,OAE/ByB,GAAoBC,IACpBC,IAGAjE,GACAyC,EAAMN,EAAYrE,EAASiE,QAAUN,EAAYV,KACjD4B,EAAMN,EAAYvE,EAASmE,QAAUR,EAAYR,MAEjDwB,EAAMN,EAAMI,EAAOd,EAAYV,KAC/B4B,EAAMN,EAAMG,EAAOf,EAAYR,KAGnCiD,EAAYzB,EAAKE,GAEjBpF,EAAW8F,WAAW,kBAClBC,EAAGnB,EACHoB,EAAGlB,EACHmB,GAAIf,EACJgB,GAAId,EACJzF,MAAOgD,EACPpC,QAASA,EACT4F,KAAMR,EACNiB,IAAKC,EACLC,WAAY5C,KAIpB,QAAAqB,GAAmB5C,GACVH,IAELG,EAAIoB,iBACJ/D,EAAW8F,WAAW,iBAClBC,EAAGnB,EACHoB,EAAGlB,EACHmB,GAAIf,EACJgB,GAAId,EACJzF,MAAOgD,EACPpC,QAASA,EACT4F,KAAMR,EACNoB,SAAUC,EACVJ,IAAKC,IAETtG,EAAQ0G,YAAY,gBACpB1G,EAAQW,SAASL,KAAK,mBAAmBoG,YAAY,kBACrDC,IACAhH,EAAU4D,IAAIT,EAAaiC,GAC3BpF,EAAU4D,IAAIR,EAAgBiC,GAE1B4B,GACA1H,EAAM4G,OAAO,WACTc,EAAmB1H,GAAQ6G,MAAOX,EAAOY,OAAQ5D,MAIzD6C,MAGJ,QAAAwB,GAAwBrE,GACfyE,GAEL3H,EAAM4G,OAAO,WACTe,EAAsB3H,GAAQ6G,MAAOX,EAAOY,OAAQ5D,MAI5D,QAAAuE,KACQ/C,EACA5D,EAAQkD,KAAK4D,UAAW,GAAIC,UAAW,GAAIC,oBAAqB,GAAIC,gBAAiB,KAErFjH,EAAQkD,KAAKE,SAAYJ,EAAcI,SAAUD,IAAKH,EAAcG,IAAKF,KAAMD,EAAcC,KAAM8D,UAAW,GAAI1D,MAAOL,EAAcK,QAI/I,QAAA+C,GAAqBZ,EAAGC,GACpB,GAAIyB,GAASlH,EAAQkD,IAAI,QACrBU,GACA5D,EAAQkD,KACJ4D,UAAW,gDAAkDtB,EAAI,KAAOC,EAAI,UAC5EsB,UAAW,MACXC,oBAAqB,gDAAkDxB,EAAI,KAAOC,EAAI,UACtFwB,gBAAiB,sBAAwBzB,EAAI,KAAOC,EAAI,MAG5DzF,EAAQkD,KACJD,KAAQuC,EAAI,KACZrC,IAAOsC,EAAI,KACXrC,SAAY,QACZ2D,UAAW,IACX1D,MAAO6D,IAKnB,QAAAf,KACI,GAAIgB,GAAU,EAAGC,EAAU,EACvB3D,EAAS,SAAUzD,GACf,MAAOA,GAAQyD,WAAaR,KAAM,EAAGE,IAAK,GAGlD,IAAI8C,EAAkB,CAClB,GACIoB,GAAgB5D,EAAOhD,IAAiBwC,KACxCqE,EAAiB7G,GAAgB8G,aACjCC,EAAiBH,EAAgBC,CAEhCjD,GAAMgD,EAAiBI,EACxBN,GAAWO,EAELF,EAAiBnD,EAAOoD,IAC9BN,EAAUO,GAIlB,GAAIxB,EAAgB,CAChB,GACIyB,GAAelE,EAAOhD,IAAiB0C,IACvCyE,EAAkBnH,GAAgBoH,cAClCC,EAAkBH,EAAeC,CAEhCrD,GAAMoD,EAAgBF,EACvBL,GAAWM,EAAiB,GAEtBI,EAAkBvD,EAAOkD,IAC/BL,EAAUM,EAAiB,IAGnC,GAAgB,IAAZP,GAA6B,IAAZC,EAAe,CAChC,GACIW,GAAsBtH,GAAgBsD,aACtCiE,EAAqBvH,GAAgBuD,WAEzCvD,IAAgBsD,WAAWgE,EAAsBZ,GACjD1G,GAAgBuD,UAAUgE,EAAqBZ,IA1WvDlI,EAAM6B,MAAQd,EAAMgI,MACpB,IACIxE,GAA+BY,EAAKE,EAAKI,EAAKE,EAAKJ,EAAMC,EAKzDnE,EANAsC,EAAa,GACLX,GAAgB,EACxBL,EAAa,gBAAkBpE,SAAiBA,OAAQyK,cACxDvG,EAAe,uBACfmB,EAAc,sBACdC,EAAiB,mBAIjBuD,EAAQpH,EAAMiJ,IACd/C,EAAQ,KAERzB,EAAc,KAEd1B,GAAe,EAEfS,EAAc,KAEdM,KAEA6C,EAAsBnG,EAAOO,EAAMmI,eAAiB,KACpDxB,EAAqBlH,EAAOO,EAAMoI,cAAgB,KAClDxB,EAAwBnH,EAAOO,EAAMqI,iBAAmB,KACxD1E,IAAiB7E,QAAQM,UAAUY,EAAM2D,iBAAkB1E,EAAMqJ,MAAMtI,EAAM2D,gBAE7EyB,EAAc3F,EAAOO,EAAMuI,aAE3BtC,EAAiBpF,EAAUb,EAAMwI,qBAAsB,EACvDxC,EAAmBnF,EAAUb,EAAMyI,uBAAwB,EAC3DjB,EAAqBkB,WAAW1I,EAAM2I,wBAA0B,GAChElB,EAAiBiB,WAAW1I,EAAM4I,oBAAsB,GACxDnI,IAAe,EAEfD,GAAkB1B,QAAQiB,QAAQvC,QAClCoD,GAAwBnB,EAAOO,EAAMW,oBAGrCqE,GAA8BlG,QAAQ+J,IAE1C5I,UA0UhBlB,EAAWQ,UAAU,WACjB,SAAU,WAAQ,UAAU,YAAkB,eAAc,SAAAE,EAAAqJ,EAAAnJ,EAAAD,EAAAE,GAC5D,OACIC,SAAU,IACVC,KAAM,SAAUb,EAAYc,EAASC,GAmBjC,QAAAC,KACIM,GAAgB,GAGpB,QAAAA,GAAyBU,GAEhBA,IAELhC,EAAMmC,OAAOpB,EAAM+I,QAASzH,GAC5BrC,EAAMiC,IAAI,WAAYC,GACtBlC,EAAMiC,IAAI,kBAAmB8H,GAC7B/J,EAAMiC,IAAI,iBAAkB+H,GAC5BhK,EAAMiC,IAAI,gBAAiBgI,IAG/B,QAAA/H,GAAmBF,GACfV,GAAgB,GAGpB,QAAAe,GAAwBQ,EAAQC,GAC5BoH,EAAerH,EAGnB,QAAAkH,GAAqB7G,EAAKiH,GACjBD,IACLE,EAAWD,EAAI7D,EAAG6D,EAAI5D,EAAG4D,EAAIrJ,SAEzBC,EAAMmI,cACNW,EAAS,WACLlD,EAAoB3G,GAAQ6G,MAAOsD,EAAIzD,KAAMI,OAAQqD,OAKjE,QAAAH,GAAoB9G,EAAKiH,GAChBD,IACLE,EAAWD,EAAI7D,EAAG6D,EAAI5D,EAAG4D,EAAIrJ,SAEzBC,EAAMsJ,aACNR,EAAS,WACLS,EAAmBtK,GAAQ6G,MAAOsD,EAAIzD,KAAMI,OAAQqD,OAKhE,QAAAF,GAAmB/G,EAAKiH,GAGpB,MAAKD,IAAgB9C,IAAU+C,EAAIhD,KAK/BiD,EAAWD,EAAI7D,EAAG6D,EAAI5D,EAAG4D,EAAIrJ,WAEzBqJ,EAAI7C,UACJ6C,EAAI7C,SAAS6C,GAGbpJ,EAAMwJ,gBACNV,EAAS,WACLW,EAAexK,GACX6G,MAAOsD,EAAIzD,KACXI,OAAQqD,EACRM,QAASzK,EAAMqJ,MAAMrJ,EAAM6B,YAMvCd,EAAMoI,aACNU,EAAS,WACLnC,EAAmB1H,GAAQ6G,MAAOsD,EAAIzD,KAAMI,OAAQqD,UAI5DO,IAAiB,EAAOP,EAAIrJ,cA3BxB4J,IAAiB,EAAOP,EAAIrJ,SA8BpC,QAAAsJ,GAAoBO,EAAQC,EAAQC,GAChC,GAAIC,GAAWC,EAAQJ,EAAQC,EAM/B,OALA5K,GAAMoK,WAAaU,EACfA,IACAE,EAAiBlK,GAErB4J,EAAiBI,EAAUD,GACpBC,EAGX,QAAAJ,GAA0BI,EAAUD,GAC5BC,GACAhK,EAAQsF,SAAS,kBACjByE,EAAYzE,SAAS,kBACd4E,GAAkBlK,IACzBkK,EAAiB,KACjBlK,EAAQ0G,YAAY,kBACpBqD,EAAYrD,YAAY,kBAIhC,QAAAuD,GAAiBzE,EAAGC,GAChB,GAAI0E,GAASnK,EAAQ,GAAG0D,uBAGxB,OAFA8B,IAAK7F,EAAU,GAAGmE,KAAKC,WAAapE,EAAU,GAAGyK,gBAAgBrG,WACjE0B,GAAK9F,EAAU,GAAGmE,KAAKE,UAAYrE,EAAU,GAAGyK,gBAAgBpG,UACzDwB,GAAK2E,EAAOlH,MACZuC,GAAK2E,EAAOE,OACZ5E,GAAK0E,EAAOG,QACZ7E,GAAK0E,EAAOhH,IA7HvBjE,EAAM6B,MAAQd,EAAM+I,QACpB9J,EAAMoK,YAAa,CAEnB,IAAIY,GAAiB,KACjB5D,EAAQpH,EAAMiJ,IACdiB,GAAe,EAEfM,EAAiBhK,EAAOO,EAAMwJ,gBAC9B5D,EAAsBnG,EAAOO,EAAMmI,cACnCxB,EAAqBlH,EAAOO,EAAMoI,aAClCmB,EAAqB9J,EAAOO,EAAMsJ,YAEtCrJ,UA4NZlB,EAAWQ,UAAU,kBAAkB,SAAU,WAAQ,SAAQE,EAAAqJ,GAC7D,OACIjJ,SAAU,IACVC,KAAM,SAAUb,EAAYc,EAASC,GAMjC,QAAAC,KACIF,EAAQG,KAAK,gBAAiB,SAC9BK,GAAgB,GAGpB,QAAAA,GAAyBU,GAEhBA,GAELlB,EAAQ0B,GAAG,sDAAuD6I,GAGtE,QAAAA,GAAsBnL,GAClB,GAAIrB,GAAIqB,EAAMG,aAKd,OAJAxB,GAAEyF,gBAAkBzF,EAAEyF,iBACtBzF,EAAEyM,iBAAmBzM,EAAEyM,kBACvBzM,EAAE0M,cAAe,EACjB1M,EAAE2M,aAAc,GACT,EAvBXxK,SA6BZlB,EAAWQ,UAAU,gBAAiB,WAClC,OACIM,SAAU,IACVC,KAAM,SAAUb,EAAOc,EAASC,GAC5BD,EAAQM,KAAK,KAAKH,KAAK,kBAAmB,mDC1pB1D,WACI,YAEA,IAAInB,GAAaD,QAAQ1B,OAAO,gBAEhC2B,GAAWQ,UAAU,cAAc,WAAU,cAAU,UAAa,SAAOuJ,EAAA4B,EAAA/K,GACvE,OAEIrB,QAAS,WACTwB,KAAM,SAAU6K,EAAaC,EAAUC,GA2BnC,QAAAhK,GAAmBC,GACf,MAAa,OAATA,MACCA,IACLA,EAAQA,EAAMC,WAAWC,cACT,KAATF,GAAyB,QAATA,IAG3B,QAAAgK,GAAcC,GACV,GAAIC,EACA,MAAOA,EAGX,IAAIC,GAAMF,EAAMG,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,IAElD,KAAKD,GAAOA,EAAIrM,OAAS,EACrB,MAAO,EAGX,IAAIuM,GAAKC,EAAMC,EAAOC,CAatB,OAXAA,GAAwB,GAAdL,EAAIrM,OAAc,EAAI8J,WAAWuC,EAAI,IAC/CE,EAAMF,EAAI,GACVG,EAAOH,EAAI,GACXI,EAAQJ,EAAI,GAERK,EAAUC,EACVD,GAAWE,EAEXF,GAAWE,EAGR,QAAUL,EAAM,KAAOC,EAAO,KAAOC,EAAQ,KAAOC,EAAU,IAGzE,QAAAG,GAAqB1L,EAASe,GAC1Bf,EAAQG,KAAK,WAAYY,GAG7B,QAAA4K,GAAuBC,GACnB,GAAIC,GAAQC,EAAEC,UAAUH,EAAU,SAACI,GAC/B,MAAOA,GAAY,UAAI,GAGvBH,KAAS,GAAMD,EAAS/M,OAAS,GAEjC6M,EAAY3M,QAAQiB,QAAQ4L,EAAS,IAAKK,GAIlD,QAAAC,KACI,GAAIC,GAAWC,EAAa,iBAAmB,wBAC/CR,GAAWf,EAASvK,KAAK6L,GACzBE,EAAiBT,EAAS/M,OAC1B8M,EAAcC,GAEdA,EAASlK,GAAG,QAAS,WACjB,IAAI4K,EAAE1O,MAAMuH,SAAS,cAOrB,GAJIoH,GACAL,IAEJrB,EAASvF,SAAS,yBACdkH,EAAW,CACDzN,QAAQiB,QAAQsM,EAAE1O,MAAM,GAElC6O,GAASH,EAAE1O,MAAMsF,IAAI,mBAErBoJ,EAAE1O,MAAMsF,IAAI,kBAAmB6H,EAAK0B,IACpCH,EAAE1O,MAAM0H,SAAS,kBAEjBgH,GAAE1O,MAAM0H,SAAS,mCAItB5D,GAAG,WAAY,WACT4K,EAAE1O,MAAMuH,SAAS,gBAGtB0F,EAASnE,YAAY,yBAEjB8F,GAEAF,EAAE1O,MAAMsF,IAAI,kBAAmB,IAC/BoJ,EAAE1O,MAAM8I,YAAY,kCAEpB4F,EAAE1O,MAAM8I,YAAY,iBAOhC,QAAAgG,GAAyB3O,GACrB,GAAI4O,GAAU5O,EAAE6O,OAAS7O,EAAE4O,OAE3B,IAAIA,GAAWhC,EAAYkC,SAASC,YAChCH,GAAWhC,EAAYkC,SAASE,UAChCJ,GAAWhC,EAAYkC,SAASG,aAChCL,GAAWhC,EAAYkC,SAASI,WAAY,CAE5ClP,EAAEyF,gBAEF,IACI0J,GAAaP,GAAWhC,EAAYkC,SAASG,aAAeL,GAAWhC,EAAYkC,SAASI,WAAc,GAAI,EAC9GE,EAAgBvB,EAASC,MAAMD,EAASwB,OAAO,gBAAkBF,CAEjEC,IAAiB,GAAKA,EAAgBd,GACtCT,EAASuB,GAAeE,SAtIpC,GAAIzB,GAAUS,EAIVI,EAHAL,EAAatB,EAAOwC,cACpB7B,EAAe,GACfD,EAAe,GAEfP,EAAeH,EAAOyC,gBAAkBzC,EAAOyC,gBAAkB,KACjEhB,EAASzB,EAAO0C,iBAAmB1C,EAAO0C,iBAAmB,KAC7DvB,EAAkBnB,EAAO2C,mBAAqBC,SAAS5C,EAAO2C,qBAAuB,EAAI,EACzFjB,IAAY1B,EAAO6C,mBAAoB7M,EAAUgK,EAAO6C,kBAE5D5E,GAASmD,GACTrB,EAASnJ,GAAG,UAAWgL,GAEnB5B,EAAO8C,SACPhD,EAAOvJ,OAAOyJ,EAAO8C,QAAS,WAC1B7E,EAASmD,KACV,GAGHpB,EAAO+C,gBACP/C,EAAOgD,SAAS,iBAAkB,WAC9B/E,EAASmD,KACV,oCC9BvB,WACI,YAEA,IAAIlN,GAAaD,QAAQ1B,OAAO,uBAEhC2B,GAAWQ,UAAU,qBACjB,aAAS,UAAY,YAAS,SAAiB,SAAAC,EAAAG,EAAAmO,EAAArO,GAC3C,GAAIsO,GAAwB,GAE5B,QACI9O,OACI+O,kBAAmB,IACnBrN,mBAAoB,IACpBiI,kBAAmB,IACnBqF,kBAAmB,IACnBC,2BAA4B,IAC5BC,wBAAyB,KAE7BrO,KAAM,SAAS6K,EAAaC,EAAUC,GAWlC,QAAAuD,GAAgBrO,GAEZ,MADAA,GAAUA,EAAQ,IAAMA,EACpBsO,MAAMtO,EAAQoE,cACPpE,EAAQ6D,SAASuG,gBAAgBmE,aAEjCvO,EAAQoE,aAIvB,QAAAoK,GAAmBxO,GACf,GAAKA,EAAQ,GAAG0D,wBAAyB1D,EAAQkD,IAAI,QAGrD,MAAOlD,GAAQ,GAAG0D,wBAAwBP,IAAM2B,EAAY9E,GAGhE,QAAA8E,GAAqB9E,GAEjB,MADAA,GAAUA,EAAQ,IAAMA,EACpBsO,MAAM7Q,OAAOqH,aACN9E,EAAQ6D,SAASuG,gBAAgBpG,UAEjChE,EAAQyO,cAAcC,YAAY5J,YAyDjD,QAAA6J,GAA8BC,GAC1B,MAAOlH,GAAiBiB,WAAWiG,IAAM,EAK7C,QAAAC,GAA8BD,GAE1B,GADAE,GAAiBF,EACbE,GAAiBC,EAEjB,MADAA,IAAmB,EACZC,IAMf,QAAAC,GAAuCL,GACnC,MAAOM,GAAoBN,EAK/B,QAAAO,GAAyBC,GAMrB,GALuB,MAAnB3O,GACAA,EAAgB4O,OAAO,SAAUL,GAGrCvO,EAAkB2O,EACE,MAAhBA,EACA,MAAO3O,GAAgB6O,KAAK,SAAUN,GAS9C,QAAAO,GAA+BH,GAC3B,GAAqB,MAAhBA,GAAiD,IAAxBA,EAAavQ,OAA3C,CAWA,GARIuQ,YAAwBI,aACxBJ,EAAerQ,QAAQiB,QAAQoP,GACO,kBAAxBA,GAAaK,OAC3BL,EAAerQ,QAAQiB,QAAQoP,EAAaA,EAAavQ,OAAS,IACnC,gBAAjBuQ,KACdA,EAAevE,EAAS6E,UAAUpP,KAAK8O,IAGvB,MAAhBA,KAA0BO,MAAMC,QAAQR,IACvCO,MAAMC,QAAQR,IAAiBA,EAAavQ,OAAS,GACtD,MAAOsQ,GAAgBC,EAEvB,MAAM,IAAI3Q,OAAM,4CA9IxB,GAEIgC,GADAsO,EAAmB,KAEnBc,GAAiB,EACjBnI,EAAiB,KACjBoH,EAAgB,KAChBgB,EAA0B,KAC1BZ,GAAoB,EACpBa,EAAgBhR,QAAQiB,QAAQJ,GA2BhCoP,EAAoB,WACpB,GACIlH,GACAkI,EACAC,EACAC,EACAC,CAqBJ,OAnBI1P,KAAoBsP,GACpBjI,EAAkBuG,EAAO5N,GAAmBqE,EAAYrE,EAAgB,GAAGoD,SAASuG,iBACpF6F,EAAgBzB,EAAU3D,GAAYwD,EAAOxD,KAE7C/C,EAAkBuG,EAAO5N,GACzBuP,EAAqB,EACc,SAA/BxB,EAAU/N,KACVuP,EAAqBxB,EAAU/N,IAEnCwP,EAAgBzB,EAAU3D,GAAYmF,EAAqB3B,EAAOxD,IAGlEqE,IACAe,EAAgB5B,GAAQxD,EAAS,GAAG4D,eAAuB5D,EAAS,GAAIhH,UAAUuG,kBAGtF8F,EAAYD,EAAgBnI,EAC5BqI,EAAeD,GAAa7B,EAAO5N,GAAmBiH,EAAiB,EAEnEyI,GACApB,GAAmB,EACfD,EACIlE,EAAOwF,SAAW3Q,EAAW2Q,QACtBxF,EAAOqD,oBAEPrD,EAAO9E,OAAO8E,EAAOqD,mBAJpC,QAQOc,GAAmB,EAsFlC,OAlF6B,OAAzBf,IACAgB,EAAoBlD,EAAEuE,SAASrB,EAAmBhB,IAGtDpD,EAAOzJ,IAAI,WAAY,WAEnB,GADAV,EAAgB4O,OAAO,SAAUL,GACF,MAA3Bc,EAEA,MADAA,KACOA,EAA0B,OAOzClF,EAAOvJ,OAAO,oBAAqBsN,GACnCA,EAAqB/D,EAAO/B,mBAS5B+B,EAAOvJ,OAAO,oBAAqBwN,GACnCA,EAAqBjE,EAAOsD,mBAK5BtD,EAAOvJ,OAAO,6BAA8B4N,GAC5CA,EAA8BrE,EAAOuD,4BAarCgB,EAAgBY,GACZnF,EAAOwD,0BACP0B,EAA0BrQ,EAAW0B,IAAIyJ,EAAOwD,wBAAyBY,IAsB7EpE,EAAOvJ,OAAO,qBAAsB,SAAU+N,GACtCA,IAAiB3O,GACjB8O,EAAsBH,KAE9BG,EAAsB3E,EAAOhK,wBAEC,MAA1BkK,EAAOwF,iBACPnB,EAAgBpQ,QAAQiB,QAAQ6K,EAASlK,WAER,MAAjCmK,EAAOyF,yBACPV,EAAiBjF,EAAOrC,MAAMuC,EAAOyF,yBAGlCxC,EAAU,WACb,GAAI8B,EACA,MAAOb,MAEX,EAAG,mCC9L3B,YAEA,IAAAwB,GAAA,WAAA,QAAAA,MAMA,MAAAA,KANapT,GAAAoT,eAAAA,CAQb,IAAAC,GAAA,WAAA,QAAAA,MAIA,MAAAA,KAHWA,GAAAC,QAAkB,UAClBD,EAAAE,MAAgB,QAChBF,EAAAG,SAAmB,WAHjBxT,EAAAqT,cAAAA,CAMb,IAAAI,GAAA,mBAiGQA,GAAW7Q,EAAA8Q,EAAAC,EAAAvK,GANf,UA1FQ,IAAAwK,GAAApT,UACJqT,YACAC,IAAK,IACLpS,EAAK,IACLqS,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAI,IACNC,KAAA,UAGEC,cACAC,IAAA,GACAC,OAAQ,GACRC,IAAO,EACPC,MAAQ,GACRC,OAAS,GACTC,MAAA,GAEAC,UAAY,EACZC,WAAa,IACbC,YAAa,IACbC,OAAU,IACVC,SAAW,GACXC,UAAU,GACVC,KAAA,GACAC,QAAU,IACVC,SAAU,IAEVC,IAAO,IACPC,MAAS,GAETC,MAAQ,GACRC,OAAU,GACVC,KAAQ,GACRC,OAAS,GAETC,IAAA,GACAC,OAAS,GACTC,QAAQ,GAERC,GAAA,GACAC,SAAW,GACXC,UAAQ,GAERC,GAAM,GACN/Q,KAAQ,GACRgR,GAAA,GACA5J,MAAQ,GAER6J,KAAM,GACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAK,IACLC,IAAO,IACPC,IAAO,IACTC,IAAA,UAGEC,WACAC,OAAQC,QAAQ,EAAOC,SAAS,GAChCC,MAAOF,QAAQ,EAAOC,SAAS,GAC/BE,KAAMH,QAAQ,EAAOC,SAAS,GAChCG,MAAAJ,QAAA,EAAAC,SAAA,IAkBEtX,KAAKyE,OAAOrC,EACZpC,KAAK0X,QAAQxE,EACblT,KAAKwB,MAAM2R,EAASwE,KACpB3X,KAAKmT,OAAQA,EAEbnT,KAAK4I,SAAAA,OACDgP,cAAuD,SAAOpW,GAC9D,GAEIV,GAFAX,EAAYqB,GAAC3B,OAAA2B,SAGb4R,EAAID,OAAO0E,eAAC,CACZ,GAAIC,MACA3X,EAAAsE,OACHqT,EAAA3X,EAAAsE,OACGtE,EAAA4X,aACHD,EAAA3X,EAAA4X,YAGqB,GAAlBD,EAAOE,WACVF,EAAAA,EAAAG,YACuE,SAAPH,EAAOI,SAAA,YAAAJ,EAAAI,QAC3E,OAGG/X,EAAA4O,QACHjO,EAAAX,EAAA4O,QACO5O,EAAG6O,QACVlO,EAAAX,EAAA6O,MAID,IAAImJ,GAAYC,OAAAC,aAAAvX,GAAAuC,aAAC,MAAAvC,IACbqX,EAAY,KAAC,KAAArX,IAEbqX,EAAqB,IAEzB,IAAIG,GAAelF,EAAAsE,QAAAnK,MAAA,KAEfgL,EAAE,CAASpY,GAAAqY,UACXpF,EAAE+D,UAASI,KAAAD,QAAAnX,EAAAqY,SAACrY,EAAAsY,WACZrF,EAAE+D,UAAOC,MAAAE,QAAAnX,EAAAsY,UAACtY,EAAAuY,SACVtF,EAAE+D,UAAQK,IAAAF,QAAAnX,EAAAuY,QAACvY,EAAAwY,UAEXvF,EAAc+D,UAAAM,KAAAH,QAAAnX,EAAAwY,QAClB,IAAI/X,GAAE,MACFA,EAAK,EAAWA,EAAI0X,EAAIrX,OAAAL,IAAA,CAExB,GAAIgY,GAACN,EAAI1X,EACA,SAALgY,GAAK,WAAAA,GACLL,IACHnF,EAAA+D,UAAAI,KAAAF,QAAA,GACQ,SAAAuB,GACLL,IACHnF,EAAA+D,UAAAC,MAAAC,QAAA,GACQ,OAAAuB,GACLL,IACHnF,EAAA+D,UAAAK,IAAAH,QAAA,GACQ,QAAAuB,GACLL,IACHnF,EAAA+D,UAAAM,KAAAJ,QAAA,GACOuB,EAAA3X,OAAK,EACLmS,EAAKoB,aAAAoE,IAAA9X,GACRyX,IAEGnF,EAAKD,OAAO0F,QAAiBzF,EAAKD,OAAA0F,SAAA/X,GACzCyX,IACuBJ,GAAKS,EACrBL,IAEInF,EAAAC,WAAgB8E,IAAYhY,EAAAsY,WAC5BN,EAAI/E,EAAcC,WAAG8E,GACjBA,GAAKS,GACRL,WAObA,IAAKD,EAAArX,QACLmS,EAAK+D,UAAUI,KAAKD,SAAQlE,EAAQ+D,UAAUI,KAACF,QAC/CjE,EAAK+D,UAAUC,MAAIE,SAAWlE,EAAK+D,UAAUC,MAAIC,QACjDjE,EAAK+D,UAAUK,IAAIF,SAAQlE,EAAQ+D,UAAUK,IAACH,QAE9CjE,EAAK+D,UAAUM,KAAEH,SAAAlE,EAAA+D,UAAAM,KAAAJ,SAEjBjE,EAAKxK,SAAKzI,GAELiT,EAACD,OAAY2F,YAatB1F,EAAK+D,UAAUI,KAAKD,SAAQ,EAC5BlE,EAAK+D,UAAUC,MAAIE,SAAU,EAC7BlE,EAAK+D,UAAUK,IAAIF,SAAQ,OAC7BlE,EAAA+D,UAAAM,KAAAH,SAAA,KAfUnX,EAAE0M,cAAc,EAGhB1M,EAAE2M,aAAI,EACF3M,EAAEyM,kBACFzM,EAAEyM,kBACLzM,EAAAyF,mBAGJ,IAtMjB,MA2FIqN,GAAA8F,SACI,UACA,qBACsB,SACmB,YA+GhD9F,+BC9NDU,GAAA,SAAahT,EAAAlB,EAAAD,GAEb,YAqBA,IAAAwZ,GAAArY,EAAA,sBAKIsY,EAAA,mBAKSA,GAAYC,EAAA/F,GACjB,UAEAnT,MAAKmZ,KAAAD,EACRlZ,KAAAoZ,eAAAjG,EAAAjF,EAAAmL,SAAAlG,EAAAnT,KAAAsZ,oBAAAtZ,KAAAsZ,mBAEOtZ,KAAAuZ,cAhBC,SASMR,SAAA,OAAA,YASDS,UAAAF,iBAAc,cACpBG,IACA9B,KAAAqB,EAAqBnG,cAAAC,QACrBgG,WAAQ,EACRjB,gBAAa,EACf6B,OAAAzT,SAEF4S,QAAO,KAGH,OAAAY,MAEUD,UAAMG,iBAAA,SAAAvX,EAA0C8Q,EAACtK,SAE3DxG,GAMA8Q,IAMAtK,IACH5I,KAAAmZ,KAAAS,MAAA,qDAEU,IARV5Z,KAAAmZ,KAAAS,MAAA,wDAEI,IARJ5Z,KAAAmZ,KAAAS,MAAA,4CAEI,0BAgBOX,EAAWO,UAAA,YAC3BK,IAAC,mCAAAC,YAAA,EAEMC,cAAA,MAECP,UAAkBQ,IAAW,SAAYC,EAAcrR,EAAAuK,GAC3D,GAAI+G,GAAU/G,EAAcjF,EAAAmL,SAAOlG,EAAAnT,KAAAoZ,gBAAApZ,KAAAoZ,eAG/BlG,EAAqB+G,EAAU5W,cAC/BjB,EAAU8X,EAASR,MAQvB,IAPMtX,EAAL,gBAAA8X,GAAAR,OAAOzT,SAAAkU,eAAAD,EAAAR,QAIEQ,EAAiBR,OAG1B1Z,KAAA2Z,iBAAAvX,EAAA8Q,EAAAtK,GAAD,CAON,GAAIwR,GAAQ,GAAkBpB,GAAC/F,iBAAA7Q,EAAA8Q,EAAAgH,EAAAtR,QACrB2Q,WAAQrG,GAAiBkH,EAC5BhY,EAAAiY,iBAAKjY,EAAKiY,iBAAoBH,EAAEvC,KAAAyC,EAAAxC,eAAA,GAEhCxV,EAAAkY,YAAKlY,EAAEkY,YAAA,KAAAJ,EAAAvC,KAAAyC,EAAAxC,eAGXxV,EAAA0B,GAAAoW,EAAAvC,KAAAyC,EAAAxC,mBAI6B4B,UAAKe,OAAW,SAAAN,GAEhD,GAAAO,GAAuBP,EAAA5W,cACnBoX,EAASza,KAAAuZ,WAAAiB,EAEb,UAFcxa,MAAOuZ,WAAAiB,GAEjBC,EAAJ,CAEA,GAAI/V,GAAA+V,EAAWjZ,MAEXY,EAAQqY,EAAAhW,OACFmE,EAAQ6R,EAAW7C,aACtBxV,GAAAsY,YAAKtY,EAAKsY,YAAQ,KAAAhW,EAAoBkE,GAEtCxG,EAAAuY,oBAAKvY,EAAEuY,oBAAAjW,EAAAkE,GAAA,GAIXxG,EAAAuD,IAAAjB,EAAAkE,KAxGQqQ,OA6GbA,kBAAAA,KAsBA2B,GAAC,WAlBG,QAAAA,MAoBJ,6BAnBoBA,EAAQpB,UAAA,UACxBK,IAAC,iBAED7Z,MAAkB6a,SAElBC,IAAC,SAAA3X,yCAJA2W,YAAA,EAMMC,cAAA,MAKkBP,UAAKuB,MAAA,OAAA,SAAA7B,aAKlC,OAF6B,OAArBlZ,KAAOgb,WACVhb,KAAAgb,SAAA,GAAA/B,GAAAC,EAAAlZ,KAAA6a,UACL7a,KAAAgb,WAEOJ,oCC5JPK,SAAa,uBAAAL,KAgBbM,qBAAA,IAAAtH,GAAA,SAAAjT,EAAAlB,EAAAD,sBAemB,mBACN2b,GAAYlO,EAAAC,EAAAF,EAAAkM,EAAApX,EAAAsZ,GAEjB,cACIhI,GAAKpT,aACLmZ,KAAMD,GACNhM,EAAKmO,kBAQL,WADArb,MAAAmZ,KAAOS,MAAA,gCANV5Z,MAAAsb,gBAAAxZ,EAAAoL,EAAAmO,kBAAOnO,GAAAmO,iBAQN,OAPErb,MAAKsb,gBAAWtO,GAAA5E,YAOd8E,EAAEqO,iBAAArN,EAAAsN,SAAAtO,EAAAqO,kBACJvb,KAAKyb,cAAWvO,EAAAqO,qBAShBG,QAAKxO,EAAAyO,kBAA+BzO,EAAMyO,qBAC9C3b,KAAG0b,QAAKhC,OAASzM,MACpBmO,GAAApB,IAAAha,KAAAyb,cAAA,SAAAtb,GAEOiT,EAAAkI,gBAAAtO,GAAA5E,QAARjI,EAAAA,MACIH,KAAK0b,cATD1b,MAACmZ,KAAOS,MAAG,+BAgBnB,SA7CAb,SAmCC,WAAA,SAAA,SAAA,OAAA,SAAA,wBAKLoC,EAAA3B,UAACoC,iBAAA,SAAAC,GAAA7b,KAAAsb,mBAKGH,yBAIQW,GAAYha,UAEnBI,SAAA,IAEMZ,OAAA,EACFya,WAAOZ,KANGpC,SAAK,kBCvExBtZ,OAAa,6HAcb,QAAAuc,KAAAhc,KAAAic,YAAAC,EAFW,IAAA,GAAAC,KAAAC,GAAAA,EAAAC,eAAwBF,KAAAD,EAAAC,GAAqBC,EAACD,GAEzDD,GAAA1C,UAAA,OAAA4C,EAAAE,OAAAC,OAAAH,IAAAJ,EAAAxC,UAAA4C,EAAA5C,UAAA,GAAAwC,OAyBAQ,sBAAC,qBAAD,IAzBAC,GAyBC,WAzBY,QAAAA,MA2BqB,MAAAA,gCAElCC,GAAC,SAAAC,GAFiC,QAAAD,KAArB,MAAAC,GAAAC,MAAA5c,KAAA6c,YAAY7c,KAIzB,MAFA8c,GAAAJ,EAACC,GAEDD,QAIWA,aAAAA,QAEA,WACX,QAACK,KAAD/c,KAAAgd,mBAAChd,KAAAid,kBAPYjd,KAAAkd,eAAA,KAqCT,MAAAH,QASIA,gBAAkBA,QACH,mBACVI,GAAiBC,EAACvb,EAAAG,EAAAqb,EAAAC,EAAAlC,GACvBpb,KAAKud,QAASH,EACdpd,KAAKwd,WAAYtP,EAAAuP,UAAUzd,KAAAud,SAC3Bvd,KAAK0d,WAAA7b,EAGL7B,KAAK2d,QAAA3b,EACLhC,KAAK4d,UAAYP,EACpBrd,KAAA6d,UAAAP,EAGOtd,KAAA8d,sBAAA1C,EAEJpb,KAAK+d,aAAA/d,KAAgBud,QAAKP,iBAC1Bhd,KAAK+d,aAAA/d,KAAgBud,QAAKN,yBAGrBzD,UAAkBwE,gBAAQ,WAE/Bhe,KAAKie,gBAAgBje,KAACwd,WAAAR,iBAEtBhd,KAAKie,gBAAeje,KAAAwd,WAAeP,gBACtCjd,KAAA+d,aAAA/d,KAAAud,QAAAP,iBAEOhd,KAAA+d,aAAA/d,KAAAud,QAAAN,gBAARjd,KAAA0d,WAAAQ,MAIC1e,EAAAgd,sBAAAxc,KAAAud,SAHGvd,KAAEwd,WAAetP,EAAEuP,UAAEzd,KAAAud,YAElB/D,UAAAyE,gBAAA,SAAAE,GACN,GAAA/K,GAAApT,IAEOkO,GAAAkQ,KAAAD,EAAA,SAAAvF,GACAxF,EAAA0K,sBAAoBvD,OAAW3B,EAAAyF,eAG9B7E,UAAAoC,iBAAA,SAAAlE,EAAAlW,GACL,IAACkW,EAAA4G,SAAApQ,EAAAqQ,WAAA7G,EAAA4G,SAEG5G,EAAQ4G,OAAW9c,GAFvB,CAOA,GAAIkW,EAAQ8G,SAER,WADA9G,GAAK8G,SAAQhd,EAIjB,IAAIkW,EAAQ+G,KAER,YADAze,KAAK2d,QAAAe,SAAcD,KAAQ/G,EAAK+G,KAIpC,IAAI/G,EAAQiH,eACR3e,MAAI4d,UAAKe,IAAUjH,EAAIiH,QAGvBjH,EAACkH,OACD,GAAA5e,KAAO6d,UAAAgB,IAAA,UAAA,CACV,GAAAC,GAAA9e,KAAA6d,UAAAhE,IAAA,SAEGiF,GAAe,GAACpH,EAAAkH,MAAAlH,EAAAqH,kBAIhBrH,GAAKlW,MACRxB,KAAA0d,WAAA/V,WAAA+P,EAAAlW,OAGLxB,KAAA0d,WAcC/V,WAAA,sBAAA+P,EAAA2G,cAVW7E,UAA2BuE,aAAmB,SAAGI,MACrD/K,GAAIpT,KAEJgf,EAAiBhf,KAAKud,QAAML,eAAcld,KAAAud,QAAAL,yBAC1CiB,EAAa,SAAUvF,GAEvB,GACInU,GADJ0O,EAAKyF,EAAA8C,QAAA9C,EAAqB8C,QAAOsD,CAEjCva,GAASmU,EAAEnU,OAAAmU,EAAAnU,OAAAmU,EAAAqG,SACZ9L,EAAAuG,OAAAjV,EACN2O,EAAA0K,sBAAA9D,IAAApB,EAAAyF,SAAA,SAAAle,GAIDiT,EAAAwI,iBAAWhD,EAAAzY,IAAXgT,iEAEC,MAAAnT,MAAAud,qBAED,gBACW,0BAGeJ,EAAqB3D,UAAA,sBAC3C,WACA,MAAKxZ,MAAAud,QAAeL,oEAJvBld,KAAAge,+BAOD,gBACW,0BAGgBb,EAAqB3D,UAAA,uBAC5C,WACA,MAAKxZ,MAAAud,QAAeP,oEAJvBhd,KAAAge,+BAOD,gBACW,0BAGeb,EAAqB3D,UAAA,sBAC3C,WACA,MAAKxZ,MAAAud,QAAeN,kEAJvBjd,KAAAge,mBAQGlE,YAAI,gBACK,MAELN,UAAmB1V,GAAC,SAAQkZ,EAAkBC,GAC9CD,GAAa9O,EAAA8D,QAAcgL,KAC9Bhd,KAAAud,QAAAP,gBAAAA,GAGJC,GAAA/O,EAAA8D,QAAAiL,KAEMjd,KAAAud,QAAAN,eAAPA,QAEQe,qBAGCxE,UAAkB0F,QAAA,SAAAjC,GAC1BA,GAAA/O,EAAA8D,QAAAiL,KAEMjd,KAAAud,QAAAN,eAAPA,GAEIjd,KAAKge,mBAETb,EAAC3D,UAAA7T,IAAA,WACL3F,KAAAud,QAAAP,mBAAChd,KAAAud,QAAAN,kBAEDjd,KAAAge,mBACYb,KAGRgC,EAAA,mBAAAA,UACI5B,QAAW,GAACR,gCAGEoC,EAAsB3F,UAAA,cACpC,WACH,MAAAxZ,MAAAud,yBAJAvd,KAAAud,QAAApa,GAAA,GAAA4Z,gBAMD,gBACW,0BAGeoC,EAAqB3F,UAAA,sBAC3C,WACH,MAAAxZ,MAAAud,QAAAL,gCAJAld,KAAAud,QAAAL,eAAA/Z,GAAA,kBAMD,gBACW,0BAGgBgc,EAAqB3F,UAAA,uBAC5C,WACH,MAAAxZ,MAAAud,QAAAP,iCAJAhd,KAAAud,QAAAP,gBAAA7Z,mBAMD,gBACW,0BAGegc,EAAqB3F,UAAA,sBAC3C,WACH,MAAAxZ,MAAAud,QAAAN,gCAJAjd,KAAAud,QAAAN,eAAA9Z,OAaG2W,YAAW,EAEXC,cAAS,MAGGP,UAASuB,MAAA,aAAA,UAAA,YAAA,YAAA,uBAAA,SAAAlZ,EAAAG,EAAAqb,EAAAC,EAAAlC,GACxB,UAGE,OAFN,OAADpb,KAAAgb,WAAChb,KAAAgb,SAAA,GAAAmC,GAAAnd,KAAAud,QAAA1b,EAAAG,EAAAqb,EAAAC,EAAAlC,IAEMpb,KAAAgb,WAEFmE,IClSLhe,mFAEA,YAEA,SAAAie,GAAAC,GACA,IAAA,GAAAlD,KAAAkD,GAAA7f,EAA4B6c,eAAAF,KAAA3c,EAAA2c,GAAAkD,EAAAlD,IAG5Bhb,QAAA1B,OAAA,gBAAA,aAAmC,cACnCkB,EAAA,qDCFAA,EAAC,yBACGA,EAAa,yBAETA,EAAA,4DAEiB,EAAA2e,sBAAyB,EAAMC,qBAAe,IAAQC,IAAA,SAAA7e,EAAAlB,EAAAD,kCAG5D2B,QAAK1B,OAAA,oBACZmC,UAAM,eAAuB,SAAU,cAAW,WAAA,SAAAE,EAAAiL,EAAA5B,mBAiB1C,WAEJ,OAKA,SAAS6B,EAAKC,EAAYC,WAyCVhK,GAAOC,GACnB,MAAa,OAAbA,MAEHA,IAGDA,EAAAA,EAAAC,WAAoBC,cACD,KAAXF,GAAW,QAAAA,YAMPsc,GAAIC,gBAEAA,EAAkBC,UAAYC,EAAOF,EAAaE,OAAMC,EAASH,EAAAG,OAAA5S,EAAAvK,KAAAod,EAAAC,GAAAC,EAAAH,EAAA5e,OAAAgf,EAAA,WACrE,MAACP,GAAAO,KACGP,EAAkBO,MACLC,SAAbP,GAAuBA,KAAA,IAC1BA,EAAAE,EAAA5R,MAAA4R,EAAArQ,OAAA,WAAAoQ,EAAA,OAIDD,GAAG,GAAAA,EAAAK,EACEH,EAAKF,GADd,aAGcD,EAAAS,eAEdlT,EAAKvK,KAASod,GAAAhX,YAAA,yBAAC3H,QAAAiB,QAAmB6d,GAC9BvY,SAAU,uBAAE+H,QACnB2Q,GACJC,EAAAJ,GAACE,GAEFG,EAA6BT,aAIrBS,GAAoBT,WAmBhBU,QAAUC,GAAerf,QAAEiB,QAAYyd,EAAAY,IAAAC,EAAAF,EAAAje,KAAA,SAC3Coe,IACHA,EAAA3T,EAAAyT,GAACG,GAEFA,EAAA5T,EAAA0T,GACIG,uBAMkB1f,QAAEiB,QAAQyd,EAAAY,IAAAC,EAAAF,EAAAje,KAAA,eAEXyK,WAELvI,OAAQwI,EACRgT,KAAAO,EACHvS,MAAAwS,EACFK,GAAAJ,EACNK,SAAAN,EACJO,SAAAC,WAtCoBR,KAEP,MACT,GAAAxS,GAAA,EAAAA,EAAA4R,EAAA5e,OAAAgN,IACJ,GAAAS,EAAAmR,EAAA5R,IAAA1G,SAAA,YAAA,CAGGkZ,EAAoBxS,CACpB,OAEAgT,GAAcR,GAAUA,KAAA,EAC3BzT,EAAA9E,OAAAqY,GAMGvT,EAAI9E,OAAA2Y,WAoCRR,GAAkBa,GAClB,IAAAd,EAAA,CAEA,GAAGrW,GAAKkD,EAAApH,SAAAN,IAAAyE,EAAAiD,EAAAwD,SAAAvG,EAAAH,EAAAC,EAAAmX,EAAAD,EAAArb,SAAAN,IAAA6b,EAAAF,EAAAG,aAAA,GAAAC,EAAAH,EAAAC,EAAAhX,EAAA6C,EAAA7G,WAERmb,IAAI,aACA,WACHA,GAAA,GACD,KACIxX,EAASoX,EACZlU,EAAA7G,UAAAgE,EAAA+W,EAAApX,GAEHG,EAAAoX,GAEFrU,EAAA7G,UAAAgE,EAAyCkX,EAAWpX,YAMhDsX,GAAmBC,GACtB,MAAAA,GAAAzJ,WAAA0J,KAAAC,UAACF,EAAAxJ,WAGMwJ,UAIHG,GAAApgB,GAED,GAAAqgB,GAAYrgB,EAACsgB,eAAA,GAAAC,EAAAC,CAChB,OAAAC,MAAAC,IAAAL,EAAAnb,MAAAyb,GAAAJ,GAAAE,KAAAC,IAAAL,EAAAjb,MAAAwb,GAAAL,UASOM,GAAW7gB,GACfie,GAAUQ,KAAAze,EAAe8gB,cAAenC,YAAA,YAEvCoC,GAAAC,GACD,GAAIhhB,GAAAghB,EAAA7gB,aACJ,IAAIH,EAAc,cAAAP,OAAkB,EAEpC,OAAA,CAEA,IAAAwhB,GAAgBjB,EAAchgB,EAAAiD,QAE9Bod,EAAWrgB,EAAe,cAAA,SAC1BkhB,IAAc,EAEdC,EAAoBnhB,EAAGohB,UAEvBH,EAACA,EAEDN,EAAYN,EAAAnb,MACf0b,EAAAP,EAAAjb,MAEDpF,EAAAohB,UAAuBC,EAAAC,GAEf,UAEAC,GAAWP,GAEf,IAAIE,EACA,OAAA,CAEJ,IAAClhB,GAAAghB,EAAA7gB,aAQD,QANA8gB,IAAYjB,EAAAhgB,EAAAiD,SAAAmd,EAAApgB,MACfkhB,GAAA,EAEDD,EAAsB,OAGb,UAEJO,GAAAR,GACD,GAAWS,EAEX,QAAKP,IAGLlhB,MAACghB,EAAA7gB,cAEIH,MAAMohB,UAAYC,EAAAC,GACnBI,GAAY,GACf,GAKD1hB,MAAAohB,UAAsBD,EAAUQ,IAIhCD,GAAkB,EAElBL,EAAarhB,MAASohB,UAEtBK,EAAaN,EAChBD,GAAA,EAEDC,EAAyB,EACrBlD,GAAaQ,KAAGuC,EAAMF,cAAAnC,YAAA,KACtB,IAGJ,QAAAiD,GAAoBZ,GAChBE,GAAgB,EAGhBD,EAAe,aAEVY,GAACljB,MAEF4O,GAAI5O,EAAA6O,OAAiB7O,EAAE4O,cACnBhC,EAAiBkC,SAAQqU,OAAAvU,GAAAhC,EAAAkC,SAAAsU,kDAIXvW,WAEXvI,OAAAwI,EACNgB,MAAAwS,EAEJR,KAAAhT,EAAAvK,KAAA,oBAQO,IAAIqM,GAAQhC,EAAckC,SAASC,YAC/BH,GAAOhC,EAAWkC,SAAYG,aAIlCL,GAAWhC,EAAWkC,SAAEE,UAAkBJ,GAAYhC,EAAYkC,SAAUI,WAAA,CAC/ElP,EAAAyF,iBACRzF,EAAAyM,iBAED,IAAAiT,GAAmB5S,EAAKvK,KAAAod,EAAAC,GAAAyD,EAAAzU,GAAAhC,EAAAkC,SAAAG,aAAAL,GAAAhC,EAAAkC,SAAAI,WAAA,GAAA,EAAAoU,EAAAhD,EAAA+C,CAEhB/D,IACAE,UAAe8D,EAAc5D,MAAYA,EAAAM,YAAa,aAMtDuD,GAAAliB,MACAqe,GAAKW,EAAiBvT,EAASvK,KAAGod,EAAU,eAC5CpY,SAAa,cAChB,IAAA8Y,EAAAvf,SACJwf,EAAAkD,EAAA3W,GAED6S,EAAA5S,EAAyBvK,KAAAod,EAAAC,GACrBN,GAAcE,UAAYc,GAAgB,EAAAZ,MAAUA,EAAAM,YAAY,KAG1E,QAAAyD,GAAApiB,GACHyL,EAAAvK,KAAAod,EAAA,cAAAC,GAAAjX,YAAA,cAxSS,GACAqZ,GAAYC,EAAcM,EAAWC,EAAcF,EAAAI,EAAAK,EADnDS,EAAYzW,EAAS2W,YAAW/hB,EAAcoL,EAAA2W,aAAA,KAAAlD,EAAAgD,EAAAA,EAAAG,OAAA,KAAAC,EAAA7W,EAAA8W,cAAAliB,EAAAoL,EAAA8W,eAAA,KAAApD,EAAAmD,EAAAA,EAAAD,OAAA,KAAAG,EAAA/W,EAAAgX,UAAApiB,EAAAoL,EAAAgX,WAAA,KAAAC,EAAAjX,EAAAkX,mBAAAtiB,EAAAoL,EAAAkX,oBAAA,KAAAhE,EAAAld,EAAAgK,EAAAmX,aAAAtE,EAAA7c,EAAAgK,EAAAoX,eAAA,WAAA,GAAAxE,EAAA5c,EAAAgK,EAAAqX,aAAA,uBAAA,kBAAA9D,EAAAkD,EAAA3W,GAAAwX,EAAAvX,EAAA1K,KAAA,YAAAkiB,EAAAvX,EAAAuX,iBAAAlD,GAAA,EAE9CS,EAAY,GAAWc,EAAW,IAAEK,EAAa,GACjDlW,GAAS1K,KAAG,WAAYiiB,GAAuB,GAC/CvX,EAASnJ,GAAG,QAAAgc,EAAeuC,GAC3BpV,EAASnJ,GAAG,aAAWgc,EAAWyC,GAClCtV,EAASnJ,GAAG,YAAWgc,EAAWiD,GAClC9V,EAASnJ,GAAG,WAAYgc,EAAWkD,GAGnC/V,EAAKnJ,GAAA,cAAiBgc,EAAesD,KACjCtf,GAAO,UAAOuf,KACVvf,GAAA,UAAa4f,KACd5f,GAAA,WAAA8f,GACN1gB,EAAAgK,EAAAqX,aAKGvX,EAAGvJ,OAAAsgB,EAAA,SAAAW,GACN3f,WAAA,WAGG0a,GAAmBG,OAAA8E,EAAAvE,YAAA,KACZ,KAVLnT,EAAEvJ,OAAAkgB,EAAA,SAAAF,GACJhE,GAAcE,UAAU8D,WAcjBhgB,OAAKghB,EAAA,WACT1f,WAAA,WACN0b,EAAAkD,EAAA3W,GAGUyS,GAAaE,UAAAc,KAGxB,UAESd,UAAMc,EAAAZ,MAAA5S,EAAAvK,KAAAod,kBC1E3B6E,IAAA,SAAWhkB,EAAUlB,EAAAD,kCAGN2B,QAAA1B,OAAA,oCACH,qBAAyB,UAAA,aAA6B,SAAAuC,EAAAH,mBAEtD,YAEH+iB,wBAAA,8BACGC,sBAAsB,4BAEtBC,WAAQ,2CACA,+CAEA9X,KACH+X,eAAA,WACH,GAAA/X,EAAA4X,0BAGM,MADJ/iB,GAAamjB,UAAW,EACbhY,EAAA6X,6BAGD7X,EAAAzJ,IAAc,oBAAG,SAAA/B,GAC1BwL,EAAA4X,4BAAA5iB,EAAAijB,QAAAjY,EAAA6X,wBAAKhjB,EAAEmjB,UAAA,EACJ9W,EAAEqQ,WAAWvR,EAAOkY,cAAelY,EAAOkY,cAC7C1jB,EAAAoE,kBAIDsI,EAAAqQ,WAAQvR,EAAc8X,aAAQ9X,EAAA8X,cAGrC9X,GAAAzJ,IAAA,WAAA,WACHvB,EAAA+iB,eAAA,KACHI","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿/**\r\n * @file Registration of all WebUI list controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipBehaviors', [\r\n        'pipFocused',\r\n        'pipSelected',\r\n        'pipInfiniteScroll',\r\n        'pipUnsavedChanges',\r\n        'pipDraggable',\r\n        'pipShortcuts'\r\n    ]);\r\n    \r\n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipDraggable\", []);\r\n\r\n    thisModule.service('pipDraggable', function () {\r\n\r\n        var scope = this;\r\n        scope.inputEvent = function (event) {\r\n            if (angular.isDefined(event.touches)) {\r\n                return event.touches[0];\r\n            }\r\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n                return event.originalEvent.touches[0];\r\n            }\r\n            return event;\r\n        };\r\n\r\n    });\r\n\r\n    thisModule.directive('pipDrag',\r\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\r\n            return {\r\n\r\n                restrict: 'A',\r\n                link: function (scope: any, element, attrs: any) {\r\n                    scope.value = attrs.ngDrag;\r\n                    var LONG_PRESS = 50; // 50ms for longpress\r\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\r\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n                    var _pressEvents = 'touchstart mousedown';\r\n                    var _moveEvents = 'touchmove mousemove';\r\n                    var _releaseEvents = 'touchend mouseup';\r\n                    var _dragHandle;\r\n\r\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n                    var _myid = scope.$id;\r\n                    var _data = null;\r\n\r\n                    var _dragOffset = null;\r\n\r\n                    var _dragEnabled = false;\r\n\r\n                    var _pressTimer = null;\r\n\r\n                    var _elementStyle: any = {};\r\n\r\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\r\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\r\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\r\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\r\n\r\n                    var getDragData = $parse(attrs.pipDragData);\r\n                    var\r\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\r\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\r\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\r\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\r\n                        scrollParent = false,\r\n\r\n                        scrollContainer = angular.element(window),\r\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\r\n\r\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n                    var _deregisterRootMoveListener = angular.noop;\r\n\r\n                    initialize();\r\n\r\n                    return;\r\n\r\n                    //-----------------------------------\r\n\r\n                    function initialize() {\r\n                        element.attr('pip-draggable', 'false'); // prevent native drag\r\n                        // check to see if drag handle(s) was specified\r\n                        // if querySelectorAll is available, we use this instead of find\r\n                        // as JQLite find is limited to tagnames\r\n                        let dragHandles: any;\r\n                        if (element[0].querySelectorAll) {\r\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\r\n                        } else {\r\n                            dragHandles = element.find('[pip-drag-handle]');\r\n                        }\r\n                        if (dragHandles.length) {\r\n                            _dragHandle = dragHandles;\r\n                        }\r\n                        toggleListeners(true);\r\n\r\n                        // Initialize scroll container\r\n                        if (scrollParent) {\r\n                            scrollContainer = angular.element(element.parent());\r\n                        } else if (attrs.pipScrollContainer) {\r\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\r\n                        } else {\r\n                            scrollContainer = angular.element(window);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    function toggleListeners(enable) {\r\n                        if (!enable)return;\r\n                        // add listeners.\r\n\r\n                        scope.$on('$destroy', onDestroy);\r\n                        scope.$watch(attrs.pipDrag, onEnableChange);\r\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\r\n                        // wire up touch events\r\n                        if (_dragHandle) {\r\n                            // handle(s) specified, use those to initiate drag\r\n                            _dragHandle.on(_pressEvents, onpress);\r\n                        } else {\r\n                            // no handle(s) specified, use the element as the handle\r\n                            element.on(_pressEvents, onpress);\r\n                        }\r\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\r\n                            element.on('mousedown', function () {\r\n                                return false;\r\n                            }); // prevent native drag for images\r\n                        }\r\n                    }\r\n                    \r\n                    function onDestroy(enable) {\r\n                        toggleListeners(false);\r\n                    }\r\n\r\n                    function onEnableChange(newVal, oldVal) {\r\n                        _dragEnabled = (newVal);\r\n                    }\r\n\r\n                    function onCenterAnchor(newVal, oldVal) {\r\n                        if (angular.isDefined(newVal))\r\n                            _centerAnchor = (newVal || 'true');\r\n                    }\r\n\r\n                    function isClickableElement(evt) {\r\n                        return (\r\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n                        );\r\n                    }\r\n\r\n                    /*\r\n                     * When the element is clicked start the drag behaviour\r\n                     * On touch devices as a small delay so as not to prevent native window scrolling\r\n                     */\r\n                    function onpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n\r\n                        if (isClickableElement(evt)) {\r\n                            return;\r\n                        }\r\n\r\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                            // Do not start dragging on right-click\r\n                            return;\r\n                        }\r\n\r\n                        saveElementStyles();\r\n\r\n                        if (_hasTouch) {\r\n                            cancelPress();\r\n                            _pressTimer = setTimeout(function () {\r\n                                cancelPress();\r\n                                onlongpress(evt);\r\n                            }, LONG_PRESS);\r\n                            $document.on(_moveEvents, cancelPress);\r\n                            $document.on(_releaseEvents, cancelPress);\r\n                        } else {\r\n                            onlongpress(evt);\r\n                        }\r\n\r\n                    }\r\n\r\n                    function saveElementStyles() {\r\n                        _elementStyle.left = element.css('css') || 0;\r\n                        _elementStyle.top = element.css('top') || 0;\r\n                        _elementStyle.position = element.css('position');\r\n                        _elementStyle.width = element.css('width');    \r\n                    }\r\n\r\n                    function cancelPress() {\r\n                        clearTimeout(_pressTimer);\r\n                        $document.off(_moveEvents, cancelPress);\r\n                        $document.off(_releaseEvents, cancelPress);\r\n                    }\r\n\r\n                    function onlongpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        offset = element[0].getBoundingClientRect();\r\n                        if (allowTransform)\r\n                            _dragOffset = offset;\r\n                        else {\r\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\r\n                        }\r\n\r\n\r\n                        (<any>element).centerX = element[0].offsetWidth / 2;\r\n                        (<any>element).centerY = element[0].offsetHeight / 2;\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n                        _mrx = _mx - offset.left;\r\n                        _mry = _my - offset.top;\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - (<any>element).centerX - $window.pageXOffset;\r\n                            _ty = _my - (<any>element).centerY - $window.pageYOffset;\r\n                        } else {\r\n                            _tx = _mx - _mrx - $window.pageXOffset;\r\n                            _ty = _my - _mry - $window.pageYOffset;\r\n                        }\r\n\r\n                        $document.on(_moveEvents, onmove);\r\n                        $document.on(_releaseEvents, onrelease);\r\n                        // This event is used to receive manually triggered mouse move events\r\n                        // jqLite unfortunately only supports triggerHandler(...)\r\n                        // See http://api.jquery.com/triggerHandler/\r\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\r\n                            onmove(origEvent);\r\n                        });\r\n                    }\r\n\r\n                    function onmove(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        if (!element.hasClass('pip-dragging')) {\r\n                            _data = getDragData(scope);\r\n                            element.addClass('pip-dragging');\r\n                            $rootScope.$broadcast('draggable:start', {\r\n                                x: _mx,\r\n                                y: _my,\r\n                                tx: _tx,\r\n                                ty: _ty,\r\n                                event: evt,\r\n                                element: element,\r\n                                data: _data\r\n                            });\r\n\r\n                            if (onDragStartCallback) {\r\n                                scope.$apply(function () {\r\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n\r\n                        if (horizontalScroll || verticalScroll) {\r\n                            dragToScroll();\r\n                        }\r\n\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - (<any>element).centerX - _dragOffset.left;\r\n                            _ty = _my - (<any>element).centerY - _dragOffset.top;\r\n                        } else {\r\n                            _tx = _mx - _mrx - _dragOffset.left;\r\n                            _ty = _my - _mry - _dragOffset.top;\r\n                        }\r\n\r\n                        moveElement(_tx, _ty);\r\n\r\n                        $rootScope.$broadcast('draggable:move', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            uid: _myid,\r\n                            dragOffset: _dragOffset\r\n                        });\r\n                    }\r\n\r\n                    function onrelease(evt) {\r\n                        if (!_dragEnabled)\r\n                            return;\r\n                        evt.preventDefault();\r\n                        $rootScope.$broadcast('draggable:end', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            callback: onDragComplete,\r\n                            uid: _myid\r\n                        });\r\n                        element.removeClass('pip-dragging');\r\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n                        reset();\r\n                        $document.off(_moveEvents, onmove);\r\n                        $document.off(_releaseEvents, onrelease);\r\n\r\n                        if (onDragStopCallback) {\r\n                            scope.$apply(function () {\r\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\r\n                            });\r\n                        }\r\n\r\n                        _deregisterRootMoveListener();\r\n                    }\r\n\r\n                    function onDragComplete(evt) {\r\n                        if (!onDragSuccessCallback)return;\r\n\r\n                        scope.$apply(function () {\r\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\r\n                        });\r\n                    }\r\n\r\n                    function reset() {\r\n                        if (allowTransform)\r\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\r\n                        else {\r\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\r\n                        }\r\n                    }\r\n\r\n                    function moveElement(x, y) {\r\n                        var eWidth = element.css('width');\r\n                        if (allowTransform) {\r\n                            element.css({\r\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                'z-index': 99999,\r\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                            });\r\n                        } else {\r\n                            element.css({\r\n                                'left': x + 'px',\r\n                                'top': y + 'px',\r\n                                'position': 'fixed',\r\n                                'z-index': 100,\r\n                                width: eWidth\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    function dragToScroll() {\r\n                        var scrollX = 0, scrollY = 0,\r\n                            offset = function (element) {\r\n                                return element.offset() || {left: 0, top: 0};\r\n                            };\r\n\r\n                        if (horizontalScroll) {\r\n                            var\r\n                                containerLeft = offset(scrollContainer).left,\r\n                                containerWidth = scrollContainer.innerWidth(),\r\n                                containerRight = containerLeft + containerWidth;\r\n\r\n                            if ((_mx - containerLeft) < activationDistance) {\r\n                                scrollX = -scrollDistance;\r\n                            }\r\n                            else if ((containerRight - _mx) < activationDistance) {\r\n                                scrollX = scrollDistance;\r\n                            }\r\n                        }\r\n\r\n                        if (verticalScroll) {\r\n                            var\r\n                                containerTop = offset(scrollContainer).top,\r\n                                containerHeight = scrollContainer.innerHeight(),\r\n                                containerBottom = containerTop + containerHeight;\r\n\r\n                            if ((_my - containerTop) < activationDistance) {\r\n                                scrollY = -scrollDistance + 30;\r\n                            }\r\n                            else if ((containerBottom - _my) < activationDistance) {\r\n                                scrollY = scrollDistance - 30;\r\n                            }\r\n                        }\r\n                        if (scrollX !== 0 || scrollY !== 0) {\r\n                            var\r\n                                containerScrollLeft = scrollContainer.scrollLeft(),\r\n                                containerScrollTop = scrollContainer.scrollTop();\r\n\r\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    thisModule.directive('pipDrop', \r\n        function ($parse, $timeout, $window, $document, pipDraggable) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                scope.value = attrs.pipDrop;\r\n                scope.isTouching = false;\r\n\r\n                var _lastDropTouch = null;\r\n                var _myid = scope.$id;\r\n                var _dropEnabled = false;\r\n\r\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\r\n                var onDragStartCallback = $parse(attrs.pipDragStart);\r\n                var onDragStopCallback = $parse(attrs.pipDragStop);\r\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\r\n\r\n                initialize();\r\n\r\n                return;\r\n\r\n                //----------------------\r\n\r\n                function initialize() {\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    scope.$watch(attrs.pipDrop, onEnableChange);\r\n                    scope.$on('$destroy', onDestroy);\r\n                    scope.$on('draggable:start', onDragStart);\r\n                    scope.$on('draggable:move', onDragMove);\r\n                    scope.$on('draggable:end', onDragEnd);\r\n                }\r\n\r\n                function onDestroy(enable) {\r\n                    toggleListeners(false);\r\n                }\r\n\r\n                function onEnableChange(newVal, oldVal) {\r\n                    _dropEnabled = newVal;\r\n                }\r\n\r\n                function onDragStart(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragStart) {\r\n                        $timeout(function () {\r\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragMove(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragMove) {\r\n                        $timeout(function () {\r\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragEnd(evt, obj) {\r\n                    // don't listen to drop events if this is the element being dragged\r\n                    // only update the styles and return\r\n                    if (!_dropEnabled || _myid === obj.uid) {\r\n                        updateDragStyles(false, obj.element);\r\n                        return;\r\n                    }\r\n\r\n                    if (isTouching(obj.x, obj.y, obj.element)) {\r\n                        // call the pipDraggable pipDragSuccess element callback\r\n                        if (obj.callback) {\r\n                            obj.callback(obj);\r\n                        }\r\n\r\n                        if (attrs.pipDropSuccess) {\r\n                            $timeout(function () {\r\n                                onDropCallback(scope, {\r\n                                    $data: obj.data,\r\n                                    $event: obj,\r\n                                    $target: scope.$eval(scope.value)\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (attrs.pipDragStop) {\r\n                        $timeout(function () {\r\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n\r\n                    updateDragStyles(false, obj.element);\r\n                }\r\n\r\n                function isTouching(mouseX, mouseY, dragElement) {\r\n                    var touching = hitTest(mouseX, mouseY);\r\n                    scope.isTouching = touching;\r\n                    if (touching) {\r\n                        _lastDropTouch = element;\r\n                    }\r\n                    updateDragStyles(touching, dragElement);\r\n                    return touching;\r\n                }\r\n\r\n                function updateDragStyles(touching, dragElement) {\r\n                    if (touching) {\r\n                        element.addClass('pip-drag-enter');\r\n                        dragElement.addClass('pip-drag-over');\r\n                    } else if (_lastDropTouch == element) {\r\n                        _lastDropTouch = null;\r\n                        element.removeClass('pip-drag-enter');\r\n                        dragElement.removeClass('pip-drag-over');\r\n                    }\r\n                };\r\n\r\n                function hitTest(x, y) {\r\n                    var bounds = element[0].getBoundingClientRect();\r\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\r\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\r\n                    return x >= bounds.left\r\n                        && x <= bounds.right\r\n                        && y <= bounds.bottom\r\n                        && y >= bounds.top;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    //thisModule.directive('pipDragClone', function ($parse, $timeout, pipDraggable) {\r\n    //    return {\r\n    //        restrict: 'A',\r\n    //        link: function (scope, element, attrs) {\r\n    //            var img, _allowClone = true;\r\n    //            var _dragOffset = null;\r\n    //            scope.clonedData = {};\r\n    //            initialize();\r\n    //            return;\r\n\r\n    //            function initialize() {\r\n//\r\n    //                img = element.find('img');\r\n    //                element.attr('pip-draggable', 'false');\r\n    //                img.attr('draggable', 'false');\r\n    //                reset();\r\n    //                toggleListeners(true);\r\n    //            }\r\n//\r\n//\r\n    //            function toggleListeners(enable) {\r\n    //                // remove listeners\r\n//\r\n    //                if (!enable)return;\r\n    //                // add listeners.\r\n    //                scope.$on('draggable:start', onDragStart);\r\n    //                scope.$on('draggable:move', onDragMove);\r\n    //                scope.$on('draggable:end', onDragEnd);\r\n    //                preventContextMenu();\r\n//\r\n    //            }\r\n\r\n    //            function preventContextMenu() {\r\n    //                //  element.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                img.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                //  element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                img.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //            }\r\n\r\n    //            function onDragStart(evt, obj, elm) {\r\n    //                _allowClone = true;\r\n    //                if (angular.isDefined(obj.data.allowClone)) {\r\n    //                    _allowClone = obj.data.allowClone;\r\n    //                }\r\n    //                if (_allowClone) {\r\n    //                    scope.$apply(function () {\r\n    //                        scope.clonedData = obj.data;\r\n    //                    });\r\n    //                    element.css('width', obj.element[0].offsetWidth);\r\n    //                    element.css('height', obj.element[0].offsetHeight);\r\n//\r\n    //                    moveElement(obj.tx, obj.ty);\r\n    //                }\r\n//\r\n    //            }\r\n\r\n    //            function onDragMove(evt, obj) {\r\n    //                if (_allowClone) {\r\n//\r\n    //                    _tx = obj.tx + obj.dragOffset.left;\r\n    //                    _ty = obj.ty + obj.dragOffset.top;\r\n//\r\n    //                    moveElement(_tx, _ty);\r\n    //                }\r\n    //            }\r\n\r\n    //            function onDragEnd(evt, obj) {\r\n    //                //moveElement(obj.tx,obj.ty);\r\n    //                if (_allowClone) {\r\n    //                    reset();\r\n    //                }\r\n    //            }\r\n//\r\n    //            function reset() {\r\n    //                element.css({left: 0, top: 0, position: 'fixed', 'z-index': -1, visibility: 'hidden'});\r\n    //            }\r\n\r\n    //            function moveElement(x, y) {\r\n    //                element.css({\r\n    //                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n    //                    'z-index': 99999,\r\n    //                    'visibility': 'visible',\r\n    //                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n    //                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n    //                    //,margin: '0'  don't monkey with the margin,\r\n    //                });\r\n    //            }\r\n//\r\n    //            function absorbEvent_(event) {\r\n    //                var e = event;//.originalEvent;\r\n    //                e.preventDefault && e.preventDefault();\r\n    //                e.stopPropagation && e.stopPropagation();\r\n    //                e.cancelBubble = true;\r\n    //                e.returnValue = false;\r\n    //                return false;\r\n    //            }\r\n//\r\n    //        }\r\n    //    };\r\n    //});\r\n\r\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                initialize();\r\n\r\n                return;\r\n                //---------------------\r\n\r\n                function initialize() {\r\n                    element.attr('pip-draggable', 'false');\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n                }\r\n\r\n                function absorbEvent_(event) {\r\n                    var e = event.originalEvent;\r\n                    e.preventDefault && e.preventDefault();\r\n                    e.stopPropagation && e.stopPropagation();\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    thisModule.directive('pipCancelDrag', function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attrs) {\r\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n            }\r\n        };\r\n    });\r\n})();\r\n\r\n","/**\r\n * @file Keyboard navigation over few focusable controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipFocused\", []);\r\n\r\n    thisModule.directive('pipFocused', function ($timeout, $mdConstant, $window) {\r\n        return {\r\n            // restrict: 'EA',\r\n            require: \"?ngModel\",\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var controls, controlsLength,\r\n                    withHidden = $attrs.pipWithHidden,\r\n                    opacityDelta = 0.4,\r\n                    opacityLimit = 0.5,\r\n                    _color,\r\n                    focusedColor = $attrs.pipFocusedColor ? $attrs.pipFocusedColor : null,\r\n                    reInit = $attrs.pipFocusedRebind ? $attrs.pipFocusedRebind : null,\r\n                    focusedTabindex = $attrs.pipFocusedTabindex ? parseInt($attrs.pipFocusedTabindex) || 0 : 0,\r\n                    isOpacity = $attrs.pipFocusedOpacity ? toBoolean($attrs.pipFocusedOpacity) : false;\r\n\r\n                $timeout(init);\r\n                $element.on('keydown', keydownListener);\r\n\r\n                if ($attrs.ngModel) {\r\n                    $scope.$watch($attrs.ngModel, function () {\r\n                        $timeout(init);\r\n                    }, true);\r\n                }\r\n\r\n                if ($attrs.pipFocusedData) {\r\n                    $attrs.$observe('pipFocusedData', function () {\r\n                        $timeout(init);\r\n                    }, true);\r\n                }      \r\n                          \r\n                // Converts value into boolean\r\n                function toBoolean(value) {\r\n                    if (value == null) return false;\r\n                    if (!value) return false;\r\n                    value = value.toString().toLowerCase();\r\n                    return value == '1' || value == 'true';\r\n                };\r\n\r\n                function rgba(color) {\r\n                    if (focusedColor) {\r\n                        return focusedColor;\r\n                    }\r\n\r\n                    var arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\r\n                    if (!arr || arr.length < 3) {\r\n                        return ''\r\n                    }\r\n\r\n                    let red, blue, green, opacity;\r\n\r\n                    opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\r\n                    red = arr[0];\r\n                    blue = arr[1];\r\n                    green = arr[2];\r\n\r\n                    if (opacity < opacityLimit) {\r\n                        opacity += opacityDelta;\r\n                    } else {\r\n                        opacity -= opacityDelta;\r\n                    }\r\n\r\n                    return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\r\n                }\r\n\r\n                function setTabindex(element, value) {\r\n                    element.attr('tabindex', value);\r\n                }\r\n\r\n                function checkTabindex(controls) {\r\n                    let index = _.findIndex(controls, (c) => {\r\n                        return c['tabindex'] > -1;\r\n                    });\r\n\r\n                    if (index == -1 && controls.length > 0) {\r\n                        // let el = controls[0];\r\n                        setTabindex(angular.element(controls[0]), focusedTabindex);\r\n                    }\r\n                }\r\n\r\n                function init() {\r\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\r\n                    controls = $element.find(selector);\r\n                    controlsLength = controls.length;\r\n                    checkTabindex(controls);\r\n                    // add needed event listeners\r\n                    controls.on('focus', function () {\r\n                        if ($(this).hasClass('md-focused')) {\r\n                            return;\r\n                        }\r\n                        if (reInit) {\r\n                            init();\r\n                        }\r\n                        $element.addClass('pip-focused-container');\r\n                        if (isOpacity) {\r\n                            let ell = angular.element($(this)[0]);\r\n\r\n                            _color = $(this).css('backgroundColor');\r\n                            // _color = $window.getComputedStyle($(this)[0], null).backgroundColor;\r\n                            $(this).css('backgroundColor', rgba(_color));\r\n                            $(this).addClass('md-focused');\r\n                        } else {\r\n                            $(this).addClass('md-focused md-focused-opacity');\r\n                        }\r\n                        \r\n                        // setTabindex(angular.element($(this)[0]), 0);\r\n                    }).on('focusout', function () {\r\n                        if (!$(this).hasClass('md-focused')) {\r\n                            return;\r\n                        }                        \r\n                        $element.removeClass('pip-focused-container');\r\n\r\n                        if (isOpacity) {\r\n                            // $(this).css('backgroundColor', _color);\r\n                            $(this).css('backgroundColor', \"\");\r\n                            $(this).removeClass('md-focused md-focused-opacity');\r\n                        } else {\r\n                            $(this).removeClass('md-focused');\r\n                        }\r\n                        // if I go from block all element have tabindex = -1\r\n                        // setTabindex(angular.element($(this)[0]), -1);\r\n                    });\r\n                }\r\n\r\n                function keydownListener(e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n\r\n                        var\r\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\r\n                        // Move focus to next control\r\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\r\n                            controls[moveToControl].focus();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n","/**\r\n * @file Infinite scrolling behavior\r\n * @description\r\n * Modified from https://github.com/sroze/ngInfiniteScroll\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\r\n\r\n    thisModule.directive('pipInfiniteScroll', \r\n        function($rootScope, $window, $interval, $parse) {\r\n            var THROTTLE_MILLISECONDS = 500;\r\n\r\n            return {\r\n                scope: {\r\n                    pipInfiniteScroll: '&',\r\n                    pipScrollContainer: '=',\r\n                    pipScrollDistance: '=',\r\n                    pipScrollDisabled: '=',\r\n                    pipScrollUseDocumentBottom: '=',\r\n                    pipScrollListenForEvent: '@'\r\n                },\r\n                link: function($scope: any, $element, $attrs: any) {\r\n                    var \r\n                        checkWhenEnabled = null,\r\n                        scrollContainer,\r\n                        immediateCheck = true,\r\n                        scrollDistance = null,\r\n                        scrollEnabled = null, \r\n                        unregisterEventListener = null,\r\n                        useDocumentBottom = false, \r\n                        windowElement = angular.element($window);\r\n                    \r\n                    function height(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(element.offsetHeight)) {\r\n                            return element.document.documentElement.clientHeight;\r\n                        } else {\r\n                            return element.offsetHeight;\r\n                        }\r\n                    };\r\n\r\n                    function offsetTop(element) {\r\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                            return;\r\n                        }\r\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\r\n                    };\r\n\r\n                    function pageYOffset(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(window.pageYOffset)) {\r\n                            return element.document.documentElement.scrollTop;\r\n                        } else {\r\n                            return element.ownerDocument.defaultView.pageYOffset;\r\n                        }\r\n                    };\r\n\r\n                    var onContainerScroll = function() {\r\n                        var \r\n                            containerBottom, \r\n                            containerTopOffset, \r\n                            elementBottom, \r\n                            remaining, \r\n                            shouldScroll;\r\n                                                \r\n                        if (scrollContainer === windowElement) {\r\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\r\n                            elementBottom = offsetTop($element) + height($element);\r\n                        } else {\r\n                            containerBottom = height(scrollContainer);\r\n                            containerTopOffset = 0;\r\n                            if (offsetTop(scrollContainer) !== void 0) {\r\n                                containerTopOffset = offsetTop(scrollContainer);\r\n                            }\r\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\r\n                        }\r\n\r\n                        if (useDocumentBottom) {\r\n                            elementBottom = height(($element[0].ownerDocument || (<any>$element[0]).document).documentElement);\r\n                        }\r\n\r\n                        remaining = elementBottom - containerBottom;\r\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\r\n                        \r\n                        if (shouldScroll) {\r\n                            checkWhenEnabled = true;\r\n                            if (scrollEnabled) {\r\n                                if ($scope.$$phase || $rootScope.$$phase) {\r\n                                    return $scope.pipInfiniteScroll();\r\n                                } else {\r\n                                    return $scope.$apply($scope.pipInfiniteScroll);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return checkWhenEnabled = false;\r\n                        }\r\n                    };\r\n\r\n                    if (THROTTLE_MILLISECONDS != null) {\r\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \r\n                    }\r\n\r\n                    $scope.$on('$destroy', function() {\r\n                        scrollContainer.unbind('scroll', onContainerScroll);\r\n                        if (unregisterEventListener != null) {\r\n                            unregisterEventListener();\r\n                            return unregisterEventListener = null;\r\n                        }\r\n                    });\r\n\r\n                    function handleScrollDistance(v) {\r\n                        return scrollDistance = parseFloat(v) || 0;\r\n                    };\r\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\r\n                    handleScrollDistance($scope.pipScrollDistance);\r\n                    \r\n                    function handleScrollDisabled(v) {\r\n                        scrollEnabled = !v;\r\n                        if (scrollEnabled && checkWhenEnabled) {\r\n                            checkWhenEnabled = false;\r\n                            return onContainerScroll();\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\r\n                    handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n                    function handleScrollUseDocumentBottom(v) {\r\n                        return useDocumentBottom = v;\r\n                    };\r\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\r\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n                    function changeContainer(newContainer) {\r\n                        if (scrollContainer != null) {\r\n                            scrollContainer.unbind('scroll', onContainerScroll);\r\n                        }\r\n\r\n                        scrollContainer = newContainer;\r\n                        if (newContainer != null) {\r\n                            return scrollContainer.bind('scroll', onContainerScroll);\r\n                        }\r\n                    };\r\n\r\n                    changeContainer(windowElement);\r\n                    if ($scope.pipScrollListenForEvent) {\r\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\r\n                    }\r\n\r\n                    function handleScrollContainer(newContainer) {\r\n                        if ((newContainer == null) || newContainer.length === 0) {\r\n                            return;\r\n                        }\r\n                        if (newContainer instanceof HTMLElement) {\r\n                            newContainer = angular.element(newContainer);\r\n                        } else if (typeof newContainer.append === 'function') {\r\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n                        } else if (typeof newContainer === 'string') {\r\n                            newContainer = $element.parents().find(newContainer);\r\n                        }\r\n\r\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                            return changeContainer(newContainer);\r\n                        } else {\r\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\r\n                        if (newContainer !== scrollContainer)\r\n                            handleScrollContainer(newContainer);\r\n                    });\r\n                    handleScrollContainer($scope.pipScrollContainer || []);\r\n                    \r\n                    if ($attrs.pipScrollParent != null) {\r\n                        changeContainer(angular.element($element.parent()));\r\n                    }\r\n                    if ($attrs.pipScrolImmediateCheck != null) {\r\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n                    }\r\n                    \r\n                    return $interval((function() {\r\n                        if (immediateCheck) {\r\n                            return onContainerScroll();\r\n                        }\r\n                    }), 0, 1);\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","'use strict';\r\n\r\nexport class ShortcutOption {\r\n    Type: KeyboardEvent;\r\n    Propagate: boolean;\r\n    DisableInInput: boolean;\r\n    Target: any; // event target object\r\n    Keycode: number;\r\n}\r\n\r\nexport class KeyboardEvent {\r\n    static Keydown: string = 'keydown';\r\n    static Keyup: string = 'keyup';\r\n    static Keypress: string = 'keypress';\r\n}\r\n\r\nexport class KeyboardShortcut {\r\n    private shift_nums = {\r\n        \"`\": \"~\",\r\n        \"1\": \"!\",\r\n        \"2\": \"@\",\r\n        \"3\": \"#\",\r\n        \"4\": \"$\",\r\n        \"5\": \"%\",\r\n        \"6\": \"^\",\r\n        \"7\": \"&\",\r\n        \"8\": \"*\",\r\n        \"9\": \"(\",\r\n        \"0\": \")\",\r\n        \"-\": \"_\",\r\n        \"=\": \"+\",\r\n        \";\": \":\",\r\n        \"'\": \"\\\"\",\r\n        \",\": \"<\",\r\n        \".\": \">\",\r\n        \"/\": \"?\",\r\n        \"\\\\\": \"|\"\r\n    };\r\n\r\n    private special_keys = {\r\n        'esc': 27,\r\n        'escape': 27,\r\n        'tab': 9,\r\n        'space': 32,\r\n        'return': 13,\r\n        'enter': 13,\r\n        'backspace': 8,\r\n\r\n        'scrolllock': 145,\r\n        'scroll_lock': 145,\r\n        'scroll': 145,\r\n        'capslock': 20,\r\n        'caps_lock': 20,\r\n        'caps': 20,\r\n        'numlock': 144,\r\n        'num_lock': 144,\r\n        'num': 144,\r\n\r\n        'pause': 19,\r\n        'break': 19,\r\n\r\n        'insert': 45,\r\n        'home': 36,\r\n        'delete': 46,\r\n        'end': 35,\r\n\r\n        'pageup': 33,\r\n        'page_up': 33,\r\n        'pu': 33,\r\n\r\n        'pagedown': 34,\r\n        'page_down': 34,\r\n        'pd': 34,\r\n\r\n        'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,\r\n\r\n        'f1': 112,\r\n        'f2': 113,\r\n        'f3': 114,\r\n        'f4': 115,\r\n        'f5': 116,\r\n        'f6': 117,\r\n        'f7': 118,\r\n        'f8': 119,\r\n        'f9': 120,\r\n        'f10': 121,\r\n        'f11': 122,\r\n        'f12': 123\r\n    };\r\n\r\n    private modifiers = {\r\n        shift: { wanted: false, pressed: false },\r\n        ctrl: { wanted: false, pressed: false },\r\n        alt: { wanted: false, pressed: false },\r\n        meta: { wanted: false, pressed: false }\t//Meta is Mac specific\r\n    };\r\n\r\n    public eventCallback: Function;\r\n    public target: any;\r\n    public event: KeyboardEvent;\r\n    public option: ShortcutOption;\r\n    public shorcut: string;\r\n    public callback: Function;\r\n\r\n    public constructor(\r\n        element: any,\r\n        shorcutCombination: string,\r\n        option: ShortcutOption,\r\n        callback: (e?: JQueryEventObject) => void\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.target = element;\r\n        this.shorcut = shorcutCombination;\r\n        this.event = option.Type;\r\n        this.option = option;\r\n        this.callback = callback;\r\n\r\n        this.eventCallback = (event: JQueryEventObject) => {\r\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\r\n            let code: number;\r\n\r\n            if (this.option.DisableInInput) { //Don't enable shortcut keys in Input, Textarea fields\r\n                let element;\r\n                if (e.target) {\r\n                    element = e.target;\r\n                } else if (e.srcElement) {\r\n                    element = e.srcElement;\r\n                }\r\n\r\n                if (element.nodeType == 3) {\r\n                    element = element.parentNode;\r\n                }\r\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\r\n            }\r\n            //Find Which key is pressed\r\n            if (e.keyCode) {\r\n                code = e.keyCode;\r\n            } else if (e.which) {\r\n                code = e.which;\r\n            }\r\n\r\n            let character = String.fromCharCode(code).toLowerCase();\r\n\r\n            if (code == 188) character = \",\"; //If the user presses , when the type is onkeydown\r\n            if (code == 190) character = \".\"; //If the user presses , when the type is onkeydown\r\n\r\n            let keys: string[] = this.shorcut.split(\"+\");\r\n            //Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\r\n            let kp: number = 0;\r\n\r\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\r\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\r\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\r\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\r\n\r\n            let i: number = 0;\r\n            for (i = 0; i < keys.length; i++) {\r\n                let k: string = keys[i];\r\n                //Modifiers\r\n                if (k == 'ctrl' || k == 'control') {\r\n                    kp++;\r\n                    this.modifiers.ctrl.wanted = true;\r\n                } else if (k == 'shift') {\r\n                    kp++;\r\n                    this.modifiers.shift.wanted = true;\r\n                } else if (k == 'alt') {\r\n                    kp++;\r\n                    this.modifiers.alt.wanted = true;\r\n                } else if (k == 'meta') {\r\n                    kp++;\r\n                    this.modifiers.meta.wanted = true;\r\n                } else if (k.length > 1) { //If it is a special key\r\n                    if (this.special_keys[k] == code) {\r\n                        kp++;\r\n                    }\r\n                } else if (this.option.Keycode) {\r\n                    if (this.option.Keycode == code) kp++;\r\n                } else { //The special keys did not match\r\n                    if (character == k) kp++;\r\n                    else {\r\n                        if (this.shift_nums[character] && e.shiftKey) { //Stupid Shift key bug created by using lowercase\r\n                            character = this.shift_nums[character];\r\n                            if (character == k) {\r\n                                kp++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (kp == keys.length &&\r\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\r\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\r\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\r\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\r\n\r\n                this.callback(e);\r\n\r\n                if (!this.option.Propagate) { //Stop the event\r\n                    //e.cancelBubble is supported by IE - this will kill the bubbling process.\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    //e.stopPropagation works in Firefox.\r\n                    if (e.stopPropagation) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n            this.modifiers.ctrl.pressed = false;\r\n            this.modifiers.shift.pressed = false;\r\n            this.modifiers.alt.pressed = false;\r\n            this.modifiers.meta.pressed = false;\r\n        };\r\n    }\r\n}\r\n","'use strict';\r\n\r\nimport  {\r\n    KeyboardShortcut,\r\n    ShortcutOption,\r\n    KeyboardEvent\r\n} from \"./KeyboardShortcut\";\r\n\r\nexport interface IKeyboardShortcuts {\r\n    [key: string]: KeyboardShortcut\r\n}\r\n\r\nexport interface IShortcutsRegisterService {\r\n    add(shorcutName: string, callback: () => void, options: ShortcutOption): void;\r\n    remove(shorcutName: string): void;\r\n\r\n    shorcuts: IKeyboardShortcuts\r\n}\r\n\r\nexport interface IShortcutsRegisterProvider extends ng.IServiceProvider {\r\n    option: ShortcutOption;\r\n}\r\n\r\nexport class ShortcutsRegister implements IShortcutsRegisterService {\r\n    private _log: ng.ILogService;\r\n    private _defaultOption: ShortcutOption;\r\n    private _shortcuts: IKeyboardShortcuts;\r\n\r\n    public constructor(\r\n        $log: ng.ILogService,\r\n        option: ShortcutOption\r\n    ) {\r\n        \"ngInject\";\r\n        this._log = $log;\r\n        this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\r\n\r\n        this._shortcuts = {};\r\n    }\r\n\r\n    private getDefaultOption(): ShortcutOption {\r\n        let defaultOption: ShortcutOption = {\r\n            Type: KeyboardEvent.Keydown,\r\n            Propagate: false,\r\n            DisableInInput: false,\r\n            Target: document,\r\n            Keycode: null\r\n        };\r\n\r\n        return defaultOption;\r\n    }\r\n\r\n    private checkAddShortcut(element: any, shorcutCombination: string, callback: (e: JQueryEventObject) => void): boolean {\r\n        if (!element) {\r\n            this._log.error('Register shortcut: element undentified!');\r\n\r\n            return false;\r\n        }\r\n\r\n        if (!shorcutCombination) {\r\n            this._log.error('Register shortcut: shorcut combination undentified!');\r\n\r\n            return false;\r\n        }\r\n\r\n        if (!callback) {\r\n            this._log.error('Register shortcut: shorcut callback undentified!');\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get shorcuts(): IKeyboardShortcuts {\r\n        return this._shortcuts;\r\n    }\r\n\r\n    public add(shorcutName: string, callback: (e: JQueryEventObject) => void, option: ShortcutOption): void {\r\n        let shorcutOption: ShortcutOption = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\r\n        let shorcutCombination: string = shorcutName.toLowerCase();\r\n        let element = shorcutOption.Target;\r\n\r\n\r\n        if (typeof shorcutOption.Target == 'string') {\r\n            element = document.getElementById(shorcutOption.Target);\r\n        } else {\r\n            element = shorcutOption.Target;\r\n        }\r\n\r\n        if (!this.checkAddShortcut(element, shorcutCombination, callback)) {\r\n            \r\n            return\r\n        }\r\n\r\n        let newKeyboardShortcut = new KeyboardShortcut(element, shorcutCombination, shorcutOption, callback);\r\n\r\n\t\tthis._shortcuts[shorcutCombination] = newKeyboardShortcut;\r\n\r\n\t\t//Attach the function with the event\r\n\t\tif (element.addEventListener) { \r\n            element.addEventListener(shorcutOption.Type, newKeyboardShortcut.eventCallback, false);\r\n        } else if (element.attachEvent) { \r\n            element.attachEvent('on' + shorcutOption.Type, newKeyboardShortcut.eventCallback);\r\n        } else { \r\n            element.on(shorcutOption.Type, newKeyboardShortcut.eventCallback); \r\n        }\r\n    }\r\n\r\n    public remove(shorcutName: string): void {\r\n\t\tlet shortcutCombination = shorcutName.toLowerCase();\r\n\t\tlet binding: KeyboardShortcut = this._shortcuts[shortcutCombination];\r\n\r\n\t\tdelete(this._shortcuts[shortcutCombination])\r\n\t\tif (!binding) return;\r\n\r\n\t\tlet type = binding.event;\r\n\t\tlet element = binding.target;\r\n\t\tlet callback = binding.eventCallback;\r\n\r\n\t\tif (element.detachEvent) {\r\n            element.detachEvent('on' + type, callback);\r\n        } else if (element.removeEventListener) { \r\n            element.removeEventListener(type, callback, false);\r\n        } else { \r\n            // element['on' + type] = false;\r\n            element.off(type, callback);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nclass ShortcutsRegisterProvider implements IShortcutsRegisterProvider {\r\n    private _service: ShortcutsRegister;\r\n    private _option: ShortcutOption;\r\n\r\n    public get option(): ShortcutOption {\r\n        return this._option;\r\n    }\r\n\r\n    public set option(value: ShortcutOption) {\r\n        this._option = value || new ShortcutOption();\r\n    }\r\n\r\n    public $get(\r\n        $log: ng.ILogService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsRegister($log, this._option);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcutsRegister', ShortcutsRegisterProvider);\r\n","'use strict';\r\n\r\nimport  {\r\n    ShortcutOption,\r\n} from \"./KeyboardShortcut\";\r\n\r\nimport  {\r\n    IShortcutsRegisterService,\r\n} from \"./ShorcutsRegisterService\";\r\n\r\n\r\n    // thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\r\n    //     return {\r\n    //         restrict: 'A',\r\n    //         scope: false,\r\n\r\nclass ShortcutController {\r\n    private _log: ng.ILogService;\r\n\r\n    private actionShortcuts: Function;\r\n    private nameShortcuts: string;\r\n    private options: ShortcutOption;\r\n\r\n    constructor(\r\n        $element: any,\r\n        $attrs: any,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $parse: any,\r\n        pipShortcutsRegister: IShortcutsRegisterService\r\n    ) {\r\n        \"ngInject\";\r\n        this._log = $log;\r\n\r\n        if ($attrs.pipShortcutAction) {\r\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\r\n            let a1 = $attrs.pipShortcutAction;\r\n            this.actionShortcuts($scope, {$event: {}});\r\n        } else {\r\n            this._log.error('Shorcunt action does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\r\n            this.nameShortcuts = $attrs.pipShortcutName;\r\n        } else {\r\n            this._log.error('Shorcunt name does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOption>$attrs.pipShorcutOptions : <ShortcutOption>{};\r\n        this.options.Target = $element;\r\n        // regester keyboard shortcut\r\n        pipShortcutsRegister.add(this.nameShortcuts, (e?: any) => {\r\n            this.actionShortcuts($scope, {$event: {'e': e}});          \r\n        }, this.options);\r\n    }\r\n\r\n    private keypressShortcut(action) {\r\n        this.actionShortcuts();\r\n    }\r\n}\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\n    function shortcutsDirective($parse) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,            \r\n            controller: ShortcutController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .directive('pipShortcut', shortcutsDirective);\r\n})();","'use strict';\r\n\r\n\r\nimport {\r\n    ShortcutsRegister\r\n} from \"./ShorcutsRegisterService\"\r\nimport  {\r\n    KeyboardShortcut,\r\n    ShortcutOption,\r\n    KeyboardEvent\r\n} from \"./KeyboardShortcut\";\r\n\r\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\r\n\r\nexport class SimpleShortcutItem {\r\n    // Shortcut combination\r\n    public shortcut: string;\r\n    // target object \r\n    public target?: any;\r\n    // target element by Id\r\n    public targetId?: string;\r\n    // // target element by class (firstelement??)\r\n    // public targetClass?: string;\r\n    // Access function\r\n    public access?: (event: JQueryEventObject) => boolean;\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public keypress?: (event: JQueryEventObject) => void;\r\n    // default options\r\n    public options?: ShortcutOption;    \r\n}\r\n\r\nexport class ShortcutItem extends SimpleShortcutItem {\r\n    public shortcuts: SimpleShortcutItem[];\r\n}\r\n\r\nexport class ShortcutsConfig {\r\n    // Global shortcut \r\n    public globalShortcuts: ShortcutItem[] = [];\r\n    // Local shortcut \r\n    public localShortcuts: ShortcutItem[] = [];\r\n    // default options\r\n    public defaultOptions: ShortcutOption = null;\r\n}\r\n\r\nexport interface IShortcutsService {\r\n    readonly config: ShortcutsConfig;\r\n\r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n\r\n    on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void;\r\n    onLocal(localShortcuts?: ShortcutItem[]): void;\r\n    off(): void;\r\n}\r\n\r\nexport interface IShortcutsProvider extends ng.IServiceProvider {\r\n    config: ShortcutsConfig;\r\n    \r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n    defaultOptions: ShortcutOption;\r\n}\r\n\r\nclass ShortcutsService implements IShortcutsService {\r\n    private _config: ShortcutsConfig;\r\n    private _oldConfig: ShortcutsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _injector: ng.auto.IInjectorService;    \r\n    private _pipShortcutsRegister: ShortcutsRegister;\r\n\r\n    public constructor(\r\n        config: ShortcutsConfig,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutsRegister: ShortcutsRegister\r\n    ) {\r\n        this._config = config;\r\n        this._oldConfig = _.cloneDeep(this._config);\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._injector = $injector;    \r\n        this._pipShortcutsRegister = pipShortcutsRegister;\r\n\r\n        // add shortcuts\r\n        this.addShortcuts(this._config.globalShortcuts);\r\n        this.addShortcuts(this._config.localShortcuts);        \r\n    }\r\n\r\n    // private declaration \r\n    private sendChangeEvent() {\r\n        // remove shortcuts\r\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\r\n        this.removeShortcuts(this._oldConfig.localShortcuts);\r\n        // add shortcuts\r\n        this.addShortcuts(this._config.globalShortcuts);\r\n        this.addShortcuts(this._config.localShortcuts);\r\n\r\n        this._rootScope.$emit(ShortcutsChangedEvent, this._config);\r\n        // save current config to oldConfig\r\n        this._oldConfig = _.cloneDeep(this._config);\r\n    }\r\n\r\n    private removeShortcuts(collection: ShortcutItem[]): void {\r\n        _.each(collection, (k) => {\r\n            this._pipShortcutsRegister.remove(k.shortcut);\r\n        });\r\n    }\r\n\r\n    private keypressShortcut(shorcut: SimpleShortcutItem, event: JQueryEventObject) {\r\n        if (shorcut.access && _.isFunction(shorcut.access)) {\r\n            if (!shorcut.access(event)) {\r\n                return;\r\n            }\r\n        } \r\n\r\n        if (shorcut.keypress) {\r\n            shorcut.keypress(event);\r\n            return;\r\n        }\r\n\r\n        if (shorcut.href) {\r\n            this._window.location.href = shorcut.href;\r\n            return;\r\n        }\r\n\r\n        if (shorcut.url) {\r\n            this._location.url(shorcut.url);\r\n            return;\r\n        }\r\n\r\n        if (shorcut.state) {\r\n            if (this._injector.has('$state')) {\r\n                var $state = this._injector.get('$state');\r\n                $state['go'](shorcut.state, shorcut.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (shorcut.event) {\r\n            this._rootScope.$broadcast(shorcut.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipShortcutKeypress', shorcut.shortcut);\r\n        }\r\n    }\r\n\r\n    private addShortcuts(collection: ShortcutItem[]): void {\r\n        let generalOptions: ShortcutOption = this._config.defaultOptions ? this._config.defaultOptions : <ShortcutOption>{};\r\n        \r\n        _.each(collection, (k) => {\r\n            let option: ShortcutOption = k.options ? k.options : generalOptions;\r\n            let target: any;\r\n\r\n            target = k.target ? k.target : k.targetId;\r\n            option.Target = target;\r\n            // regester keyboard shortcut\r\n            this._pipShortcutsRegister.add(k.shortcut, (e?: any) => {\r\n                this.keypressShortcut(k, e);        \r\n            }, option);              \r\n        });\r\n    }\r\n\r\n    // public declaration \r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOption {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOption) {\r\n        this._config.defaultOptions = value || null;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void {\r\n        if (globalShortcuts && _.isArray(globalShortcuts)) {\r\n            this._config.globalShortcuts = globalShortcuts;    \r\n        }\r\n        if (localShortcuts && _.isArray(localShortcuts)) {\r\n            this._config.localShortcuts = localShortcuts;    \r\n        }        \r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public onLocal(localShortcuts?: ShortcutItem[]): void {\r\n        if (localShortcuts && _.isArray(localShortcuts)) {\r\n            this._config.localShortcuts = localShortcuts;    \r\n        }        \r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public off(): void {\r\n        this._config.globalShortcuts = [];\r\n        this._config.localShortcuts = [];\r\n        this.sendChangeEvent();\r\n    }\r\n}\r\n\r\nclass ShortcutsProvider implements IShortcutsProvider {\r\n    private _config: ShortcutsConfig = new ShortcutsConfig();\r\n    private _service: ShortcutsService;\r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ShortcutsConfig) {\r\n        this._config = value || new ShortcutsConfig();\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOption {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOption) {\r\n        this._config.defaultOptions = value || null;\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: ng.IRootScopeService, \r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutsRegister: ShortcutsRegister\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutsRegister);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcuts', ShortcutsProvider);\r\n\r\n","'use strict';\r\n\r\nangular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\r\n\r\nimport './ShorcutsRegisterService';\r\nimport './ShortcutsService';\r\nimport './ShortcutDirective';\r\n\r\nexport * from './ShortcutsService';\r\nexport * from './ShorcutsRegisterService';","/**\r\n * @file Keyboard navigation with scrolling over non-focusable controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipSelected\", []);\r\n\r\n    thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var\r\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\r\n                    indexSetter = indexGetter ? indexGetter.assign : null,\r\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\r\n                    idSetter = idGetter ? idGetter.assign : null,\r\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\r\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\r\n                    noScroll = toBoolean($attrs.pipNoScroll),\r\n                    modifier = toBoolean($attrs.pipSkipHidden) ? ':visible' : '',\r\n                    className = toBoolean($attrs.pipTreeList) ? '.pip-selectable-tree' : '.pip-selectable',\r\n                    selectedIndex = indexGetter($scope),\r\n                    currentElementTabinex = $element.attr('tabindex'),\r\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\r\n                    isScrolled = false;\r\n\r\n                // variables for touch    \r\n                var touchStartX, touchStartY, trackingClick, trackingClickStart, targetElement, lastClickTime, cancelNextClick;\r\n                // constant for touch\r\n                var touchBoundary = 10,\r\n                    tapdelay = 200,\r\n                    tapTimeout = 700;\r\n\r\n                // Set tabindex if it's not set yet\r\n                $element.attr('tabindex', currentElementTabinex || 0);\r\n                \r\n                $element.on('click', className, onClickEvent);\r\n                $element.on('touchstart', className, onTouchStart);\r\n                $element.on('touchmove', className, onTouchMove);\r\n                $element.on('touchend', className, onTouchEnd);\r\n                $element.on('touchcancel', className, onTouchCancel);\r\n                $element.on('keydown', onKeyDown);\r\n                $element.on('focusin', onFocusIn);\r\n                $element.on('focusout', onFocusOut);\r\n\r\n                // Watch selected item index\r\n                if (!toBoolean($attrs.pipTreeList)) {\r\n                    $scope.$watch(indexGetter, function (newSelectedIndex) {\r\n                        selectItem({ itemIndex: newSelectedIndex });\r\n                    });\r\n                } else {\r\n                    $scope.$watch(idGetter, function (newSelectedId) {\r\n                        setTimeout(function () {\r\n                            selectItem({ itemId: newSelectedId, raiseEvent: true });\r\n                        }, 0);\r\n                    });\r\n                }\r\n\r\n                // Watch resync selection\r\n                if (pipSelectedWatch) {\r\n                    $scope.$watch(pipSelectedWatch, function () {\r\n                        // Delay update to allow ng-repeat to update DOM\r\n                        setTimeout(function () {\r\n                            selectedIndex = indexGetter($scope);\r\n                            selectItem({ itemIndex: selectedIndex });\r\n                        }, 100);\r\n                    });\r\n                }\r\n\r\n                // Select item defined by index\r\n                selectItem({ itemIndex: selectedIndex, items: $element.find(className) });\r\n\r\n                // Converts value into boolean\r\n                function toBoolean(value) {\r\n                    if (value == null) return false;\r\n                    if (!value) return false;\r\n                    value = value.toString().toLowerCase();\r\n                    return value == '1' || value == 'true';\r\n                };\r\n\r\n                // Functions and listeners\r\n                function selectItem(itemParams) {\r\n                    if (isScrolled) return;\r\n                    var itemIndex = itemParams.itemIndex,\r\n                        itemId = itemParams.itemId,\r\n                        items = itemParams.items || $element.find(className + modifier),\r\n                        itemsLength = items.length,\r\n                        item = (function () {\r\n                            if (itemParams.item) return itemParams.item;\r\n                            if (itemIndex === undefined && itemIndex === -1) {\r\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                            }\r\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                                return items[itemIndex]\r\n                            }\r\n                        } ()),\r\n                        raiseEvent = itemParams.raiseEvent;\r\n\r\n                    if (item) {\r\n                        $element.find(className).removeClass('selected md-focused');\r\n                        item = angular.element(item)\r\n                            .addClass('selected md-focused')\r\n                            .focus(); // todo сдвигает список тут, на первом проходе\r\n                        if (!noScroll) scrollToItem(item);\r\n                        if (raiseEvent) defineSelectedIndex(items);\r\n                    }\r\n                };\r\n\r\n                function defineSelectedIndex(items) {\r\n                    var oldSelectedIndex = selectedIndex;\r\n                    selectedIndex = -1;\r\n                    for (var index = 0; index < items.length; index++) {\r\n                        if ($(items[index]).hasClass('selected')) {\r\n                            selectedIndex = index;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // Execute callback to notify about item select\r\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\r\n                        $scope.$apply(updateIndex);\r\n                    } else {\r\n                        $scope.$apply(onSelect);\r\n                    }\r\n\r\n                    function updateIndex() {\r\n                        var selectedItem = angular.element(items[selectedIndex]),\r\n                            selectedId = selectedItem.attr('pip-id');\r\n\r\n                        if (indexSetter) indexSetter($scope, selectedIndex);\r\n                        if (idSetter) idSetter($scope, selectedId);\r\n                        onSelect();\r\n                    };\r\n\r\n                    function onSelect() {\r\n                        var selectedItem = angular.element(items[selectedIndex]),\r\n                            selectedId = selectedItem.attr('pip-id');\r\n\r\n                        if (changeGetter) {\r\n                            changeGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    item: selectedItem,\r\n                                    index: selectedIndex,\r\n                                    id: selectedId,\r\n                                    newIndex: selectedIndex,\r\n                                    oldIndex: oldSelectedIndex\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n\r\n                function scrollToItem($item) {\r\n                    if (noScroll) return;\r\n\r\n                    var\r\n                        containerTop = $element.offset().top,\r\n                        containerHeight = $element.height(),\r\n                        containerBottom = containerTop + containerHeight,\r\n                        itemTop = $item.offset().top,\r\n                        itemHeight = $item.outerHeight(true),\r\n                        itemBottom = itemTop + itemHeight,\r\n                        containerScrollTop = $element.scrollTop();\r\n\r\n                    isScrolled = true;\r\n                    setTimeout(function () {\r\n                        isScrolled = false;\r\n                    }, 100);\r\n\r\n                    if (containerTop > itemTop) {\r\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n                    }\r\n                    else if (containerBottom < itemBottom) {\r\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n                    }\r\n\r\n                };\r\n\r\n                function getTargetElementFromEventTarget(eventTarget) {\r\n                    // On some older browsers the event target may be a text node.\r\n                    if (eventTarget.nodeType === Node.TEXT_NODE) {\r\n                        return eventTarget.parentNode;\r\n                    }\r\n\r\n                    return eventTarget;\r\n                };\r\n\r\n                function touchHasMoved(event) {\r\n                    var touch = event.changedTouches[0], boundary = touchBoundary; //Touchmove boundary, beyond which a click will be cancelled.\r\n\r\n                    if (Math.abs(touch.pageX - touchStartX) > boundary || Math.abs(touch.pageY - touchStartY) > boundary) {\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                };\r\n\r\n                function onClickEvent(event) {\r\n                    selectItem({ item: event.currentTarget, raiseEvent: true });\r\n                }\r\n\r\n                function onTouchStart(ev) {\r\n                    //ev.preventDefault();\r\n\r\n                    let event = ev.originalEvent;\r\n                    if (event['targetTouches'].length > 1) {\r\n                        return true;\r\n                    }\r\n                    let targetElement = getTargetElementFromEventTarget(event.target);\r\n                    let touch = event['targetTouches'][0];\r\n\r\n                    trackingClick = true;\r\n                    trackingClickStart = event.timeStamp;\r\n                    targetElement = targetElement;\r\n\r\n                    touchStartX = touch.pageX;\r\n                    touchStartY = touch.pageY;\r\n\r\n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\r\n                      //  event.preventDefault();\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n                function onTouchMove(ev) {\r\n                    if (!trackingClick) {\r\n                        return true;\r\n                    }\r\n                    let event = ev.originalEvent;\r\n                    // If the touch has moved, cancel the click tracking\r\n                    if (targetElement !== getTargetElementFromEventTarget(event.target) || touchHasMoved(event)) {\r\n                        trackingClick = false;\r\n                        targetElement = null;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n                function onTouchEnd(ev) {\r\n                    var forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = targetElement;\r\n\r\n                    if (!trackingClick) {\r\n                        return true;\r\n                    }\r\n                    event = ev.originalEvent;\r\n                    // Prevent phantom clicks on fast double-tap \r\n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\r\n                        cancelNextClick = true;\r\n                        return true;\r\n                    }\r\n\r\n                    if ((event.timeStamp - trackingClickStart) > tapTimeout) {\r\n                        return true;\r\n                    }\r\n\r\n                    // Reset to prevent wrong click cancel on input \r\n                    cancelNextClick = false;\r\n\r\n                    lastClickTime = event.timeStamp;\r\n\r\n                    newTrackingClickStart = trackingClickStart;\r\n                    trackingClick = false;\r\n                    trackingClickStart = 0;\r\n\r\n                    selectItem({ item: ev.currentTarget, raiseEvent: true });\r\n\r\n                    return false;\r\n                }\r\n\r\n                function onTouchCancel(ev) {\r\n                    trackingClick = false;\r\n                    targetElement = null;\r\n                }\r\n\r\n                function onKeyDown(e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        if (enterSpaceGetter) {\r\n                            enterSpaceGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    index: selectedIndex,\r\n                                    item: $element.find('.selected')\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    } else\r\n                        if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                            keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n\r\n                            // Get next selectable control index\r\n                            var items = $element.find(className + modifier),\r\n                                inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                                newSelectedIndex = selectedIndex + inc;\r\n\r\n                            // Set next control as selected\r\n                            selectItem({ itemIndex: newSelectedIndex, items: items, raiseEvent: true });\r\n                        }\r\n                }\r\n\r\n                function onFocusIn(event) {\r\n                    // Choose selected element\r\n                    var items,\r\n                        selectedItem = $element.find(className + '.selected');\r\n\r\n                    selectedItem.addClass('md-focused');\r\n\r\n                    // If there are not selected elements then pick the first one\r\n                    if (selectedItem.length === 0) {\r\n                        selectedIndex = indexGetter($scope);\r\n                        items = $element.find(className + modifier);\r\n                        selectItem({ itemIndex: selectedIndex || 0, items: items, raiseEvent: true });\r\n                    }\r\n                }\r\n\r\n                function onFocusOut(event) {\r\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function(){\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipUnsavedChanges\", []);\r\n\r\n    thisModule.directive(\"pipUnsavedChanges\", function ($window, $rootScope) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave',\r\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\r\n            },\r\n            link: function($scope: any) {\r\n\r\n                $window.onbeforeunload = function() {\r\n                    if ($scope.unsavedChangesAvailable()) {\r\n                        $rootScope.$routing = false;\r\n                        return $scope.unsavedChangesMessage;\r\n                    }\r\n                };\r\n\r\n                var unbindFunc = $scope.$on('$stateChangeStart', function(event) {\r\n                    if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                        $rootScope.$routing = false;\r\n                         _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\r\n                        event.preventDefault();\r\n                    } else {\r\n                        _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                    }\r\n                });\r\n\r\n                $scope.$on('$destroy', function() {\r\n                    $window.onbeforeunload = null;\r\n                    unbindFunc();\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n"]}