{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/draggable/CancelDrag.ts","src/draggable/Drag.ts","src/draggable/DraggableService.ts","src/draggable/Drop.ts","src/draggable/PreventDrag.ts","src/draggable/index.ts","src/focused/focused.ts","src/index.ts","src/infinite_scroll/infiniteScroll.ts","src/selected/selected.ts","src/shortcuts/IShortcutsService.ts","src/shortcuts/Shortcut.ts","src/shortcuts/ShortcutBindingService.ts","src/shortcuts/ShortcutDirective.ts","src/shortcuts/ShortcutsService.ts","src/shortcuts/index.ts","src/unsaved_changes/unsavedChanges.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","CancelDragLink_1","$element","find","attr","CancelDrag","restrict","link","$scope","$attrs","angular","directive","DragLink_1","$rootScope","$parse","$document","$window","pipDraggable","LONG_PRESS","_centerAnchor","_hasTouch","DocumentTouch","_pressEvents","_moveEvents","_releaseEvents","_data","_dragOffset","_dragEnabled","_pressTimer","_elementStyle","scrollParent","scrollContainer","element","_deregisterRootMoveListener","noop","value","ngDrag","_myid","$id","onDragStartCallback","pipDragStart","onDragStopCallback","pipDragStop","onDragSuccessCallback","pipDragSuccess","allowTransform","isDefined","$eval","getDragData","pipDragData","verticalScroll","pipVerticalScroll","horizontalScroll","pipHorizontalScroll","activationDistance","parseFloat","pipActivationDistance","scrollDistance","scrollContainerGetter","pipScrollContainer","css","initialize","prototype","dragHandles","querySelectorAll","_dragHandle","toggleListeners","parent","enable","_this","$on","onDestroy","$watch","pipDrag","newVal","oldVal","onEnableChange","pipCenterAnchor","onCenterAnchor","on","event","onpress","nodeName","toLowerCase","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","setTimeout","onlongpress","left","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","inputEvent","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","origEvent","hasClass","addClass","$broadcast","x","y","tx","ty","data","$apply","$data","$event","dragToScroll","moveElement","uid","dragOffset","callback","onDragComplete","removeClass","reset","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","Drag","$inject","Object","defineProperty","DraggableService","touches","originalEvent","DropLink_1","$timeout","pipDrop","isTouching","onDropCallback","pipDropSuccess","onDragMoveCallback","pipDragMove","obj","onDragStart","onDragMove","onDragEnd","_dropEnabled","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","Drop","5","PreventDragLink_1","absorbEvent_","stopPropagation","cancelBubble","returnValue","./Drag","./DraggableService","./Drop","./PreventDrag","7","FocusedLink_1","$mdConstant","opacityDelta","opacityLimit","keydownListener","init","ngModel","pipFocusedData","selector","pipWithHidden","onFocusClass","pipFocusedClass","controls","controlsLength","checkTabindex","currentTarget","$","pipRebind","pipFocusedOpacity","color","oldBackgroundColor","rgba","pipFocusedColor","arr","split","red","blue","green","opacity","setTabindex","index","_","findIndex","c","pipFocusedTabindex","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","filter","focus","pipFocusedRebind","p","m","hasOwnProperty","__export","./focused/focused","./infinite_scroll/infiniteScroll","./selected/selected","./shortcuts/index","./unsaved_changes/unsavedChanges","9","InfiniteScrollLink_1","$interval","THROTTLE_MILLISECONDS","checkWhenEnabled","immediateCheck","scrollEnabled","unregisterEventListener","useDocumentBottom","windowElement","onContainerScrollThrottle","throttle","onContainerScroll","unbind","v","handleScrollDistance","pipScrollDistance","handleScrollDisabled","pipScrollDisabled","handleScrollUseDocumentBottom","pipScrollUseDocumentBottom","pipScrollListenForEvent","newContainer","handleScrollContainer","pipScrollParent","changeContainer","pipScrolImmediateCheck","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","pipInfiniteScroll","bind","HTMLElement","append","parents","Array","isArray","InfiniteScroll","SelectedLink_1","touchBoundary","tapdelay","tapTimeout","indexGetter","pipSelected","indexSetter","assign","idGetter","pipSelectedId","idSetter","changeGetter","pipSelect","enterSpaceGetter","pipEnterSpacePress","noScroll","pipNoScroll","modifier","pipSkipHidden","className","pipTreeList","selectedIndex","currentElementTabinex","pipSelectedWatch","isScrolled","onClickEvent","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onKeyDown","onFocusIn","onFocusOut","newSelectedId","selectItem","itemId","raiseEvent","newSelectedIndex","itemIndex","items","itemParams","itemsLength","item","undefined","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedId","onSelect","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","getTargetElementFromEventTarget","eventTarget","nodeType","Node","TEXT_NODE","parentNode","touchHasMoved","touch","changedTouches","boundary","Math","abs","touchStartX","touchStartY","ev","targetElement","trackingClick","trackingClickStart","timeStamp","newTrackingClickStart","lastClickTime","cancelNextClick","ENTER","SPACE","inc","scope","11","ShortcutItem","ShortcutsConfig","globalShortcuts","localShortcuts","12","KeyboardEvent","Keydown","Keyup","Keypress","ShortcutOptions","Shortcut","shorcutCombination","option","shift_nums","`","2","3","4","6","8","0","-","=",";","'",",",".","/","\\","special_keys","esc","escape","tab","space","return","enter","backspace","scrolllock","scroll_lock","scroll","capslock","caps_lock","caps","numlock","num_lock","num","pause","break","insert","home","delete","end","pageup","page_up","pu","pagedown","page_down","pd","up","down","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","modifiers","shift","wanted","pressed","ctrl","alt","meta","shorcut","Type","DisableInInput","element_1","srcElement","tagName","character","String","fromCharCode","keys","kp","ctrlKey","shiftKey","altKey","metaKey","k","Keycode","Propagate","ShortcutBindingService_1","$log","_shortcuts","_log","_defaultOption","defaults","getDefaultOption","defaultOption","Shortcut_1","Target","get","enumerable","configurable","add","shortcut","remove","shortcutOption","shortcutCombination","getElementById","error","newKeyboardShortcut","addEventListener","eventCallback","attachEvent","binding","detachEvent","removeEventListener","ShortcutBindingProvider","_option","set","$get","_service","provider","14","ShortcutController","pipShortcutBinding","pipShortcutAction","actionShortcuts","pipShortcutName","isString","nameShortcuts","options","pipShorcutOptions","keypressShortcut","action","shortcutsDirective","ShortcutsChangedEvent","ShortcutsService","config","$location","$injector","_config","_oldConfig","cloneDeep","addShortcuts","sendChangeEvent","removeShortcuts","$emit","collection","access","isFunction","keypress","href","location","url","state","has","$state","stateParams","generalOptions","defaultOptions","each","targetId","ShortcutsProvider","IShortcutsService_1","./IShortcutsService","16","./ShortcutBindingService","./ShortcutDirective","./ShortcutsService","17","onbeforeunload","unsavedChangesAvailable","unsavedChangesMessage","unbindFunc","confirm","cancelLeave","afterLeave"],"mappings":"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","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n    class CancelDragLink {\n        constructor(\n            $element: JQuery\n        ) {\n            $element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\n        }\n    }\n\n    const CancelDrag = function (): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: ng.IScope,\n                $element: JQuery,\n                $attrs: ng.IAttributes\n            ) {\n                new CancelDragLink($element);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipCancelDrag', CancelDrag);\n}","import { IDraggableService } from './DraggableService';\n\n{\n    interface IDragLinkScope extends ng.IScope {\n        value: any;\n    }\n\n    interface IDragLinkAttributes extends ng.IAttributes {\n        ngDrag: any;\n        pipDragStart: any;\n        pipDragStop: any;\n        pipDragSuccess: any;\n        allowTransform: any;\n        pipDragData: any;\n        pipVerticalScroll: any;\n        pipHorizontalScroll: any;\n        pipActivationDistance: any;\n        pipScrollContainer: any;\n        pipDrag: any;\n        pipCenterAnchor: any;\n    }\n\n    class DragLink {\n        private LONG_PRESS: number = 50; // 50ms for longpress\n        private offset: any;\n        private _centerAnchor: boolean = false;\n        private _mx: number;\n        private _my: number;\n        private _tx: number;\n        private _ty: number;\n        private _mrx: number;\n        private _mry: number;\n        private _hasTouch: boolean = ('ontouchstart' in window) || ( < any > window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\n        private _pressEvents: string = 'touchstart mousedown';\n        private _moveEvents: string = 'touchmove mousemove';\n        private _releaseEvents: string = 'touchend mouseup';\n        private _dragHandle: any;\n\n        // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\n        private _myid: string | number;\n        private _data: any = null;\n\n        private _dragOffset: any = null;\n\n        private _dragEnabled: boolean = false;\n\n        private _pressTimer: any = null;\n\n        private _elementStyle: any = {};\n\n        private onDragStartCallback: Function;\n        private onDragStopCallback: Function;\n        private onDragSuccessCallback: Function;\n        private allowTransform: boolean;\n\n        private getDragData: any;\n        private verticalScroll: boolean;\n        private horizontalScroll: boolean;\n        private activationDistance: number;\n        private scrollDistance: number;\n        private scrollParent: boolean = false;\n\n        private scrollContainer: JQuery = angular.element(window);\n        private scrollContainerGetter: any;\n\n        // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\n        private _deregisterRootMoveListener: Function = angular.noop;\n\n        constructor(\n            private $rootScope: ng.IRootScopeService,\n            private $parse: ng.IParseService,\n            private $document: ng.IDocumentService,\n            private $window: ng.IWindowService,\n            private pipDraggable: IDraggableService,\n            private $scope: IDragLinkScope,\n            private $element: JQuery,\n            private $attrs: IDragLinkAttributes\n        ) {\n            $scope.value = $attrs.ngDrag;\n            this._myid = $scope.$id;\n            this.onDragStartCallback = $parse($attrs.pipDragStart) || null;\n            this.onDragStopCallback = $parse($attrs.pipDragStop) || null;\n            this.onDragSuccessCallback = $parse($attrs.pipDragSuccess) || null;\n            this.allowTransform = angular.isDefined($attrs.allowTransform) ? $scope.$eval($attrs.allowTransform) : false;\n\n            this.getDragData = $parse($attrs.pipDragData);\n            this.verticalScroll = $attrs.pipVerticalScroll || true;\n            this.horizontalScroll = $attrs.pipHorizontalScroll || true;\n            this.activationDistance = parseFloat($attrs.pipActivationDistance) || 75;\n            this.scrollDistance = parseFloat($attrs.pipActivationDistance) || 50;\n            this.scrollContainerGetter = $parse($attrs.pipScrollContainer);\n\n            this.$element.css('cursor', 'move');\n            this.initialize();\n        }\n\n        private initialize() {\n            this.$element.attr('pip-draggable', 'false'); // prevent native drag\n            // check to see if drag handle(s) was specified\n            // if querySelectorAll is available, we use this instead of find\n            // as JQLite find is limited to tagnames\n            let dragHandles: any;\n            if (this.$element[0].querySelectorAll) {\n                dragHandles = angular.element(this.$element[0].querySelectorAll('[pip-drag-handle]'));\n            } else {\n                dragHandles = this.$element.find('[pip-drag-handle]');\n            }\n            if (dragHandles.length) {\n                this._dragHandle = dragHandles;\n            }\n            this.toggleListeners(true);\n\n            // Initialize scroll container\n            if (this.scrollParent) {\n                this.scrollContainer = angular.element(this.$element.parent());\n            } else if (this.$attrs.pipScrollContainer) {\n                this.scrollContainer = angular.element(this.scrollContainerGetter(this.$scope));\n            } else {\n                this.scrollContainer = angular.element(window);\n            }\n        }\n\n        private toggleListeners(enable) {\n            if (!enable) return;\n            // add listeners.\n\n            this.$scope.$on('$destroy', () => {\n                this.onDestroy(enable);\n            });\n            this.$scope.$watch(this.$attrs.pipDrag, (newVal, oldVal) => {\n                this.onEnableChange(newVal, oldVal);\n            });\n            this.$scope.$watch(this.$attrs.pipCenterAnchor, (newVal, oldVal) => {\n                this.onCenterAnchor(newVal, oldVal);\n            });\n            // wire up touch events\n            if (this._dragHandle) {\n                // handle(s) specified, use those to initiate drag\n                this._dragHandle.on(this._pressEvents, (event) => {\n                    this.onpress(event);\n                });\n            } else {\n                // no handle(s) specified, use the element as the handle\n                this.$element.on(this._pressEvents, (event) => {\n                    this.onpress(event);\n                });\n            }\n            if (!this._hasTouch && this.$element[0].nodeName.toLowerCase() == \"img\") {\n                this.$element.on('mousedown', () => {\n                    return false;\n                }); // prevent native drag for images\n            }\n        }\n\n        private onDestroy(enable) {\n            this.toggleListeners(false);\n        }\n\n        private onEnableChange(newVal, oldVal) {\n            this._dragEnabled = (newVal);\n        }\n\n        private onCenterAnchor(newVal, oldVal) {\n            if (angular.isDefined(newVal))\n                this._centerAnchor = (newVal || 'true');\n        }\n\n        private isClickableElement(evt) {\n            return (\n                angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\n            );\n        }\n\n        /*\n         * When the element is clicked start the drag behaviour\n         * On touch devices as a small delay so as not to prevent native window scrolling\n         */\n        private onpress(evt) {\n            if (!this._dragEnabled) return;\n\n            if (this.isClickableElement(evt)) {\n                return;\n            }\n\n            if (evt.type == \"mousedown\" && evt.button != 0) {\n                // Do not start dragging on right-click\n                return;\n            }\n\n            this.saveElementStyles();\n\n            if (this._hasTouch) {\n                this.cancelPress();\n                this._pressTimer = setTimeout(() => {\n                    this.cancelPress();\n                    this.onlongpress(evt);\n                }, this.LONG_PRESS);\n                this.$document.on(this._moveEvents, () => {\n                    this.cancelPress();\n                });\n                this.$document.on(this._releaseEvents, () => {\n                    this.cancelPress();\n                });\n            } else {\n                this.onlongpress(evt);\n            }\n        }\n\n        private saveElementStyles() {\n            this._elementStyle.left = this.$element.css('css') || 0;\n            this._elementStyle.top = this.$element.css('top') || 0;\n            this._elementStyle.position = this.$element.css('position');\n            this._elementStyle.width = this.$element.css('width');\n        }\n\n        private cancelPress() {\n            clearTimeout(this._pressTimer);\n            this.$document.off(this._moveEvents, () => {\n                this.cancelPress();\n            });\n            this.$document.off(this._releaseEvents, () => {\n                this.cancelPress();\n            });\n        }\n\n        private onlongpress(evt) {\n            if (!this._dragEnabled) return;\n            evt.preventDefault();\n\n            this.offset = this.$element[0].getBoundingClientRect();\n            if (this.allowTransform)\n                this._dragOffset = this.offset;\n            else {\n                this._dragOffset = {\n                    left: document.body.scrollLeft,\n                    top: document.body.scrollTop\n                };\n            }\n\n\n            ( < any > this.$element).centerX = this.$element[0].offsetWidth / 2;\n            ( < any > this.$element).centerY = this.$element[0].offsetHeight / 2;\n\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\n            this._mrx = this._mx - this.offset.left;\n            this._mry = this._my - this.offset.top;\n            if (this._centerAnchor) {\n                this._tx = this._mx - ( < any > this.$element).centerX - this.$window.pageXOffset;\n                this._ty = this._my - ( < any > this.$element).centerY - this.$window.pageYOffset;\n            } else {\n                this._tx = this._mx - this._mrx - this.$window.pageXOffset;\n                this._ty = this._my - this._mry - this.$window.pageYOffset;\n            }\n\n            this.$document.on(this._moveEvents, (event) => {\n                this.onmove(event);\n            });\n            this.$document.on(this._releaseEvents, (event) => {\n                this.onrelease(event);\n            });\n            // This event is used to receive manually triggered mouse move events\n            // jqLite unfortunately only supports triggerHandler(...)\n            // See http://api.jquery.com/triggerHandler/\n            // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\n            this._deregisterRootMoveListener = this.$rootScope.$on('draggable:_triggerHandlerMove', (event, origEvent) => {\n                this.onmove(origEvent);\n            });\n        }\n\n        private onmove(evt) {\n            if (!this._dragEnabled) return;\n            evt.preventDefault();\n            if (!this.$element.hasClass('pip-dragging')) {\n                this._data = this.getDragData(this.$scope);\n                this.$element.addClass('pip-dragging');\n                this.$rootScope.$broadcast('draggable:start', {\n                    x: this._mx,\n                    y: this._my,\n                    tx: this._tx,\n                    ty: this._ty,\n                    event: evt,\n                    element: this.$element,\n                    data: this._data\n                });\n\n                if (this.onDragStartCallback) {\n                    this.$scope.$apply(() => {\n                        this.onDragStartCallback(this.$scope, {\n                            $data: this._data,\n                            $event: evt\n                        });\n                    });\n                }\n            }\n\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\n\n            if (this.horizontalScroll || this.verticalScroll) {\n                this.dragToScroll();\n            }\n\n            if (this._centerAnchor) {\n                this._tx = this._mx - ( < any > this.$element).centerX - this._dragOffset.left;\n                this._ty = this._my - ( < any > this.$element).centerY - this._dragOffset.top;\n            } else {\n                this._tx = this._mx - this._mrx - this._dragOffset.left;\n                this._ty = this._my - this._mry - this._dragOffset.top;\n            }\n\n            this.moveElement(this._tx, this._ty);\n\n            this.$rootScope.$broadcast('draggable:move', {\n                x: this._mx,\n                y: this._my,\n                tx: this._tx,\n                ty: this._ty,\n                event: evt,\n                element: this.$element,\n                data: this._data,\n                uid: this._myid,\n                dragOffset: this._dragOffset\n            });\n        }\n\n        private onrelease(evt) {\n            if (!this._dragEnabled)\n                return;\n            evt.preventDefault();\n            this.$rootScope.$broadcast('draggable:end', {\n                x: this._mx,\n                y: this._my,\n                tx: this._tx,\n                ty: this._ty,\n                event: evt,\n                element: this.$element,\n                data: this._data,\n                callback: this.onDragComplete,\n                uid: this._myid\n            });\n            this.$element.removeClass('pip-dragging');\n            this.$element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\n            this.reset();\n            this.$document.off(this._moveEvents);\n            this.$document.off(this._releaseEvents);\n            if (this.onDragStopCallback) {\n                this.$scope.$apply(() => {\n                    this.onDragStopCallback(this.$scope, {\n                        $data: this._data,\n                        $event: evt\n                    });\n                });\n            }\n\n            this._deregisterRootMoveListener();\n        }\n\n        private onDragComplete(evt) {\n            if (!this.onDragSuccessCallback) return;\n\n            this.$scope.$apply(() => {\n                this.onDragSuccessCallback(this.$scope, {\n                    $data: this._data,\n                    $event: evt\n                });\n            });\n        }\n\n        private reset() {\n            if (this.allowTransform)\n                this.$element.css({\n                    transform: '',\n                    'z-index': '',\n                    '-webkit-transform': '',\n                    '-ms-transform': ''\n                });\n            else {\n                this.$element.css({\n                    position: this._elementStyle.position,\n                    top: this._elementStyle.top,\n                    left: this._elementStyle.left,\n                    'z-index': '',\n                    width: this._elementStyle.width\n                });\n            }\n        }\n\n        private moveElement(x, y) {\n            const eWidth = this.$element.css('width');\n            if (this.allowTransform) {\n                this.$element.css({\n                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                    'z-index': 99999,\n                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n                });\n            } else {\n                this.$element.css({\n                    'left': x + 'px',\n                    'top': y + 'px',\n                    'position': 'fixed',\n                    'z-index': 100,\n                    width: eWidth\n                });\n            }\n        }\n\n        private dragToScroll() {\n            let scrollX = 0,\n                scrollY = 0,\n                offset = (element) => {\n                    return element.offset() || {\n                        left: 0,\n                        top: 0\n                    };\n                };\n\n            if (this.horizontalScroll) {\n                const\n                    containerLeft = offset(this.scrollContainer).left,\n                    containerWidth = this.scrollContainer.innerWidth(),\n                    containerRight = containerLeft + containerWidth;\n\n                if ((this._mx - containerLeft) < this.activationDistance) {\n                    scrollX = -this.scrollDistance;\n                } else if ((containerRight - this._mx) < this.activationDistance) {\n                    scrollX = this.scrollDistance;\n                }\n            }\n\n            if (this.verticalScroll) {\n                const\n                    containerTop = offset(this.scrollContainer).top,\n                    containerHeight = this.scrollContainer.innerHeight(),\n                    containerBottom = containerTop + containerHeight;\n\n                if ((this._my - containerTop) < this.activationDistance) {\n                    scrollY = -this.scrollDistance + 30;\n                } else if ((containerBottom - this._my) < this.activationDistance) {\n                    scrollY = this.scrollDistance - 30;\n                }\n            }\n            if (scrollX !== 0 || scrollY !== 0) {\n                const\n                    containerScrollLeft = this.scrollContainer.scrollLeft(),\n                    containerScrollTop = this.scrollContainer.scrollTop();\n\n                this.scrollContainer.scrollLeft(containerScrollLeft + scrollX);\n                this.scrollContainer.scrollTop(containerScrollTop + scrollY);\n            }\n\n        }\n\n    }\n\n    const Drag = function (\n        $rootScope: ng.IRootScopeService,\n        $parse: ng.IParseService,\n        $document: ng.IDocumentService,\n        $window: ng.IWindowService,\n        pipDraggable: IDraggableService,\n    ): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: IDragLinkScope,\n                $element: JQuery,\n                $attrs: IDragLinkAttributes\n            ) {\n                new DragLink($rootScope, $parse, $document, $window, pipDraggable, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipDrag', Drag);\n}","export interface IDraggableService {\n    inputEvent(event: any);\n}\n\nclass DraggableService implements IDraggableService {\n    public inputEvent(event) {\n        if (angular.isDefined(event.touches)) {\n            return event.touches[0];\n        }\n        //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\n        else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\n            return event.originalEvent.touches[0];\n        }\n        return event;\n    };\n}\n\nangular\n    .module(\"pipDraggable\")\n    .service('pipDraggable', DraggableService);\n    ","import { IDraggableService } from './DraggableService';\n\n{\n    interface IDropLinkScope extends ng.IScope {\n        value: any;\n        isTouching: any;\n    }\n\n    interface IDropLinkAttributes extends ng.IAttributes {\n        pipDrop: any;\n        pipDropSuccess: any;\n        pipDragStart: any;\n        pipDragStop: any;\n        pipDragMove: any;\n    }\n\n    class DropLink {\n\n        private _lastDropTouch: any;\n        private _myid: number | string;\n        private _dropEnabled: boolean;\n\n        private onDropCallback: Function; // || function(){};\n        private onDragStartCallback: Function;\n        private onDragStopCallback: Function;\n        private onDragMoveCallback: Function;\n\n        constructor(\n            private $parse: ng.IParseService,\n            private $document: ng.IDocumentService,\n            private $timeout: ng.ITimeoutService,\n            private pipDraggable: IDraggableService,\n            private $scope: IDropLinkScope,\n            private $element: JQuery,\n            private $attrs: IDropLinkAttributes\n        ) {\n            $scope.value = $attrs.pipDrop;\n            $scope.isTouching = false;\n\n            this._myid = $scope.$id;\n            this.onDropCallback = $parse($attrs.pipDropSuccess); // || function(){};\n            this.onDragStartCallback = $parse($attrs.pipDragStart);\n            this.onDragStopCallback = $parse($attrs.pipDragStop);\n            this.onDragMoveCallback = $parse($attrs.pipDragMove);\n\n            this.initialize();\n        }\n\n        private initialize() {\n            this.toggleListeners(true);\n        }\n\n        private toggleListeners(enable) {\n            // remove listeners\n            if (!enable) return;\n            // add listeners.\n            this.$scope.$watch(this.$attrs.pipDrop, (newVal, oldVal) => {\n                this.onEnableChange(newVal, oldVal);\n            });\n            this.$scope.$on('$destroy', (event) => {\n                this.onDestroy(event);\n            });\n            this.$scope.$on('draggable:start', (evt, obj) => {\n                this.onDragStart(evt, obj);\n            });\n            this.$scope.$on('draggable:move', (evt, obj) => {\n                this.onDragMove(evt, obj);\n            });\n            this.$scope.$on('draggable:end', (evt, obj) => {\n                this.onDragEnd(evt, obj);\n            });\n        }\n\n        private onDestroy(enable) {\n            this.toggleListeners(false);\n        }\n\n        private onEnableChange(newVal, oldVal) {\n            this._dropEnabled = newVal;\n        }\n\n        private onDragStart(evt, obj) {\n            if (!this._dropEnabled) return;\n            this.isTouching(obj.x, obj.y, obj.element);\n\n            if (this.$attrs.pipDragStart) {\n                this.$timeout(() => {\n                    this.onDragStartCallback(this.$scope, {\n                        $data: obj.data,\n                        $event: obj\n                    });\n                });\n            }\n        }\n\n        private onDragMove(evt, obj) {\n            if (!this._dropEnabled) return;\n            this.isTouching(obj.x, obj.y, obj.element);\n\n            if (this.$attrs.pipDragMove) {\n                this.$timeout(() => {\n                    this.onDragMoveCallback(this.$scope, {\n                        $data: obj.data,\n                        $event: obj\n                    });\n                });\n            }\n        }\n\n        private onDragEnd(evt, obj) {\n            // don't listen to drop events if this is the element being dragged\n            // only update the styles and return\n            if (!this._dropEnabled || this._myid === obj.uid) {\n                this.updateDragStyles(false, obj.element);\n                return;\n            }\n\n            if (this.isTouching(obj.x, obj.y, obj.element)) {\n                // call the pipDraggable pipDragSuccess element callback\n                if (obj.callback) {\n                    obj.callback(obj);\n                }\n\n                if (this.$attrs.pipDropSuccess) {\n                    this.$timeout(() => {\n                        this.onDropCallback(this.$scope, {\n                            $data: obj.data,\n                            $event: obj,\n                            $target: this.$scope.$eval(this.$scope.value)\n                        });\n                    });\n                }\n            }\n\n            if (this.$attrs.pipDragStop) {\n                this.$timeout(() => {\n                    this.onDragStopCallback(this.$scope, {\n                        $data: obj.data,\n                        $event: obj\n                    });\n                });\n            }\n\n            this.updateDragStyles(false, obj.element);\n        }\n\n        private isTouching(mouseX, mouseY, dragElement) {\n            const touching = this.hitTest(mouseX, mouseY);\n            this.$scope.isTouching = touching;\n            if (touching) {\n                this._lastDropTouch = this.$element;\n            }\n            this.updateDragStyles(touching, dragElement);\n            return touching;\n        }\n\n        private updateDragStyles(touching, dragElement) {\n            if (touching) {\n                this.$element.addClass('pip-drag-enter');\n                dragElement.addClass('pip-drag-over');\n            } else if (this._lastDropTouch == this.$element) {\n                this._lastDropTouch = null;\n                this.$element.removeClass('pip-drag-enter');\n                dragElement.removeClass('pip-drag-over');\n            }\n        };\n\n        private hitTest(x, y) {\n            const bounds = this.$element[0].getBoundingClientRect();\n            x -= this.$document[0].body.scrollLeft + this.$document[0].documentElement.scrollLeft;\n            y -= this.$document[0].body.scrollTop + this.$document[0].documentElement.scrollTop;\n            return x >= bounds.left &&\n                x <= bounds.right &&\n                y <= bounds.bottom &&\n                y >= bounds.top;\n        }\n    }\n\n    const Drop = function (\n        $parse: ng.IParseService,\n        $document: ng.IDocumentService,\n        $timeout: ng.ITimeoutService,\n        pipDraggable: IDraggableService,\n    ): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: IDropLinkScope,\n                $element: JQuery,\n                $attrs: IDropLinkAttributes\n            ) {\n                new DropLink($parse, $document, $timeout, pipDraggable, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipDrop', Drop);\n}","{\n\n    class PreventDragLink {\n        constructor(\n            private $element: JQuery\n        ) {\n            this.initialize();\n        }\n\n        private initialize() {\n            this.$element.attr('pip-draggable', 'false');\n            this.toggleListeners(true);\n        }\n\n        private toggleListeners(enable) {\n            // remove listeners\n            if (!enable) return;\n            // add listeners.\n            this.$element.on('mousedown touchstart touchmove touchend touchcancel', (event) => { this.absorbEvent_(event); });\n        }\n\n        private absorbEvent_(event) {\n            const e = event.originalEvent;\n            e.preventDefault && e.preventDefault();\n            e.stopPropagation && e.stopPropagation();\n            e.cancelBubble = true;\n            e.returnValue = false;\n            return false;\n        }\n\n    }\n\n    const PreventDrag = function (): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: ng.IScope,\n                $element: JQuery,\n                $attrs: ng.IAttributes\n            ) {\n                new PreventDragLink($element);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipPreventDrag', PreventDrag);\n}","angular.module(\"pipDraggable\", []);\n\nimport './DraggableService';\nimport './Drag';\nimport './Drop';\nimport './PreventDrag';\nimport './CancelDrag';\n","{\n    interface FocusedScope extends ng.IScope {\n        pipFocusedColor: Function;\n        pipFocusedClass: Function;\n        pipFocusedRebind: Function;\n        pipFocusedTabindex: Function;\n        pipFocusedOpacity: Function;\n        pipFocusedData: Function;\n        pipWithHidden: Function;\n        pipRebind: Function;\n    }\n\n    interface FocusedAttributes extends ng.IAttributes {\n        ngModel: any;\n        pipFocusedData: any;\n    }\n\n    class FocusedLink implements ng.IDirective {\n        private controls: JQuery;\n        private controlsLength: number;\n        private color: string;\n        private opacityDelta: number = 0.4;\n        private opacityLimit: number = 0.5;\n        private oldBackgroundColor: string;\n        private onFocusClass: string;\n\n        constructor(\n            private $scope: FocusedScope,\n            private $element: JQuery,\n            $attrs: FocusedAttributes,\n            private $timeout: ng.ITimeoutService,\n            private $mdConstant: any,\n            private $window: ng.IWindowService\n        ) {\n\n            $element.on('keydown', (e) => {\n                this.keydownListener(e);\n            });\n\n            $timeout(() => {\n                this.init();\n            });\n\n            if ($attrs.ngModel) {\n                $scope.$watch('ngModel', function () {\n                    $timeout(this.init);\n                }, true);\n            }\n\n            if ($attrs.pipFocusedData) {\n                $scope.$watch('pipFocusedData', function () {\n                    $timeout(this.init);\n                }, true);\n            }\n        }\n\n        private init() {\n            const selector = this.$scope.pipWithHidden && this.$scope.pipWithHidden() ? '.pip-focusable' : '.pip-focusable:visible';\n            this.onFocusClass = this.$scope.pipFocusedClass ? this.$scope.pipFocusedClass() : '';\n            this.controls = this.$element.find(selector);\n            this.controlsLength = this.controls.length;\n            this.checkTabindex(this.controls);\n            // Add event listeners\n            this.controls.on('focus', (event) => {\n                const target = event.currentTarget;\n                if ($(target).hasClass('md-focused')) {\n                    return;\n                }\n                if (this.$scope.pipRebind && this.$scope.pipRebind()) {\n                    this.init();\n                }\n                this.$element.addClass('pip-focused-container');\n                $(target).addClass(this.onFocusClass);\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\n\n                    this.color = $(target).css('backgroundColor');\n                    this.oldBackgroundColor = this.color;\n                    $(target).css('backgroundColor', this.rgba(this.color));\n                    $(target).addClass('md-focused');\n                } else {\n                    $(target).addClass('md-focused md-focused-opacity');\n                }\n\n            }).on('focusout', (event) => {\n                const target = event.currentTarget;\n                if (!$(target).hasClass('md-focused')) {\n                    return;\n                }\n                this.$element.removeClass('pip-focused-container');\n                $(target).removeClass(this.onFocusClass);\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\n                    $(target).css('backgroundColor', this.oldBackgroundColor);\n                    $(target).removeClass('md-focused md-focused-opacity');\n                } else {\n                    $(target).removeClass('md-focused');\n                }\n            });\n        }\n\n        private rgba(color) {\n            if (this.$scope.pipFocusedColor && this.$scope.pipFocusedColor()) {\n                return this.$scope.pipFocusedColor();\n            }\n\n            const arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\n\n            if (!arr || arr.length < 3) {\n                return ''\n            }\n\n            let red, blue, green, opacity;\n\n            opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\n            red = arr[0];\n            blue = arr[1];\n            green = arr[2];\n\n            if (opacity < this.opacityLimit) {\n                opacity += this.opacityDelta;\n            } else {\n                opacity -= this.opacityDelta;\n            }\n\n            return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\n        }\n\n        private setTabindex(element, value) {\n            element.attr('tabindex', value);\n        }\n\n        private checkTabindex(controls) {\n            const index = _.findIndex(controls, (c) => {\n                return c['tabindex'] > -1;\n            });\n\n            if (index == -1 && controls.length > 0 && this.$scope.pipFocusedTabindex) {\n                this.setTabindex(angular.element(controls[0]), this.$scope.pipFocusedTabindex());\n            }\n        }\n\n        private keydownListener(e) {\n            const keyCode = e.which || e.keyCode;\n            // Check control keyCode\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\n            ) {\n                e.preventDefault();\n\n                const\n                    increment = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                    moveToControl = this.controls.index(this.controls.filter(\".md-focused\")) + increment;\n                // Move focus to next control\n                if (moveToControl >= 0 && moveToControl < this.controlsLength) {\n                    this.controls[moveToControl].focus();\n                }\n            }\n        }\n    }\n\n    const Focused = function ($timeout: ng.ITimeoutService, \n        $mdConstant: any, \n        $window: ng.IWindowService\n    ): ng.IDirective {\n        return {\n            scope: {\n                pipFocusedColor: '&?',\n                pipFocusedClass: '&?',\n                pipFocusedRebind: '&?',\n                pipFocusedTabindex: '&?',\n                pipFocusedOpacity: '&?',\n                pipFocusedData: '&?',\n                pipWithHidden: '&?',\n                pipRebind: '&?'\n            },\n            link: function($scope: FocusedScope, $element: JQuery, $attrs: FocusedAttributes) {\n                new FocusedLink($scope, $element, $attrs, $timeout, $mdConstant, $window);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipFocused\", [])\n        .directive('pipFocused', Focused);\n}","﻿import './unsaved_changes/unsavedChanges';\nimport './shortcuts/index';\nimport './focused/focused';\nimport './draggable/index';\nimport './selected/selected';\nimport './infinite_scroll/infiniteScroll';\n\nangular.module('pipBehaviors', [\n    'pipFocused',\n    'pipSelected',\n    'pipInfiniteScroll',\n    'pipUnsavedChanges',\n    'pipDraggable',\n    'pipShortcuts'\n]);\n\nexport * from './shortcuts/index';\n","{\n    interface InfiniteScrollScope extends ng.IScope {\n        pipInfiniteScroll: Function;\n        pipScrollContainer: JQuery;\n        pipScrollDistance: number | string;\n        pipScrollDisabled: boolean;\n        pipScrollUseDocumentBottom: boolean;\n        pipScrollListenForEvent: string;\n    }\n\n    interface InfiniteScrollAttributes extends ng.IAttributes {\n        pipScrollParent: any;\n        pipScrolImmediateCheck: any;\n    }\n\n    class InfiniteScrollLink {\n        private THROTTLE_MILLISECONDS: number = 500;\n        private checkWhenEnabled = null;\n        private scrollContainer = null;\n        private immediateCheck = true;\n        private scrollDistance = null;\n        private scrollEnabled = null;\n        private unregisterEventListener = null;\n        private useDocumentBottom = false;\n        private windowElement = null;\n        private onContainerScrollThrottle: Function;\n\n        constructor(\n            private $rootScope: ng.IRootScopeService,\n            private $window: ng.IWindowService,\n            private $interval: ng.IIntervalService,\n            private $scope: InfiniteScrollScope,\n            private $element: JQuery,\n            private $attrs: InfiniteScrollAttributes\n        ) {\n            this.windowElement = angular.element($window);\n\n            this.onContainerScrollThrottle = _.throttle(() => {\n                this.onContainerScroll();\n            }, this.THROTTLE_MILLISECONDS);\n\n            $scope.$on('$destroy', () => {\n                this.scrollContainer.unbind('scroll', () => {\n                    this.onContainerScrollThrottle();\n                });\n                if (this.unregisterEventListener !== null) {\n                    this.unregisterEventListener();\n                    return this.unregisterEventListener = null;\n                }\n            });\n\n            $scope.$watch('pipScrollDistance', (v) => {\n                this.handleScrollDistance(v);\n            });\n            this.handleScrollDistance($scope.pipScrollDistance);\n\n            $scope.$watch('pipScrollDisabled', (v) => {\n                this.handleScrollDisabled(v);\n            });\n            this.handleScrollDisabled($scope.pipScrollDisabled);\n\n            $scope.$watch('pipScrollUseDocumentBottom', (v) => {\n                this.handleScrollUseDocumentBottom(v);\n            });\n            this.handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\n\n            this.changeContainer(this.windowElement);\n            if ($scope.pipScrollListenForEvent) {\n                this.unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, () => {\n                    this.onContainerScrollThrottle();\n                });\n            }\n\n            $scope.$watch('pipScrollContainer', (newContainer) => {\n                if (newContainer != this.scrollContainer)\n                    this.handleScrollContainer(newContainer);\n            });\n            this.handleScrollContainer($scope.pipScrollContainer || []);\n\n            if ($attrs.pipScrollParent !== null) {\n                this.changeContainer(angular.element($element.parent()));\n            }\n            if ($attrs.pipScrolImmediateCheck !== null) {\n                this.immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\n            }\n\n            $interval((function () {\n                if (this.immediateCheck) {\n                    return this.onContainerScrollThrottle();\n                }\n            }), 0, 1);\n        }\n\n        private height(element) {\n            element = element[0] || element;\n            if (isNaN(element.offsetHeight)) {\n                return element.document.documentElement.clientHeight;\n            } else {\n                return element.offsetHeight;\n            }\n        }\n\n        private offsetTop(element) {\n            if (!element[0].getBoundingClientRect || element.css('none')) {\n                return;\n            }\n            return element[0].getBoundingClientRect().top + this.pageYOffset(element);\n        }\n\n        private pageYOffset(element) {\n            element = element[0] || element;\n            if (isNaN(window.pageYOffset)) {\n                return element.document.documentElement.scrollTop;\n            } else {\n                return element.ownerDocument.defaultView.pageYOffset;\n            }\n        }\n\n        private onContainerScroll() {\n            let containerBottom,\n                containerTopOffset,\n                elementBottom,\n                remaining,\n                shouldScroll;\n\n            if (this.scrollContainer === this.windowElement) {\n                containerBottom = this.height(this.scrollContainer) + this.pageYOffset(this.scrollContainer[0].document.documentElement);\n                elementBottom = this.offsetTop(this.$element) + this.height(this.$element);\n            } else {\n                containerBottom = this.height(this.scrollContainer);\n                containerTopOffset = 0;\n                if (this.offsetTop(this.scrollContainer) !== void 0) {\n                    containerTopOffset = this.offsetTop(this.scrollContainer);\n                }\n                elementBottom = this.offsetTop(this.$element) - containerTopOffset + this.height(this.$element);\n            }\n\n            if (this.useDocumentBottom) {\n                elementBottom = this.height((this.$element[0].ownerDocument || ( < any > this.$element[0]).document).documentElement);\n            }\n\n            remaining = elementBottom - containerBottom;\n            shouldScroll = remaining <= this.height(this.scrollContainer) * this.scrollDistance + 1;\n\n            if (shouldScroll) {\n                this.checkWhenEnabled = true;\n                if (this.scrollEnabled) {\n                    if (this.$scope.$$phase || this.$rootScope.$$phase) {\n                        return this.$scope.pipInfiniteScroll();\n                    } else {\n                        return this.$scope.$apply(() => {\n                            this.$scope.pipInfiniteScroll();\n                        });\n                    }\n                }\n            } else {\n                return this.checkWhenEnabled = false;\n            }\n        }\n\n        private handleScrollDistance(v) {\n            return this.scrollDistance = parseFloat(v) || 0;\n        }\n\n        private handleScrollDisabled(v) {\n            this.scrollEnabled = !v;\n            if (this.scrollEnabled && this.checkWhenEnabled) {\n                this.checkWhenEnabled = false;\n                this.onContainerScrollThrottle();\n            }\n        }\n\n        private handleScrollUseDocumentBottom(v) {\n            return this.useDocumentBottom = v;\n        }\n\n        private changeContainer(newContainer) {\n            if (this.scrollContainer) {\n                this.scrollContainer.unbind('scroll', () => {\n                    this.onContainerScrollThrottle();\n                });\n            }\n\n            this.scrollContainer = newContainer;\n            if (newContainer) {\n                return this.scrollContainer.bind('scroll', () => {\n                    this.onContainerScrollThrottle();\n                });\n            }\n        }\n\n        private handleScrollContainer(newContainer) {\n            if ((newContainer == null) || newContainer.length === 0) {\n                return;\n            }\n            if (newContainer instanceof HTMLElement) {\n                newContainer = angular.element(newContainer);\n            } else if (typeof newContainer.append === 'function') {\n                newContainer = angular.element(newContainer[newContainer.length - 1]);\n            } else if (typeof newContainer === 'string') {\n                newContainer = this.$element.parents().find(newContainer);\n            }\n\n            if (newContainer != null && (!Array.isArray(newContainer) ||\n                    (Array.isArray(newContainer) && newContainer.length > 0))) {\n                return this.changeContainer(newContainer);\n            } else {\n                throw new Error(\"Invalid pip-scroll-container attribute.\");\n            }\n        }\n\n    }\n\n    const InfiniteScroll = function (\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        $interval: ng.IIntervalService\n    ): ng.IDirective {\n        return {\n            scope: {\n                pipInfiniteScroll: '&',\n                pipScrollContainer: '=',\n                pipScrollDistance: '=',\n                pipScrollDisabled: '=',\n                pipScrollUseDocumentBottom: '=',\n                pipScrollListenForEvent: '@'\n            },\n            link: function (\n                $scope: InfiniteScrollScope,\n                $element: JQuery,\n                $attrs: InfiniteScrollAttributes\n            ) {\n                new InfiniteScrollLink($rootScope, $window, $interval, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipInfiniteScroll\", [])\n        .directive('pipInfiniteScroll', InfiniteScroll);\n}","{\n    interface SelectedAttributes extends ng.IAttributes {\n        pipSelected: any;\n        pipSelectedId: any;\n        pipSelect: any;\n        pipEnterSpacePress: any;\n        pipNoScroll: any;\n        pipSkipHidden: any;\n        pipTreeList: any;\n        pipSelectedWatch: any;\n    }\n\n    class SelectedLink {\n        private indexGetter: any;\n        private indexSetter: any;\n        private idSetter: any;\n        private idGetter: any;\n        private changeGetter: any;\n        private enterSpaceGetter: any;\n        private noScroll: any;\n        private modifier: any;\n        private className: any;\n        private selectedIndex: any;\n        private currentElementTabinex: any;\n        private pipSelectedWatch: any;\n        private isScrolled: any;\n        // Variables for touch functions\n        private touchStartX: any;\n        private touchStartY: any;\n        private trackingClick: any;\n        private trackingClickStart: any;\n        private targetElement: any;\n        private lastClickTime: any;\n        private cancelNextClick: any;\n        // Constants for touch functions\n        private touchBoundary: number = 10;\n        private tapdelay: number = 200;\n        private tapTimeout: number = 700;\n\n        constructor(\n            $parse: ng.IParseService,\n            private $mdConstant: any,\n            private $timeout: ng.ITimeoutService,\n            private $scope: ng.IScope,\n            private $element: JQuery,\n            private $attrs: SelectedAttributes\n        ) {\n            this.indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null;\n            this.indexSetter = this.indexGetter ? this.indexGetter.assign : null;\n            this.idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null;\n            this.idSetter = this.idGetter ? this.idGetter.assign : null;\n            this.changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null;\n            this.enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null;\n            this.noScroll = $attrs.pipNoScroll;\n            this.modifier = $attrs.pipSkipHidden ? ':visible' : '';\n            this.className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable';\n            this.selectedIndex = this.indexGetter($scope);\n            this.currentElementTabinex = $element.attr('tabindex');\n            this.pipSelectedWatch = $attrs.pipSelectedWatch;\n            this.isScrolled = false;\n\n            $element.attr('tabindex', this.currentElementTabinex || 0);\n\n            $element.on('click', this.className, (event) => {\n                this.onClickEvent(event);\n            });\n            $element.on('touchstart', this.className, (event) => {\n                this.onTouchStart(event);\n            });\n            $element.on('touchmove', this.className, (event) => {\n                this.onTouchMove(event);\n            });\n            $element.on('touchend', this.className, (event) => {\n                this.onTouchEnd(event);\n            });\n            $element.on('touchcancel', this.className, (event) => {\n                this.onTouchCancel(event);\n            });\n            $element.on('keydown', (event) => {\n                this.onKeyDown(event);\n            });\n            $element.on('focusin', (event) => {\n                this.onFocusIn(event);\n            });\n            $element.on('focusout', (event) => {\n                this.onFocusOut(event);\n            });\n\n            // Watch selected item index\n            if (!$attrs.pipTreeList) {\n                $scope.$watch(this.indexGetter, (newSelectedIndex) => {\n                    this.selectItem({\n                        itemIndex: newSelectedIndex\n                    });\n                });\n            } else {\n                $scope.$watch(this.idGetter, (newSelectedId) => {\n                    $timeout(() => {\n                        this.selectItem({\n                            itemId: newSelectedId,\n                            raiseEvent: true\n                        });\n                    }, 0);\n                });\n            }\n\n            // Watch resync selection\n            if (this.pipSelectedWatch) {\n                $scope.$watch(this.pipSelectedWatch, () => {\n                    // Delay update to allow ng-repeat to update DOM\n                    $timeout(() => {\n                        this.selectedIndex = this.indexGetter($scope);\n                        this.selectItem({\n                            itemIndex: this.selectedIndex\n                        });\n                    }, 100);\n                });\n            }\n\n            // Select item defined by index\n            this.selectItem({\n                itemIndex: this.selectedIndex,\n                items: $element.find(this.className)\n            });\n        }\n\n        private selectItem(itemParams) {\n            if (this.isScrolled) return;\n            let itemIndex = itemParams.itemIndex,\n                itemId = itemParams.itemId,\n                items = itemParams.items || this.$element.find(this.className + this.modifier),\n                itemsLength = items.length,\n                item = () => {\n                    if (itemParams.item) return itemParams.item;\n                    if (itemIndex === undefined && itemIndex === -1) {\n                        itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\n                    }\n                    if (itemIndex >= 0 && itemIndex < itemsLength) {\n                        return items[itemIndex]\n                    }\n\n                    return false;\n                },\n                raiseEvent = itemParams.raiseEvent;\n                item = item();\n            if (item) {\n                this.$element.find(this.className).removeClass('selected md-focused');\n                item = <any>angular.element(item)\n                    .addClass('selected md-focused')\n                    .focus();\n                if (!this.noScroll) this.scrollToItem(item);\n                if (raiseEvent) this.defineSelectedIndex(items);\n            }\n        };\n\n        private defineSelectedIndex(items) {\n            const oldSelectedIndex = this.selectedIndex;\n            this.selectedIndex = -1;\n            for (var index = 0; index < items.length; index++) {\n                if ($(items[index]).hasClass('selected')) {\n                    this.selectedIndex = index;\n\n                    break;\n                }\n            }\n\n            // Execute callback to notify about item select\n            if (oldSelectedIndex != this.selectedIndex && this.selectedIndex !== -1) {\n                this.$scope.$apply(updateIndex);\n            } else {\n                this.$scope.$apply(onSelect);\n            }\n\n            function updateIndex() {\n                const selectedItem = angular.element(items[this.selectedIndex]),\n                    selectedId = selectedItem.attr('pip-id');\n\n                if (this.indexSetter) this.indexSetter(this.$scope, this.selectedIndex);\n                if (this.idSetter) this.idSetter(this.$scope, selectedId);\n                onSelect();\n            };\n\n            function onSelect() {\n                const selectedItem = angular.element(items[this.selectedIndex]),\n                    selectedId = selectedItem.attr('pip-id');\n\n                if (this.changeGetter) {\n                    this.changeGetter(this.$scope, {\n                        $event: {\n                            target: this.$element,\n                            item: selectedItem,\n                            index: this.selectedIndex,\n                            id: selectedId,\n                            newIndex: this.selectedIndex,\n                            oldIndex: oldSelectedIndex\n                        }\n                    });\n                }\n            }\n        };\n\n        private scrollToItem($item) {\n            if (this.noScroll || !$item.offset()) return;\n\n            const\n                containerTop = this.$element.offset().top,\n                containerHeight = this.$element.height(),\n                containerBottom = containerTop + containerHeight,\n                itemTop = $item.offset().top,\n                itemHeight = $item.outerHeight(true),\n                itemBottom = itemTop + itemHeight,\n                containerScrollTop = this.$element.scrollTop();\n\n            this.isScrolled = true;\n            this.$timeout(() => {\n                this.isScrolled = false;\n            }, 100);\n\n            if (containerTop > itemTop) {\n                this.$element.scrollTop(containerScrollTop + itemTop - containerTop);\n            } else if (containerBottom < itemBottom) {\n                this.$element.scrollTop(containerScrollTop + itemBottom - containerBottom);\n            }\n        };\n\n        private getTargetElementFromEventTarget(eventTarget) {\n            // On some older browsers the event target may be a text node.\n            if (eventTarget.nodeType === Node.TEXT_NODE) {\n                return eventTarget.parentNode;\n            }\n\n            return eventTarget;\n        };\n\n        private touchHasMoved(event) {\n            const touch = event.changedTouches[0],\n                boundary = this.touchBoundary; // Touchmove boundary, beyond which a click will be cancelled.\n\n            if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\n                return true;\n            }\n\n            return false;\n        };\n\n        private onClickEvent(event) {\n            this.selectItem({\n                item: event.currentTarget,\n                raiseEvent: true\n            });\n        }\n\n        private onTouchStart(event) {\n            const ev = event.originalEvent;\n            if (ev['targetTouches'].length > 1) {\n                return true;\n            }\n            const targetElement = this.getTargetElementFromEventTarget(ev.target),\n                touch = ev['targetTouches'][0];\n\n            this.trackingClick = true;\n            this.trackingClickStart = ev.timeStamp;\n            this.targetElement = targetElement;\n\n            this.touchStartX = touch.pageX;\n            this.touchStartY = touch.pageY;\n\n            /*if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\n                //  event.preventDefault();\n            }*/\n\n            return true;\n        }\n\n        private onTouchMove(event) {\n            if (!this.trackingClick) {\n                return true;\n            }\n            const ev = event.originalEvent;\n            // If the touch has moved, cancel the click tracking\n            if (this.targetElement !== this.getTargetElementFromEventTarget(ev.target) || this.touchHasMoved(ev)) {\n                this.trackingClick = false;\n                this.targetElement = null;\n            }\n\n            return true;\n        }\n\n        private onTouchEnd(event) {\n            let forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = this.targetElement;\n\n            if (!this.trackingClick) {\n                return true;\n            }\n            const ev = event.originalEvent;\n            // Prevent phantom clicks on fast double-tap \n            if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\n                this.cancelNextClick = true;\n                return true;\n            }\n\n            if ((ev.timeStamp - this.trackingClickStart) > this.tapTimeout) {\n                return true;\n            }\n\n            // Reset to prevent wrong click cancel on input \n            this.cancelNextClick = false;\n\n            this.lastClickTime = event.timeStamp;\n\n            newTrackingClickStart = this.trackingClickStart;\n            this.trackingClick = false;\n            this.trackingClickStart = 0;\n\n            this.selectItem({\n                item: event.currentTarget,\n                raiseEvent: true\n            });\n\n            return false;\n        }\n\n        private onTouchCancel(event) {\n            this.trackingClick = false;\n            this.targetElement = null;\n        }\n\n        private onKeyDown(event) {\n            var keyCode = event.which || event.keyCode;\n\n            // Check control keyCode\n            if (keyCode == this.$mdConstant.KEY_CODE.ENTER || keyCode == this.$mdConstant.KEY_CODE.SPACE) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                if (this.enterSpaceGetter) {\n                    this.enterSpaceGetter(this.$scope, {\n                        $event: {\n                            target: this.$element,\n                            index: this.selectedIndex,\n                            item: this.$element.find('.selected')\n                        }\n                    });\n                }\n\n            } else\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW || keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\n            ) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // Get next selectable control index\n                const items = this.$element.find(this.className + this.modifier),\n                    inc = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                    newSelectedIndex = this.selectedIndex + inc;\n\n                // Set next control as selected\n                this.selectItem({\n                    itemIndex: newSelectedIndex,\n                    items: items,\n                    raiseEvent: true\n                });\n            }\n        }\n\n        private onFocusIn(event) {\n            // Choose selected element\n            let items,\n                selectedItem = this.$element.find(this.className + '.selected');\n\n            selectedItem.addClass('md-focused');\n\n            // If there are not selected elements then pick the first one\n            if (selectedItem.length === 0) {\n                this.selectedIndex = this.indexGetter(this.$scope);\n                items = this.$element.find(this.className + this.modifier);\n                this.selectItem({\n                    itemIndex: this.selectedIndex || 0,\n                    items: items,\n                    raiseEvent: true\n                });\n            }\n        }\n\n        private onFocusOut(event) {\n            this.$element.find(this.className + '.md-focused' + this.modifier).removeClass('md-focused');\n        }\n    }\n\n    const Selected = function (\n        $parse: ng.IParseService,\n        $mdConstant: any,\n        $timeout: ng.ITimeoutService\n    ): ng.IDirective {\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (\n                $scope: ng.IScope,\n                $element: JQuery,\n                $attrs: SelectedAttributes\n            ) {\n                new SelectedLink($parse, $mdConstant, $timeout, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipSelected\", [])\n        .directive('pipSelected', Selected);\n}","import { ShortcutOptions } from \"./Shortcut\";\n\nexport class ShortcutItem {\n    // Shortcut combination\n    public shortcut: string;\n    // Target object \n    public target?: any;\n    // Target element by Id\n    public targetId?: string;\n    // Target element by class (firstelement??)\n    // Public targetClass?: string;\n    // Access function\n    public access?: (event: JQueryEventObject) => boolean;\n    // Window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public keypress?: (event: JQueryEventObject) => void;\n    // Default options\n    public options?: ShortcutOptions;    \n}\n\n// export class ShortcutItem extends SimpleShortcutItem {\n//     public shortcuts: SimpleShortcutItem[];\n// }\n\nexport class ShortcutsConfig {\n    // Global shortcut \n    public globalShortcuts: ShortcutItem[] = [];\n    // Local shortcut \n    public localShortcuts: ShortcutItem[] = [];\n    // Default options\n    public defaultOptions: ShortcutOptions = null;\n}\n\nexport interface IShortcutsService {\n    readonly config: ShortcutsConfig;\n\n    globalShortcuts: ShortcutItem[];\n    localShortcuts: ShortcutItem[];\n}\n\nexport interface IShortcutsProvider extends ng.IServiceProvider {\n    config: ShortcutsConfig;\n    \n    globalShortcuts: ShortcutItem[];\n    defaultOptions: ShortcutOptions;\n}\n","export class KeyboardEvent {\n    static Keydown: string = 'keydown';\n    static Keyup: string = 'keyup';\n    static Keypress: string = 'keypress';\n}\n\nexport class ShortcutOptions {\n    Type: KeyboardEvent;\n    Propagate: boolean;\n    DisableInInput: boolean;\n    Target: any; // Event target object\n    Keycode: number;\n}\n\nexport class Shortcut {\n    private shift_nums = {\n        \"`\": \"~\",\n        \"1\": \"!\",\n        \"2\": \"@\",\n        \"3\": \"#\",\n        \"4\": \"$\",\n        \"5\": \"%\",\n        \"6\": \"^\",\n        \"7\": \"&\",\n        \"8\": \"*\",\n        \"9\": \"(\",\n        \"0\": \")\",\n        \"-\": \"_\",\n        \"=\": \"+\",\n        \";\": \":\",\n        \"'\": \"\\\"\",\n        \",\": \"<\",\n        \".\": \">\",\n        \"/\": \"?\",\n        \"\\\\\": \"|\"\n    };\n\n    private special_keys = {\n        'esc': 27,\n        'escape': 27,\n        'tab': 9,\n        'space': 32,\n        'return': 13,\n        'enter': 13,\n        'backspace': 8,\n\n        'scrolllock': 145,\n        'scroll_lock': 145,\n        'scroll': 145,\n        'capslock': 20,\n        'caps_lock': 20,\n        'caps': 20,\n        'numlock': 144,\n        'num_lock': 144,\n        'num': 144,\n\n        'pause': 19,\n        'break': 19,\n\n        'insert': 45,\n        'home': 36,\n        'delete': 46,\n        'end': 35,\n\n        'pageup': 33,\n        'page_up': 33,\n        'pu': 33,\n\n        'pagedown': 34,\n        'page_down': 34,\n        'pd': 34,\n\n        'left': 37,\n        'up': 38,\n        'right': 39,\n        'down': 40,\n\n        'f1': 112,\n        'f2': 113,\n        'f3': 114,\n        'f4': 115,\n        'f5': 116,\n        'f6': 117,\n        'f7': 118,\n        'f8': 119,\n        'f9': 120,\n        'f10': 121,\n        'f11': 122,\n        'f12': 123\n    };\n\n    private modifiers = {\n        shift: { wanted: false, pressed: false },\n        ctrl: { wanted: false, pressed: false },\n        alt: { wanted: false, pressed: false },\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\n    };\n\n    public eventCallback: Function;\n    public target: any;\n    public event: KeyboardEvent;\n    public option: ShortcutOptions;\n    public shorcut: string;\n    public callback: Function;\n\n    public constructor(\n        element: any,\n        shorcutCombination: string,\n        option: ShortcutOptions,\n        callback: (e?: JQueryEventObject) => void\n    ) {\n        \"ngInject\";\n\n        this.target = element;\n        this.shorcut = shorcutCombination;\n        this.event = option.Type;\n        this.option = option;\n        this.callback = callback;\n\n        this.eventCallback = (event: JQueryEventObject) => {\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\n            let code: number;\n\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\n                let element;\n                if (e.target) {\n                    element = e.target;\n                } else if (e.srcElement) {\n                    element = e.srcElement;\n                }\n\n                if (element.nodeType == 3) {\n                    element = element.parentNode;\n                }\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\n            }\n            // Find Which key is pressed\n            if (e.keyCode) {\n                code = e.keyCode;\n            } else if (e.which) {\n                code = e.which;\n            }\n\n            let character = String.fromCharCode(code).toLowerCase();\n\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\n\n            let keys: string[] = this.shorcut.split(\"+\");\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\n            let kp: number = 0;\n\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\n\n            let i: number = 0;\n            for (i = 0; i < keys.length; i++) {\n                let k: string = keys[i];\n                // Modifiers\n                if (k == 'ctrl' || k == 'control') {\n                    kp++;\n                    this.modifiers.ctrl.wanted = true;\n                } else if (k == 'shift') {\n                    kp++;\n                    this.modifiers.shift.wanted = true;\n                } else if (k == 'alt') {\n                    kp++;\n                    this.modifiers.alt.wanted = true;\n                } else if (k == 'meta') {\n                    kp++;\n                    this.modifiers.meta.wanted = true;\n                } else if (k.length > 1) { // If it is a special key\n                    if (this.special_keys[k] == code) {\n                        kp++;\n                    }\n                } else if (this.option.Keycode) {\n                    if (this.option.Keycode == code) kp++;\n                } else { // The special keys did not match\n                    if (character == k) kp++;\n                    else {\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\n                            character = this.shift_nums[character];\n                            if (character == k) {\n                                kp++;\n                            }\n                        }\n                    }\n                }\n            }\n            \n            if (kp == keys.length &&\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\n\n                this.callback(e);\n\n                if (!this.option.Propagate) { // Stop the event\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n\n                    // e.stopPropagation works in Firefox.\n                    if (e.stopPropagation) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }\n\n                    return false;\n                }\n            }\n            this.modifiers.ctrl.pressed = false;\n            this.modifiers.shift.pressed = false;\n            this.modifiers.alt.pressed = false;\n            this.modifiers.meta.pressed = false;\n        };\n    }\n}\n","import { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\nimport { IKeyboardShortcuts, IShortcutBindingService, IShortcutBindingProvider } from './IShortcutBindingService';\n\n{\n    class ShortcutBindingService implements IShortcutBindingService {\n        private _log: ng.ILogService;\n        private _defaultOption: ShortcutOptions;\n        private _shortcuts: IKeyboardShortcuts = {};\n\n        public constructor(\n            $log: ng.ILogService,\n            option: ShortcutOptions\n        ) {\n            \"ngInject\";\n            this._log = $log;\n            this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\n        }\n\n        private getDefaultOption(): ShortcutOptions {\n            let defaultOption: ShortcutOptions = {\n                Type: KeyboardEvent.Keydown,\n                Propagate: false,\n                DisableInInput: false,\n                Target: document,\n                Keycode: null\n            };\n\n            return defaultOption;\n        }\n\n        public get shortcuts(): IKeyboardShortcuts {\n            return this._shortcuts;\n        }\n\n        public add(shortcut: string, callback: (e: JQueryEventObject) => void, option: ShortcutOptions): void {\n            this.remove(shortcut);\n            let shortcutOption: ShortcutOptions = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\n            let shortcutCombination: string = shortcut.toLowerCase();\n            let element = shortcutOption.Target;\n\n            if (typeof shortcutOption.Target == 'string') {\n                element = document.getElementById(shortcutOption.Target);\n            } else {\n                element = shortcutOption.Target;\n            }\n\n            if (!element) {\n                this._log.error('Register shortcut: element undentified!');\n                return;\n            }\n\n            if (!shortcutCombination) {\n                this._log.error('Register shortcut: shortcut combination undentified!');\n                return;\n            }\n\n            if (!callback) {\n                this._log.error('Register shortcut: shorcut callback undentified!');\n                return;\n            }\n\n            let newKeyboardShortcut = new Shortcut(element, shortcutCombination, shortcutOption, callback);\n\n            this._shortcuts[shortcutCombination] = newKeyboardShortcut;\n\n            //Attach the function with the event\n            if (element.addEventListener) {\n                element.addEventListener(shortcutOption.Type, newKeyboardShortcut.eventCallback, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + shortcutOption.Type, newKeyboardShortcut.eventCallback);\n            } else {\n                element.on(shortcutOption.Type, newKeyboardShortcut.eventCallback);\n            }\n        }\n\n        public remove(shorcut: string): void {\n            let shortcutCombination = shorcut.toLowerCase();\n            let binding: Shortcut = this._shortcuts[shortcutCombination];\n\n            delete(this._shortcuts[shortcutCombination])\n            if (!binding) return;\n\n            let type = binding.event;\n            let element = binding.target;\n            let callback = binding.eventCallback;\n\n            if (element.detachEvent) {\n                element.detachEvent('on' + type, callback);\n            } else if (element.removeEventListener) {\n                element.removeEventListener(type, callback, false);\n            } else {\n                // element['on' + type] = false;\n                element.off(type, callback);\n            }\n        }\n    }\n\n    class ShortcutBindingProvider implements IShortcutBindingProvider {\n        private _service: ShortcutBindingService;\n        private _option: ShortcutOptions;\n\n        public get option(): ShortcutOptions {\n            return this._option;\n        }\n\n        public set option(value: ShortcutOptions) {\n            this._option = value || new ShortcutOptions();\n        }\n\n        public $get(\n            $log: ng.ILogService\n        ) {\n            \"ngInject\";\n\n            if (this._service == null)\n                this._service = new ShortcutBindingService($log, this._option);\n\n            return this._service;\n        }\n    }\n\n    angular\n        .module('pipShortcuts')\n        .provider('pipShortcutBinding', ShortcutBindingProvider);\n}","import { ShortcutOptions } from \"./Shortcut\";\nimport { IShortcutBindingService } from \"./IShortcutBindingService\";\n\ninterface ShortcutAttributes extends ng.IAttributes {\n    pipShortcutAction: any;\n    pipShortcutName: any;\n    pipShorcutOptions: ShortcutOptions;\n}\n\nclass ShortcutController implements ng.IController  {\n    private actionShortcuts: Function;\n    private nameShortcuts: string;\n    private options: ShortcutOptions;\n\n    constructor(\n        $element: JQuery,\n        $attrs: ShortcutAttributes,\n        $scope: ng.IScope,\n        $log: ng.ILogService,\n        $parse: ng.IParseService,\n        pipShortcutBinding: IShortcutBindingService\n    ) {\n        \"ngInject\";\n\n        if ($attrs.pipShortcutAction) {\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\n            this.actionShortcuts($scope, {$event: {}});\n        } else {\n            $log.error('Shortcut action does not set.');\n\n            return\n        }\n\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\n            this.nameShortcuts = $attrs.pipShortcutName;\n        } else {\n            $log.error('Shortcut name does not set.');\n\n            return\n        }\n\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOptions>$attrs.pipShorcutOptions : <ShortcutOptions>{};\n        this.options.Target = $element;\n        \n        // Registration of keybord shortcuts\n        pipShortcutBinding.add(this.nameShortcuts, (e?: any) => {\n            this.actionShortcuts($scope, {$event: {'e': e}});          \n        }, this.options);\n    }\n\n    private keypressShortcut(action) {\n        this.actionShortcuts();\n    }\n}\n\n// Prevent junk from going into typescript definitions\n{\n    const shortcutsDirective = function(): ng.IDirective {\n        return {\n            restrict: 'A',\n            scope: false,            \n            controller: ShortcutController\n        };\n    }\n\n    angular\n        .module('pipShortcuts')\n        .directive('pipShortcut', shortcutsDirective);\n}","import { IShortcutBindingService } from \"./IShortcutBindingService\"\nimport { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\nimport { ShortcutsConfig, ShortcutItem, IShortcutsService, IShortcutsProvider } from './IShortcutsService';\n\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\n\nclass ShortcutsService implements IShortcutsService {\n    private _oldConfig: ShortcutsConfig;\n    private _config: ShortcutsConfig;\n\n    public constructor(\n        config: ShortcutsConfig,\n        private $rootScope: ng.IRootScopeService,\n        private $window: ng.IWindowService, \n        private $location: ng.ILocationService, \n        private $injector: ng.auto.IInjectorService,\n        private pipShortcutBinding: IShortcutBindingService\n    ) {\n        this._config = config;\n        this._oldConfig = _.cloneDeep(this._config);\n\n        // Add shortcuts\n        this.addShortcuts(this._config.globalShortcuts);\n        this.addShortcuts(this._config.localShortcuts);        \n    }\n\n    // Describe private functions\n    private sendChangeEvent() {\n        // Remove shortcuts\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\n        this.removeShortcuts(this._oldConfig.localShortcuts);\n\n        // Add shortcuts\n        this.addShortcuts(this.config.globalShortcuts);\n        this.addShortcuts(this.config.localShortcuts);\n\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\n\n        // Save current config to oldConfig\n        this._oldConfig = _.cloneDeep(this.config);\n    }\n\n    private removeShortcuts(collection: ShortcutItem[]): void {\n        _.each(collection, (k) => {\n            this.pipShortcutBinding.remove(k.shortcut);\n        });\n    }\n\n    private keypressShortcut(item: ShortcutItem, event: JQueryEventObject) {\n        if (item.access && _.isFunction(item.access)) {\n            if (!item.access(event)) {\n                return;\n            }\n        } \n\n        if (item.keypress) {\n            item.keypress(event);\n            return;\n        }\n\n        if (item.href) {\n            this.$window.location.href = item.href;\n            return;\n        }\n\n        if (item.url) {\n            this.$location.url(item.url);\n            return;\n        }\n\n        if (item.state) {\n            if (this.$injector.has('$state')) {\n                var $state = this.$injector.get('$state');\n                $state['go'](item.state, item.stateParams);\n            }\n            return;\n        }\n\n        if (item.event) {\n            this.$rootScope.$broadcast(item.event);\n        } else {\n            // Otherwise raise notification\n            this.$rootScope.$broadcast('pipShortcutKeypress', item.shortcut);\n        }\n    }\n\n    private addShortcuts(collection: ShortcutItem[]): void {\n        let generalOptions: ShortcutOptions = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOptions>{};\n        \n        _.each(collection, (k) => {\n            let option: ShortcutOptions = k.options ? k.options : generalOptions;\n            let target: any;\n\n            target = k.target ? k.target : k.targetId;\n            option.Target = target;\n            // Registration of keyboard shortcut\n            this.pipShortcutBinding.add(k.shortcut, (e?: any) => {\n                this.keypressShortcut(k, e);        \n            }, option);              \n        });\n    }\n\n    // Describe public functions \n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public get defaultOptions(): ShortcutOptions {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOptions) {\n        this._config.defaultOptions = value || null;\n        this.sendChangeEvent();\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get localShortcuts(): ShortcutItem[] {\n        return this._config.localShortcuts;\n    }\n\n    public set localShortcuts(value: ShortcutItem[]) {\n        this._config.localShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n}\n\nclass ShortcutsProvider implements IShortcutsProvider {\n    private _config: ShortcutsConfig = new ShortcutsConfig();\n    private _service: ShortcutsService;\n\n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public set config(value: ShortcutsConfig) {\n        this._config = value || new ShortcutsConfig();\n    }\n\n    public get defaultOptions(): ShortcutOptions {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOptions) {\n        this._config.defaultOptions = value || null;\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService, \n        $window: ng.IWindowService, \n        $location: ng.ILocationService, \n        $injector: ng.auto.IInjectorService,\n        pipShortcutBinding: IShortcutBindingService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutBinding);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipShortcuts')\n    .provider('pipShortcuts', ShortcutsProvider);\n\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\n\nimport './ShortcutBindingService';\nimport './ShortcutsService';\nimport './ShortcutDirective';\n\nexport * from './IShortcutsService';\nexport * from './IShortcutBindingService';\nexport * from './ShortcutsService';\nexport * from './ShortcutBindingService';","{\n    interface UnsavedChangesScope extends ng.IScope {\n        unsavedChangesAvailable: Function;\n        unsavedChangesMessage: string;\n        cancelLeave: Function;\n        afterLeave: Function;\n    }\n\n    class UnsavedChangesLink {\n        constructor(\n            $scope: UnsavedChangesScope,\n            $window: ng.IWindowService\n        ) {\n            $window.onbeforeunload = () => {\n                if ($scope.unsavedChangesAvailable()) {\n                    return $scope.unsavedChangesMessage;\n                }\n            };\n\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\n                    event.preventDefault();\n                } else {\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\n                }\n            });\n\n            $scope.$on('$destroy', () => {\n                $window.onbeforeunload = null;\n                unbindFunc();\n            });\n        }\n    }\n\n    const UnsavedChanges = function ($window: ng.IWindowService) {\n        return {\n            restrict: 'AE',\n            scope: {\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\n                afterLeave: '&pipUnsavedChangesAfterLeave',\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\n            },\n            link: function ($scope: UnsavedChangesScope) {\n                new UnsavedChangesLink($scope, $window);\n            }\n        };\n    }\n\n    angular\n        .module(\"pipUnsavedChanges\", [])\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\n}"]}