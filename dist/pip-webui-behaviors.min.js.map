{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/draggable/CancelDrag.ts","src/draggable/Drag.ts","src/draggable/DraggableService.ts","src/draggable/Drop.ts","src/draggable/PreventDrag.ts","src/draggable/index.ts","src/focused/focused.ts","src/index.ts","src/infinite_scroll/infiniteScroll.ts","src/selected/selected.ts","src/shortcuts/IShortcutsService.ts","src/shortcuts/Shortcut.ts","src/shortcuts/ShortcutBindingService.ts","src/shortcuts/ShortcutDirective.ts","src/shortcuts/ShortcutsService.ts","src/shortcuts/index.ts","src/unsaved_changes/unsavedChanges.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","CancelDragLink_1","$element","find","attr","CancelDrag","restrict","link","$scope","$attrs","angular","directive","DragLink_1","$rootScope","$parse","$document","$window","pipDraggable","LONG_PRESS","_centerAnchor","_hasTouch","DocumentTouch","_pressEvents","_moveEvents","_releaseEvents","_data","_dragOffset","_dragEnabled","_pressTimer","_elementStyle","scrollParent","scrollContainer","element","_deregisterRootMoveListener","noop","value","ngDrag","_myid","$id","onDragStartCallback","pipDragStart","onDragStopCallback","pipDragStop","onDragSuccessCallback","pipDragSuccess","allowTransform","isDefined","$eval","getDragData","pipDragData","verticalScroll","pipVerticalScroll","horizontalScroll","pipHorizontalScroll","activationDistance","parseFloat","pipActivationDistance","scrollDistance","scrollContainerGetter","pipScrollContainer","css","initialize","prototype","dragHandles","querySelectorAll","_dragHandle","toggleListeners","parent","enable","_this","$on","onDestroy","$watch","pipDrag","newVal","oldVal","onEnableChange","pipCenterAnchor","onCenterAnchor","on","event","onpress","nodeName","toLowerCase","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","setTimeout","onlongpress","left","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","inputEvent","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","origEvent","hasClass","addClass","$broadcast","x","y","tx","ty","data","$apply","$data","$event","dragToScroll","moveElement","uid","dragOffset","callback","onDragComplete","removeClass","reset","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","Drag","$inject","DraggableService","touches","originalEvent","DropLink_1","$timeout","pipDrop","isTouching","onDropCallback","pipDropSuccess","onDragMoveCallback","pipDragMove","obj","onDragStart","onDragMove","onDragEnd","_dropEnabled","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","Drop","5","PreventDragLink_1","absorbEvent_","stopPropagation","cancelBubble","returnValue","6","./Drag","./DraggableService","./Drop","./PreventDrag","7","FocusedLink_1","$mdConstant","opacityDelta","opacityLimit","keydownListener","init","ngModel","pipFocusedData","selector","pipWithHidden","controls","controlsLength","checkTabindex","currentTarget","$","log","pipRebind","pipFocusedOpacity","color","rgba","pipFocusedColor","arr","split","red","blue","green","opacity","setTabindex","index","_","findIndex","c","pipFocusedTabindex","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","filter","focus","pipFocusedRebind","__export","m","p","hasOwnProperty","./focused/focused","./infinite_scroll/infiniteScroll","./selected/selected","./shortcuts/index","./unsaved_changes/unsavedChanges","9","InfiniteScrollLink_1","$interval","THROTTLE_MILLISECONDS","checkWhenEnabled","immediateCheck","scrollEnabled","unregisterEventListener","useDocumentBottom","windowElement","onContainerScrollThrottle","throttle","onContainerScroll","unbind","v","handleScrollDistance","pipScrollDistance","handleScrollDisabled","pipScrollDisabled","handleScrollUseDocumentBottom","pipScrollUseDocumentBottom","pipScrollListenForEvent","newContainer","handleScrollContainer","pipScrollParent","changeContainer","pipScrolImmediateCheck","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","pipInfiniteScroll","bind","HTMLElement","append","parents","Array","isArray","InfiniteScroll","SelectedLink_1","touchBoundary","tapdelay","tapTimeout","indexGetter","pipSelected","indexSetter","assign","idGetter","pipSelectedId","idSetter","changeGetter","pipSelect","enterSpaceGetter","pipEnterSpacePress","noScroll","pipNoScroll","modifier","pipSkipHidden","className","pipTreeList","selectedIndex","currentElementTabinex","pipSelectedWatch","isScrolled","onClickEvent","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onKeyDown","onFocusIn","onFocusOut","newSelectedId","selectItem","itemId","raiseEvent","newSelectedIndex","itemIndex","items","itemParams","itemsLength","item","undefined","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedId","onSelect","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","getTargetElementFromEventTarget","eventTarget","nodeType","Node","TEXT_NODE","parentNode","touchHasMoved","touch","changedTouches","boundary","Math","abs","touchStartX","touchStartY","ev","targetElement","trackingClick","trackingClickStart","timeStamp","newTrackingClickStart","lastClickTime","cancelNextClick","ENTER","SPACE","inc","scope","Selected","11","ShortcutItem","ShortcutsConfig","globalShortcuts","localShortcuts","12","KeyboardEvent","Keydown","Keyup","Keypress","ShortcutOptions","Shortcut","shorcutCombination","option","shift_nums","`","2","3","4","8","0","-","=",";","'",",",".","/","\\","special_keys","esc","escape","tab","space","return","enter","backspace","scrolllock","scroll_lock","scroll","capslock","caps_lock","caps","numlock","num_lock","num","pause","break","insert","home","delete","end","pageup","page_up","pu","pagedown","page_down","pd","up","down","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","modifiers","shift","wanted","pressed","ctrl","alt","meta","shorcut","Type","DisableInInput","element_1","srcElement","tagName","character","String","fromCharCode","keys","kp","ctrlKey","shiftKey","altKey","metaKey","k","Keycode","Propagate","ShortcutBindingService","$log","_shortcuts","_log","_defaultOption","defaults","getDefaultOption","defaultOption","Shortcut_1","Target","Object","defineProperty","get","enumerable","configurable","add","shortcut","remove","shortcutOption","shortcutCombination","getElementById","error","newKeyboardShortcut","addEventListener","eventCallback","attachEvent","binding","detachEvent","removeEventListener","ShortcutBindingProvider","_option","set","$get","_service","14","ShortcutController","pipShortcutBinding","pipShortcutAction","actionShortcuts","pipShortcutName","isString","nameShortcuts","options","pipShorcutOptions","keypressShortcut","action","shortcutsDirective","ShortcutsChangedEvent","ShortcutsService","config","$location","$injector","_config","_oldConfig","cloneDeep","addShortcuts","sendChangeEvent","removeShortcuts","$emit","collection","access","isFunction","keypress","href","location","url","state","has","$state","stateParams","generalOptions","defaultOptions","each","targetId","ShortcutsProvider","IShortcutsService_1","provider","./IShortcutsService","16","./ShortcutBindingService","./ShortcutDirective","./ShortcutsService","17","onbeforeunload","unsavedChangesAvailable","unsavedChangesMessage","unbindFunc","confirm","cancelLeave","afterLeave"],"mappings":"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","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    class CancelDragLink {\r\n        constructor(\r\n            $element: JQuery\r\n        ) {\r\n            $element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n        }\r\n    }\r\n\r\n    const CancelDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new CancelDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipCancelDrag', CancelDrag);\r\n}","import { IDraggableService } from './DraggableService';\r\n\r\n{\r\n    interface IDragLinkScope extends ng.IScope {\r\n        value: any;\r\n    }\r\n\r\n    interface IDragLinkAttributes extends ng.IAttributes {\r\n        ngDrag: any;\r\n        pipDragStart: any;\r\n        pipDragStop: any;\r\n        pipDragSuccess: any;\r\n        allowTransform: any;\r\n        pipDragData: any;\r\n        pipVerticalScroll: any;\r\n        pipHorizontalScroll: any;\r\n        pipActivationDistance: any;\r\n        pipScrollContainer: any;\r\n        pipDrag: any;\r\n        pipCenterAnchor: any;\r\n    }\r\n\r\n    class DragLink {\r\n        private LONG_PRESS: number = 50; // 50ms for longpress\r\n        private offset: any;\r\n        private _centerAnchor: boolean = false;\r\n        private _mx: number;\r\n        private _my: number;\r\n        private _tx: number;\r\n        private _ty: number;\r\n        private _mrx: number;\r\n        private _mry: number;\r\n        private _hasTouch: boolean = ('ontouchstart' in window) || ( < any > window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n        private _pressEvents: string = 'touchstart mousedown';\r\n        private _moveEvents: string = 'touchmove mousemove';\r\n        private _releaseEvents: string = 'touchend mouseup';\r\n        private _dragHandle: any;\r\n\r\n        // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n        private _myid: string | number;\r\n        private _data: any = null;\r\n\r\n        private _dragOffset: any = null;\r\n\r\n        private _dragEnabled: boolean = false;\r\n\r\n        private _pressTimer: any = null;\r\n\r\n        private _elementStyle: any = {};\r\n\r\n        private onDragStartCallback: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragSuccessCallback: Function;\r\n        private allowTransform: boolean;\r\n\r\n        private getDragData: any;\r\n        private verticalScroll: boolean;\r\n        private horizontalScroll: boolean;\r\n        private activationDistance: number;\r\n        private scrollDistance: number;\r\n        private scrollParent: boolean = false;\r\n\r\n        private scrollContainer: JQuery = angular.element(window);\r\n        private scrollContainerGetter: any;\r\n\r\n        // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n        private _deregisterRootMoveListener: Function = angular.noop;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $window: ng.IWindowService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDragLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDragLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.ngDrag;\r\n            this._myid = $scope.$id;\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart) || null;\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop) || null;\r\n            this.onDragSuccessCallback = $parse($attrs.pipDragSuccess) || null;\r\n            this.allowTransform = angular.isDefined($attrs.allowTransform) ? $scope.$eval($attrs.allowTransform) : false;\r\n\r\n            this.getDragData = $parse($attrs.pipDragData);\r\n            this.verticalScroll = $attrs.pipVerticalScroll || true;\r\n            this.horizontalScroll = $attrs.pipHorizontalScroll || true;\r\n            this.activationDistance = parseFloat($attrs.pipActivationDistance) || 75;\r\n            this.scrollDistance = parseFloat($attrs.pipActivationDistance) || 50;\r\n            this.scrollContainerGetter = $parse($attrs.pipScrollContainer);\r\n\r\n            this.$element.css('cursor', 'move');\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false'); // prevent native drag\r\n            // check to see if drag handle(s) was specified\r\n            // if querySelectorAll is available, we use this instead of find\r\n            // as JQLite find is limited to tagnames\r\n            let dragHandles: any;\r\n            if (this.$element[0].querySelectorAll) {\r\n                dragHandles = angular.element(this.$element[0].querySelectorAll('[pip-drag-handle]'));\r\n            } else {\r\n                dragHandles = this.$element.find('[pip-drag-handle]');\r\n            }\r\n            if (dragHandles.length) {\r\n                this._dragHandle = dragHandles;\r\n            }\r\n            this.toggleListeners(true);\r\n\r\n            // Initialize scroll container\r\n            if (this.scrollParent) {\r\n                this.scrollContainer = angular.element(this.$element.parent());\r\n            } else if (this.$attrs.pipScrollContainer) {\r\n                this.scrollContainer = angular.element(this.scrollContainerGetter(this.$scope));\r\n            } else {\r\n                this.scrollContainer = angular.element(window);\r\n            }\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            if (!enable) return;\r\n            // add listeners.\r\n\r\n            this.$scope.$on('$destroy', () => {\r\n                this.onDestroy(enable);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipDrag, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipCenterAnchor, (newVal, oldVal) => {\r\n                this.onCenterAnchor(newVal, oldVal);\r\n            });\r\n            // wire up touch events\r\n            if (this._dragHandle) {\r\n                // handle(s) specified, use those to initiate drag\r\n                this._dragHandle.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            } else {\r\n                // no handle(s) specified, use the element as the handle\r\n                this.$element.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            }\r\n            if (!this._hasTouch && this.$element[0].nodeName.toLowerCase() == \"img\") {\r\n                this.$element.on('mousedown', () => {\r\n                    return false;\r\n                }); // prevent native drag for images\r\n            }\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dragEnabled = (newVal);\r\n        }\r\n\r\n        private onCenterAnchor(newVal, oldVal) {\r\n            if (angular.isDefined(newVal))\r\n                this._centerAnchor = (newVal || 'true');\r\n        }\r\n\r\n        private isClickableElement(evt) {\r\n            return (\r\n                angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n            );\r\n        }\r\n\r\n        /*\r\n         * When the element is clicked start the drag behaviour\r\n         * On touch devices as a small delay so as not to prevent native window scrolling\r\n         */\r\n        private onpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n\r\n            if (this.isClickableElement(evt)) {\r\n                return;\r\n            }\r\n\r\n            if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                // Do not start dragging on right-click\r\n                return;\r\n            }\r\n\r\n            this.saveElementStyles();\r\n\r\n            if (this._hasTouch) {\r\n                this.cancelPress();\r\n                this._pressTimer = setTimeout(() => {\r\n                    this.cancelPress();\r\n                    this.onlongpress(evt);\r\n                }, this.LONG_PRESS);\r\n                this.$document.on(this._moveEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n                this.$document.on(this._releaseEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n            } else {\r\n                this.onlongpress(evt);\r\n            }\r\n        }\r\n\r\n        private saveElementStyles() {\r\n            this._elementStyle.left = this.$element.css('css') || 0;\r\n            this._elementStyle.top = this.$element.css('top') || 0;\r\n            this._elementStyle.position = this.$element.css('position');\r\n            this._elementStyle.width = this.$element.css('width');\r\n        }\r\n\r\n        private cancelPress() {\r\n            clearTimeout(this._pressTimer);\r\n            this.$document.off(this._moveEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n            this.$document.off(this._releaseEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n        }\r\n\r\n        private onlongpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n\r\n            this.offset = this.$element[0].getBoundingClientRect();\r\n            if (this.allowTransform)\r\n                this._dragOffset = this.offset;\r\n            else {\r\n                this._dragOffset = {\r\n                    left: document.body.scrollLeft,\r\n                    top: document.body.scrollTop\r\n                };\r\n            }\r\n\r\n\r\n            ( < any > this.$element).centerX = this.$element[0].offsetWidth / 2;\r\n            ( < any > this.$element).centerY = this.$element[0].offsetHeight / 2;\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n            this._mrx = this._mx - this.offset.left;\r\n            this._mry = this._my - this.offset.top;\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this.$window.pageXOffset;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this.$window.pageYOffset;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this.$window.pageXOffset;\r\n                this._ty = this._my - this._mry - this.$window.pageYOffset;\r\n            }\r\n\r\n            this.$document.on(this._moveEvents, (event) => {\r\n                this.onmove(event);\r\n            });\r\n            this.$document.on(this._releaseEvents, (event) => {\r\n                this.onrelease(event);\r\n            });\r\n            // This event is used to receive manually triggered mouse move events\r\n            // jqLite unfortunately only supports triggerHandler(...)\r\n            // See http://api.jquery.com/triggerHandler/\r\n            // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n            this._deregisterRootMoveListener = this.$rootScope.$on('draggable:_triggerHandlerMove', (event, origEvent) => {\r\n                this.onmove(origEvent);\r\n            });\r\n        }\r\n\r\n        private onmove(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n            if (!this.$element.hasClass('pip-dragging')) {\r\n                this._data = this.getDragData(this.$scope);\r\n                this.$element.addClass('pip-dragging');\r\n                this.$rootScope.$broadcast('draggable:start', {\r\n                    x: this._mx,\r\n                    y: this._my,\r\n                    tx: this._tx,\r\n                    ty: this._ty,\r\n                    event: evt,\r\n                    element: this.$element,\r\n                    data: this._data\r\n                });\r\n\r\n                if (this.onDragStartCallback) {\r\n                    this.$scope.$apply(() => {\r\n                        this.onDragStartCallback(this.$scope, {\r\n                            $data: this._data,\r\n                            $event: evt\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n\r\n            if (this.horizontalScroll || this.verticalScroll) {\r\n                this.dragToScroll();\r\n            }\r\n\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this._dragOffset.left;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this._dragOffset.top;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this._dragOffset.left;\r\n                this._ty = this._my - this._mry - this._dragOffset.top;\r\n            }\r\n\r\n            this.moveElement(this._tx, this._ty);\r\n\r\n            this.$rootScope.$broadcast('draggable:move', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                uid: this._myid,\r\n                dragOffset: this._dragOffset\r\n            });\r\n        }\r\n\r\n        private onrelease(evt) {\r\n            if (!this._dragEnabled)\r\n                return;\r\n            evt.preventDefault();\r\n            this.$rootScope.$broadcast('draggable:end', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                callback: this.onDragComplete,\r\n                uid: this._myid\r\n            });\r\n            this.$element.removeClass('pip-dragging');\r\n            this.$element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n            this.reset();\r\n            this.$document.off(this._moveEvents);\r\n            this.$document.off(this._releaseEvents);\r\n            if (this.onDragStopCallback) {\r\n                this.$scope.$apply(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: this._data,\r\n                        $event: evt\r\n                    });\r\n                });\r\n            }\r\n\r\n            this._deregisterRootMoveListener();\r\n        }\r\n\r\n        private onDragComplete(evt) {\r\n            if (!this.onDragSuccessCallback) return;\r\n\r\n            this.$scope.$apply(() => {\r\n                this.onDragSuccessCallback(this.$scope, {\r\n                    $data: this._data,\r\n                    $event: evt\r\n                });\r\n            });\r\n        }\r\n\r\n        private reset() {\r\n            if (this.allowTransform)\r\n                this.$element.css({\r\n                    transform: '',\r\n                    'z-index': '',\r\n                    '-webkit-transform': '',\r\n                    '-ms-transform': ''\r\n                });\r\n            else {\r\n                this.$element.css({\r\n                    position: this._elementStyle.position,\r\n                    top: this._elementStyle.top,\r\n                    left: this._elementStyle.left,\r\n                    'z-index': '',\r\n                    width: this._elementStyle.width\r\n                });\r\n            }\r\n        }\r\n\r\n        private moveElement(x, y) {\r\n            const eWidth = this.$element.css('width');\r\n            if (this.allowTransform) {\r\n                this.$element.css({\r\n                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    'z-index': 99999,\r\n                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                });\r\n            } else {\r\n                this.$element.css({\r\n                    'left': x + 'px',\r\n                    'top': y + 'px',\r\n                    'position': 'fixed',\r\n                    'z-index': 100,\r\n                    width: eWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        private dragToScroll() {\r\n            let scrollX = 0,\r\n                scrollY = 0,\r\n                offset = (element) => {\r\n                    return element.offset() || {\r\n                        left: 0,\r\n                        top: 0\r\n                    };\r\n                };\r\n\r\n            if (this.horizontalScroll) {\r\n                const\r\n                    containerLeft = offset(this.scrollContainer).left,\r\n                    containerWidth = this.scrollContainer.innerWidth(),\r\n                    containerRight = containerLeft + containerWidth;\r\n\r\n                if ((this._mx - containerLeft) < this.activationDistance) {\r\n                    scrollX = -this.scrollDistance;\r\n                } else if ((containerRight - this._mx) < this.activationDistance) {\r\n                    scrollX = this.scrollDistance;\r\n                }\r\n            }\r\n\r\n            if (this.verticalScroll) {\r\n                const\r\n                    containerTop = offset(this.scrollContainer).top,\r\n                    containerHeight = this.scrollContainer.innerHeight(),\r\n                    containerBottom = containerTop + containerHeight;\r\n\r\n                if ((this._my - containerTop) < this.activationDistance) {\r\n                    scrollY = -this.scrollDistance + 30;\r\n                } else if ((containerBottom - this._my) < this.activationDistance) {\r\n                    scrollY = this.scrollDistance - 30;\r\n                }\r\n            }\r\n            if (scrollX !== 0 || scrollY !== 0) {\r\n                const\r\n                    containerScrollLeft = this.scrollContainer.scrollLeft(),\r\n                    containerScrollTop = this.scrollContainer.scrollTop();\r\n\r\n                this.scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                this.scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const Drag = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $window: ng.IWindowService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDragLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDragLinkAttributes\r\n            ) {\r\n                new DragLink($rootScope, $parse, $document, $window, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrag', Drag);\r\n}","export interface IDraggableService {\r\n    inputEvent(event: any);\r\n}\r\n\r\nclass DraggableService implements IDraggableService {\r\n    public inputEvent(event) {\r\n        if (angular.isDefined(event.touches)) {\r\n            return event.touches[0];\r\n        }\r\n        //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n        else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n            return event.originalEvent.touches[0];\r\n        }\r\n        return event;\r\n    };\r\n}\r\n\r\nangular\r\n    .module(\"pipDraggable\")\r\n    .service('pipDraggable', DraggableService);\r\n    ","import { IDraggableService } from './DraggableService';\r\n\r\n{\r\n    interface IDropLinkScope extends ng.IScope {\r\n        value: any;\r\n        isTouching: any;\r\n    }\r\n\r\n    interface IDropLinkAttributes extends ng.IAttributes {\r\n        pipDrop: any;\r\n        pipDropSuccess: any;\r\n        pipDragStart: any;\r\n        pipDragStop: any;\r\n        pipDragMove: any;\r\n    }\r\n\r\n    class DropLink {\r\n\r\n        private _lastDropTouch: any;\r\n        private _myid: number | string;\r\n        private _dropEnabled: boolean;\r\n\r\n        private onDropCallback: Function; // || function(){};\r\n        private onDragStartCallback: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragMoveCallback: Function;\r\n\r\n        constructor(\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDropLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDropLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.pipDrop;\r\n            $scope.isTouching = false;\r\n\r\n            this._myid = $scope.$id;\r\n            this.onDropCallback = $parse($attrs.pipDropSuccess); // || function(){};\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart);\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop);\r\n            this.onDragMoveCallback = $parse($attrs.pipDragMove);\r\n\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$scope.$watch(this.$attrs.pipDrop, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$on('$destroy', (event) => {\r\n                this.onDestroy(event);\r\n            });\r\n            this.$scope.$on('draggable:start', (evt, obj) => {\r\n                this.onDragStart(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:move', (evt, obj) => {\r\n                this.onDragMove(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:end', (evt, obj) => {\r\n                this.onDragEnd(evt, obj);\r\n            });\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dropEnabled = newVal;\r\n        }\r\n\r\n        private onDragStart(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element);\r\n\r\n            if (this.$attrs.pipDragStart) {\r\n                this.$timeout(() => {\r\n                    this.onDragStartCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragMove(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element);\r\n\r\n            if (this.$attrs.pipDragMove) {\r\n                this.$timeout(() => {\r\n                    this.onDragMoveCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragEnd(evt, obj) {\r\n            // don't listen to drop events if this is the element being dragged\r\n            // only update the styles and return\r\n            if (!this._dropEnabled || this._myid === obj.uid) {\r\n                this.updateDragStyles(false, obj.element);\r\n                return;\r\n            }\r\n\r\n            if (this.isTouching(obj.x, obj.y, obj.element)) {\r\n                // call the pipDraggable pipDragSuccess element callback\r\n                if (obj.callback) {\r\n                    obj.callback(obj);\r\n                }\r\n\r\n                if (this.$attrs.pipDropSuccess) {\r\n                    this.$timeout(() => {\r\n                        this.onDropCallback(this.$scope, {\r\n                            $data: obj.data,\r\n                            $event: obj,\r\n                            $target: this.$scope.$eval(this.$scope.value)\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.$attrs.pipDragStop) {\r\n                this.$timeout(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.updateDragStyles(false, obj.element);\r\n        }\r\n\r\n        private isTouching(mouseX, mouseY, dragElement) {\r\n            const touching = this.hitTest(mouseX, mouseY);\r\n            this.$scope.isTouching = touching;\r\n            if (touching) {\r\n                this._lastDropTouch = this.$element;\r\n            }\r\n            this.updateDragStyles(touching, dragElement);\r\n            return touching;\r\n        }\r\n\r\n        private updateDragStyles(touching, dragElement) {\r\n            if (touching) {\r\n                this.$element.addClass('pip-drag-enter');\r\n                dragElement.addClass('pip-drag-over');\r\n            } else if (this._lastDropTouch == this.$element) {\r\n                this._lastDropTouch = null;\r\n                this.$element.removeClass('pip-drag-enter');\r\n                dragElement.removeClass('pip-drag-over');\r\n            }\r\n        };\r\n\r\n        private hitTest(x, y) {\r\n            const bounds = this.$element[0].getBoundingClientRect();\r\n            x -= this.$document[0].body.scrollLeft + this.$document[0].documentElement.scrollLeft;\r\n            y -= this.$document[0].body.scrollTop + this.$document[0].documentElement.scrollTop;\r\n            return x >= bounds.left &&\r\n                x <= bounds.right &&\r\n                y <= bounds.bottom &&\r\n                y >= bounds.top;\r\n        }\r\n    }\r\n\r\n    const Drop = function (\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDropLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDropLinkAttributes\r\n            ) {\r\n                new DropLink($parse, $document, $timeout, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrop', Drop);\r\n}","{\r\n\r\n    class PreventDragLink {\r\n        constructor(\r\n            private $element: JQuery\r\n        ) {\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false');\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$element.on('mousedown touchstart touchmove touchend touchcancel', (event) => { this.absorbEvent_(event); });\r\n        }\r\n\r\n        private absorbEvent_(event) {\r\n            const e = event.originalEvent;\r\n            e.preventDefault && e.preventDefault();\r\n            e.stopPropagation && e.stopPropagation();\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    const PreventDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new PreventDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipPreventDrag', PreventDrag);\r\n}","angular.module(\"pipDraggable\", []);\r\n\r\nimport './DraggableService';\r\nimport './Drag';\r\nimport './Drop';\r\nimport './PreventDrag';\r\nimport './CancelDrag';\r\n","{\r\n    interface FocusedScope extends ng.IScope {\r\n        pipFocusedColor: Function;\r\n        pipFocusedRebind: Function;\r\n        pipFocusedTabindex: Function;\r\n        pipFocusedOpacity: Function;\r\n        pipFocusedData: Function;\r\n        pipWithHidden: Function;\r\n        pipRebind: Function;\r\n    }\r\n\r\n    interface FocusedAttributes extends ng.IAttributes {\r\n        ngModel: any;\r\n        pipFocusedData: any;\r\n    }\r\n\r\n    class FocusedLink implements ng.IDirective {\r\n        private controls: JQuery;\r\n        private controlsLength: number;\r\n        private color: string;\r\n        private opacityDelta: number = 0.4;\r\n        private opacityLimit: number = 0.5;\r\n\r\n        constructor(\r\n            private $scope: FocusedScope,\r\n            private $element: JQuery,\r\n            $attrs: FocusedAttributes,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $mdConstant: any,\r\n            private $window: ng.IWindowService\r\n        ) {\r\n\r\n            $element.on('keydown', (e) => {\r\n                this.keydownListener(e);\r\n            });\r\n\r\n            $timeout(() => {\r\n                this.init();\r\n            });\r\n\r\n            if ($attrs.ngModel) {\r\n                $scope.$watch('ngModel', function () {\r\n                    $timeout(this.init);\r\n                }, true);\r\n            }\r\n\r\n            if ($attrs.pipFocusedData) {\r\n                $scope.$watch('pipFocusedData', function () {\r\n                    $timeout(this.init);\r\n                }, true);\r\n            }\r\n        }\r\n\r\n        private init() {\r\n            const selector = this.$scope.pipWithHidden && this.$scope.pipWithHidden() ? '.pip-focusable' : '.pip-focusable:visible';\r\n            this.controls = this.$element.find(selector);\r\n            this.controlsLength = this.controls.length;\r\n            this.checkTabindex(this.controls);\r\n            // Add event listeners\r\n            this.controls.on('focus', (event) => {\r\n                const target = event.currentTarget;\r\n                if ($(target).hasClass('md-focused')) {\r\n                    return;\r\n                }\r\n                console.log('here');\r\n                if (this.$scope.pipRebind && this.$scope.pipRebind()) {\r\n                    this.init();\r\n                }\r\n                this.$element.addClass('pip-focused-container');\r\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\r\n\r\n                    this.color = $(target).css('backgroundColor');\r\n                    $(target).css('backgroundColor', this.rgba(this.color));\r\n                    $(target).addClass('md-focused');\r\n                } else {\r\n                    $(target).addClass('md-focused md-focused-opacity');\r\n                }\r\n\r\n            }).on('focusout', (event) => {\r\n                const target = event.currentTarget;\r\n                if (!$(target).hasClass('md-focused')) {\r\n                    return;\r\n                }\r\n                this.$element.removeClass('pip-focused-container');\r\n\r\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\r\n                    // $(this).css('backgroundColor', _color);\r\n                    $(target).css('backgroundColor', \"\");\r\n                    $(target).removeClass('md-focused md-focused-opacity');\r\n                } else {\r\n                    $(target).removeClass('md-focused');\r\n                }\r\n            });\r\n        }\r\n\r\n        private rgba(color) {\r\n            if (this.$scope.pipFocusedColor && this.$scope.pipFocusedColor()) {\r\n                return this.$scope.pipFocusedColor();\r\n            }\r\n\r\n            const arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\r\n            if (!arr || arr.length < 3) {\r\n                return ''\r\n            }\r\n\r\n            let red, blue, green, opacity;\r\n\r\n            opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\r\n            red = arr[0];\r\n            blue = arr[1];\r\n            green = arr[2];\r\n\r\n            if (opacity < this.opacityLimit) {\r\n                opacity += this.opacityDelta;\r\n            } else {\r\n                opacity -= this.opacityDelta;\r\n            }\r\n\r\n            return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\r\n        }\r\n\r\n        private setTabindex(element, value) {\r\n            element.attr('tabindex', value);\r\n        }\r\n\r\n        private checkTabindex(controls) {\r\n            const index = _.findIndex(controls, (c) => {\r\n                return c['tabindex'] > -1;\r\n            });\r\n\r\n            if (index == -1 && controls.length > 0 && this.$scope.pipFocusedTabindex) {\r\n                this.setTabindex(angular.element(controls[0]), this.$scope.pipFocusedTabindex());\r\n            }\r\n        }\r\n\r\n        private keydownListener(e) {\r\n            const keyCode = e.which || e.keyCode;\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                e.preventDefault();\r\n\r\n                const\r\n                    increment = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    moveToControl = this.controls.index(this.controls.filter(\".md-focused\")) + increment;\r\n                // Move focus to next control\r\n                if (moveToControl >= 0 && moveToControl < this.controlsLength) {\r\n                    this.controls[moveToControl].focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const Focused = function ($timeout: ng.ITimeoutService, \r\n        $mdConstant: any, \r\n        $window: ng.IWindowService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipFocusedColor: '&?',\r\n                pipFocusedRebind: '&?',\r\n                pipFocusedTabindex: '&?',\r\n                pipFocusedOpacity: '&?',\r\n                pipFocusedData: '&?',\r\n                pipWithHidden: '&?',\r\n                pipRebind: '&?'\r\n            },\r\n            link: function($scope: FocusedScope, $element: JQuery, $attrs: FocusedAttributes) {\r\n                new FocusedLink($scope, $element, $attrs, $timeout, $mdConstant, $window);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipFocused\", [])\r\n        .directive('pipFocused', Focused);\r\n}","﻿import './unsaved_changes/unsavedChanges';\r\nimport './shortcuts/index';\r\nimport './focused/focused';\r\nimport './draggable/index';\r\nimport './selected/selected';\r\nimport './infinite_scroll/infiniteScroll';\r\n\r\nangular.module('pipBehaviors', [\r\n    'pipFocused',\r\n    'pipSelected',\r\n    'pipInfiniteScroll',\r\n    'pipUnsavedChanges',\r\n    'pipDraggable',\r\n    'pipShortcuts'\r\n]);\r\n\r\nexport * from './shortcuts/index';\r\n","{\r\n    interface InfiniteScrollScope extends ng.IScope {\r\n        pipInfiniteScroll: Function;\r\n        pipScrollContainer: JQuery;\r\n        pipScrollDistance: number | string;\r\n        pipScrollDisabled: boolean;\r\n        pipScrollUseDocumentBottom: boolean;\r\n        pipScrollListenForEvent: string;\r\n    }\r\n\r\n    interface InfiniteScrollAttributes extends ng.IAttributes {\r\n        pipScrollParent: any;\r\n        pipScrolImmediateCheck: any;\r\n    }\r\n\r\n    class InfiniteScrollLink {\r\n        private THROTTLE_MILLISECONDS: number = 500;\r\n        private checkWhenEnabled = null;\r\n        private scrollContainer = null;\r\n        private immediateCheck = true;\r\n        private scrollDistance = null;\r\n        private scrollEnabled = null;\r\n        private unregisterEventListener = null;\r\n        private useDocumentBottom = false;\r\n        private windowElement = null;\r\n        private onContainerScrollThrottle: Function;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $window: ng.IWindowService,\r\n            private $interval: ng.IIntervalService,\r\n            private $scope: InfiniteScrollScope,\r\n            private $element: JQuery,\r\n            private $attrs: InfiniteScrollAttributes\r\n        ) {\r\n            this.windowElement = angular.element($window);\r\n\r\n            this.onContainerScrollThrottle = _.throttle(() => {\r\n                this.onContainerScroll();\r\n            }, this.THROTTLE_MILLISECONDS);\r\n\r\n            $scope.$on('$destroy', () => {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n                if (this.unregisterEventListener !== null) {\r\n                    this.unregisterEventListener();\r\n                    return this.unregisterEventListener = null;\r\n                }\r\n            });\r\n\r\n            $scope.$watch('pipScrollDistance', (v) => {\r\n                this.handleScrollDistance(v);\r\n            });\r\n            this.handleScrollDistance($scope.pipScrollDistance);\r\n\r\n            $scope.$watch('pipScrollDisabled', (v) => {\r\n                this.handleScrollDisabled(v);\r\n            });\r\n            this.handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n            $scope.$watch('pipScrollUseDocumentBottom', (v) => {\r\n                this.handleScrollUseDocumentBottom(v);\r\n            });\r\n            this.handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n            this.changeContainer(this.windowElement);\r\n            if ($scope.pipScrollListenForEvent) {\r\n                this.unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            $scope.$watch('pipScrollContainer', (newContainer) => {\r\n                if (newContainer != this.scrollContainer)\r\n                    this.handleScrollContainer(newContainer);\r\n            });\r\n            this.handleScrollContainer($scope.pipScrollContainer || []);\r\n\r\n            if ($attrs.pipScrollParent !== null) {\r\n                this.changeContainer(angular.element($element.parent()));\r\n            }\r\n            if ($attrs.pipScrolImmediateCheck !== null) {\r\n                this.immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n            }\r\n\r\n            $interval((function () {\r\n                if (this.immediateCheck) {\r\n                    return this.onContainerScrollThrottle();\r\n                }\r\n            }), 0, 1);\r\n        }\r\n\r\n        private height(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(element.offsetHeight)) {\r\n                return element.document.documentElement.clientHeight;\r\n            } else {\r\n                return element.offsetHeight;\r\n            }\r\n        }\r\n\r\n        private offsetTop(element) {\r\n            if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                return;\r\n            }\r\n            return element[0].getBoundingClientRect().top + this.pageYOffset(element);\r\n        }\r\n\r\n        private pageYOffset(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(window.pageYOffset)) {\r\n                return element.document.documentElement.scrollTop;\r\n            } else {\r\n                return element.ownerDocument.defaultView.pageYOffset;\r\n            }\r\n        }\r\n\r\n        private onContainerScroll() {\r\n            let containerBottom,\r\n                containerTopOffset,\r\n                elementBottom,\r\n                remaining,\r\n                shouldScroll;\r\n\r\n            if (this.scrollContainer === this.windowElement) {\r\n                containerBottom = this.height(this.scrollContainer) + this.pageYOffset(this.scrollContainer[0].document.documentElement);\r\n                elementBottom = this.offsetTop(this.$element) + this.height(this.$element);\r\n            } else {\r\n                containerBottom = this.height(this.scrollContainer);\r\n                containerTopOffset = 0;\r\n                if (this.offsetTop(this.scrollContainer) !== void 0) {\r\n                    containerTopOffset = this.offsetTop(this.scrollContainer);\r\n                }\r\n                elementBottom = this.offsetTop(this.$element) - containerTopOffset + this.height(this.$element);\r\n            }\r\n\r\n            if (this.useDocumentBottom) {\r\n                elementBottom = this.height((this.$element[0].ownerDocument || ( < any > this.$element[0]).document).documentElement);\r\n            }\r\n\r\n            remaining = elementBottom - containerBottom;\r\n            shouldScroll = remaining <= this.height(this.scrollContainer) * this.scrollDistance + 1;\r\n\r\n            if (shouldScroll) {\r\n                this.checkWhenEnabled = true;\r\n                if (this.scrollEnabled) {\r\n                    if (this.$scope.$$phase || this.$rootScope.$$phase) {\r\n                        return this.$scope.pipInfiniteScroll();\r\n                    } else {\r\n                        return this.$scope.$apply(() => {\r\n                            this.$scope.pipInfiniteScroll();\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                return this.checkWhenEnabled = false;\r\n            }\r\n        }\r\n\r\n        private handleScrollDistance(v) {\r\n            return this.scrollDistance = parseFloat(v) || 0;\r\n        }\r\n\r\n        private handleScrollDisabled(v) {\r\n            this.scrollEnabled = !v;\r\n            if (this.scrollEnabled && this.checkWhenEnabled) {\r\n                this.checkWhenEnabled = false;\r\n                this.onContainerScrollThrottle();\r\n            }\r\n        }\r\n\r\n        private handleScrollUseDocumentBottom(v) {\r\n            return this.useDocumentBottom = v;\r\n        }\r\n\r\n        private changeContainer(newContainer) {\r\n            if (this.scrollContainer) {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            this.scrollContainer = newContainer;\r\n            if (newContainer) {\r\n                return this.scrollContainer.bind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n        }\r\n\r\n        private handleScrollContainer(newContainer) {\r\n            if ((newContainer == null) || newContainer.length === 0) {\r\n                return;\r\n            }\r\n            if (newContainer instanceof HTMLElement) {\r\n                newContainer = angular.element(newContainer);\r\n            } else if (typeof newContainer.append === 'function') {\r\n                newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n            } else if (typeof newContainer === 'string') {\r\n                newContainer = this.$element.parents().find(newContainer);\r\n            }\r\n\r\n            if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                    (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                return this.changeContainer(newContainer);\r\n            } else {\r\n                throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const InfiniteScroll = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $interval: ng.IIntervalService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipInfiniteScroll: '&',\r\n                pipScrollContainer: '=',\r\n                pipScrollDistance: '=',\r\n                pipScrollDisabled: '=',\r\n                pipScrollUseDocumentBottom: '=',\r\n                pipScrollListenForEvent: '@'\r\n            },\r\n            link: function (\r\n                $scope: InfiniteScrollScope,\r\n                $element: JQuery,\r\n                $attrs: InfiniteScrollAttributes\r\n            ) {\r\n                new InfiniteScrollLink($rootScope, $window, $interval, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipInfiniteScroll\", [])\r\n        .directive('pipInfiniteScroll', InfiniteScroll);\r\n}","{\r\n    interface SelectedAttributes extends ng.IAttributes {\r\n        pipSelected: any;\r\n        pipSelectedId: any;\r\n        pipSelect: any;\r\n        pipEnterSpacePress: any;\r\n        pipNoScroll: any;\r\n        pipSkipHidden: any;\r\n        pipTreeList: any;\r\n        pipSelectedWatch: any;\r\n    }\r\n\r\n    class SelectedLink {\r\n        private indexGetter: any;\r\n        private indexSetter: any;\r\n        private idSetter: any;\r\n        private idGetter: any;\r\n        private changeGetter: any;\r\n        private enterSpaceGetter: any;\r\n        private noScroll: any;\r\n        private modifier: any;\r\n        private className: any;\r\n        private selectedIndex: any;\r\n        private currentElementTabinex: any;\r\n        private pipSelectedWatch: any;\r\n        private isScrolled: any;\r\n        // Variables for touch functions\r\n        private touchStartX: any;\r\n        private touchStartY: any;\r\n        private trackingClick: any;\r\n        private trackingClickStart: any;\r\n        private targetElement: any;\r\n        private lastClickTime: any;\r\n        private cancelNextClick: any;\r\n        // Constants for touch functions\r\n        private touchBoundary: number = 10;\r\n        private tapdelay: number = 200;\r\n        private tapTimeout: number = 700;\r\n\r\n        constructor(\r\n            $parse: ng.IParseService,\r\n            private $mdConstant: any,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $scope: ng.IScope,\r\n            private $element: JQuery,\r\n            private $attrs: SelectedAttributes\r\n        ) {\r\n            this.indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null;\r\n            this.indexSetter = this.indexGetter ? this.indexGetter.assign : null;\r\n            this.idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null;\r\n            this.idSetter = this.idGetter ? this.idGetter.assign : null;\r\n            this.changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null;\r\n            this.enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null;\r\n            this.noScroll = $attrs.pipNoScroll;\r\n            this.modifier = $attrs.pipSkipHidden ? ':visible' : '';\r\n            this.className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable';\r\n            this.selectedIndex = this.indexGetter($scope);\r\n            this.currentElementTabinex = $element.attr('tabindex');\r\n            this.pipSelectedWatch = $attrs.pipSelectedWatch;\r\n            this.isScrolled = false;\r\n\r\n            $element.attr('tabindex', this.currentElementTabinex || 0);\r\n\r\n            $element.on('click', this.className, (event) => {\r\n                this.onClickEvent(event);\r\n            });\r\n            $element.on('touchstart', this.className, (event) => {\r\n                this.onTouchStart(event);\r\n            });\r\n            $element.on('touchmove', this.className, (event) => {\r\n                this.onTouchMove(event);\r\n            });\r\n            $element.on('touchend', this.className, (event) => {\r\n                this.onTouchEnd(event);\r\n            });\r\n            $element.on('touchcancel', this.className, (event) => {\r\n                this.onTouchCancel(event);\r\n            });\r\n            $element.on('keydown', (event) => {\r\n                this.onKeyDown(event);\r\n            });\r\n            $element.on('focusin', (event) => {\r\n                this.onFocusIn(event);\r\n            });\r\n            $element.on('focusout', (event) => {\r\n                this.onFocusOut(event);\r\n            });\r\n\r\n            // Watch selected item index\r\n            if (!$attrs.pipTreeList) {\r\n                $scope.$watch(this.indexGetter, (newSelectedIndex) => {\r\n                    this.selectItem({\r\n                        itemIndex: newSelectedIndex\r\n                    });\r\n                });\r\n            } else {\r\n                $scope.$watch(this.idGetter, (newSelectedId) => {\r\n                    $timeout(() => {\r\n                        this.selectItem({\r\n                            itemId: newSelectedId,\r\n                            raiseEvent: true\r\n                        });\r\n                    }, 0);\r\n                });\r\n            }\r\n\r\n            // Watch resync selection\r\n            if (this.pipSelectedWatch) {\r\n                $scope.$watch(this.pipSelectedWatch, () => {\r\n                    // Delay update to allow ng-repeat to update DOM\r\n                    $timeout(() => {\r\n                        this.selectedIndex = this.indexGetter($scope);\r\n                        this.selectItem({\r\n                            itemIndex: this.selectedIndex\r\n                        });\r\n                    }, 100);\r\n                });\r\n            }\r\n\r\n            // Select item defined by index\r\n            this.selectItem({\r\n                itemIndex: this.selectedIndex,\r\n                items: $element.find(this.className)\r\n            });\r\n        }\r\n\r\n        private selectItem(itemParams) {\r\n            if (this.isScrolled) return;\r\n            let itemIndex = itemParams.itemIndex,\r\n                itemId = itemParams.itemId,\r\n                items = itemParams.items || this.$element.find(this.className + this.modifier),\r\n                itemsLength = items.length,\r\n                item = () => {\r\n                    if (itemParams.item) return itemParams.item;\r\n                    if (itemIndex === undefined && itemIndex === -1) {\r\n                        itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                    }\r\n                    if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                        return items[itemIndex]\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                raiseEvent = itemParams.raiseEvent;\r\n                item = item();\r\n            if (item) {\r\n                this.$element.find(this.className).removeClass('selected md-focused');\r\n                item = <any>angular.element(item)\r\n                    .addClass('selected md-focused')\r\n                    .focus();\r\n                if (!this.noScroll) this.scrollToItem(item);\r\n                if (raiseEvent) this.defineSelectedIndex(items);\r\n            }\r\n        };\r\n\r\n        private defineSelectedIndex(items) {\r\n            const oldSelectedIndex = this.selectedIndex;\r\n            this.selectedIndex = -1;\r\n            for (var index = 0; index < items.length; index++) {\r\n                if ($(items[index]).hasClass('selected')) {\r\n                    this.selectedIndex = index;\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Execute callback to notify about item select\r\n            if (oldSelectedIndex != this.selectedIndex && this.selectedIndex !== -1) {\r\n                this.$scope.$apply(updateIndex);\r\n            } else {\r\n                this.$scope.$apply(onSelect);\r\n            }\r\n\r\n            function updateIndex() {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.indexSetter) this.indexSetter(this.$scope, this.selectedIndex);\r\n                if (this.idSetter) this.idSetter(this.$scope, selectedId);\r\n                onSelect();\r\n            };\r\n\r\n            function onSelect() {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.changeGetter) {\r\n                    this.changeGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            item: selectedItem,\r\n                            index: this.selectedIndex,\r\n                            id: selectedId,\r\n                            newIndex: this.selectedIndex,\r\n                            oldIndex: oldSelectedIndex\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        private scrollToItem($item) {\r\n            if (this.noScroll || !$item.offset()) return;\r\n\r\n            const\r\n                containerTop = this.$element.offset().top,\r\n                containerHeight = this.$element.height(),\r\n                containerBottom = containerTop + containerHeight,\r\n                itemTop = $item.offset().top,\r\n                itemHeight = $item.outerHeight(true),\r\n                itemBottom = itemTop + itemHeight,\r\n                containerScrollTop = this.$element.scrollTop();\r\n\r\n            this.isScrolled = true;\r\n            this.$timeout(() => {\r\n                this.isScrolled = false;\r\n            }, 100);\r\n\r\n            if (containerTop > itemTop) {\r\n                this.$element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n            } else if (containerBottom < itemBottom) {\r\n                this.$element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n            }\r\n        };\r\n\r\n        private getTargetElementFromEventTarget(eventTarget) {\r\n            // On some older browsers the event target may be a text node.\r\n            if (eventTarget.nodeType === Node.TEXT_NODE) {\r\n                return eventTarget.parentNode;\r\n            }\r\n\r\n            return eventTarget;\r\n        };\r\n\r\n        private touchHasMoved(event) {\r\n            const touch = event.changedTouches[0],\r\n                boundary = this.touchBoundary; // Touchmove boundary, beyond which a click will be cancelled.\r\n\r\n            if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        private onClickEvent(event) {\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n        }\r\n\r\n        private onTouchStart(event) {\r\n            const ev = event.originalEvent;\r\n            if (ev['targetTouches'].length > 1) {\r\n                return true;\r\n            }\r\n            const targetElement = this.getTargetElementFromEventTarget(ev.target),\r\n                touch = ev['targetTouches'][0];\r\n\r\n            this.trackingClick = true;\r\n            this.trackingClickStart = ev.timeStamp;\r\n            this.targetElement = targetElement;\r\n\r\n            this.touchStartX = touch.pageX;\r\n            this.touchStartY = touch.pageY;\r\n\r\n            /*if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                //  event.preventDefault();\r\n            }*/\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchMove(event) {\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // If the touch has moved, cancel the click tracking\r\n            if (this.targetElement !== this.getTargetElementFromEventTarget(ev.target) || this.touchHasMoved(ev)) {\r\n                this.trackingClick = false;\r\n                this.targetElement = null;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchEnd(event) {\r\n            let forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = this.targetElement;\r\n\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // Prevent phantom clicks on fast double-tap \r\n            if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                this.cancelNextClick = true;\r\n                return true;\r\n            }\r\n\r\n            if ((ev.timeStamp - this.trackingClickStart) > this.tapTimeout) {\r\n                return true;\r\n            }\r\n\r\n            // Reset to prevent wrong click cancel on input \r\n            this.cancelNextClick = false;\r\n\r\n            this.lastClickTime = event.timeStamp;\r\n\r\n            newTrackingClickStart = this.trackingClickStart;\r\n            this.trackingClick = false;\r\n            this.trackingClickStart = 0;\r\n\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        private onTouchCancel(event) {\r\n            this.trackingClick = false;\r\n            this.targetElement = null;\r\n        }\r\n\r\n        private onKeyDown(event) {\r\n            var keyCode = event.which || event.keyCode;\r\n\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.ENTER || keyCode == this.$mdConstant.KEY_CODE.SPACE) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (this.enterSpaceGetter) {\r\n                    this.enterSpaceGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            index: this.selectedIndex,\r\n                            item: this.$element.find('.selected')\r\n                        }\r\n                    });\r\n                }\r\n\r\n            } else\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW || keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                // Get next selectable control index\r\n                const items = this.$element.find(this.className + this.modifier),\r\n                    inc = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    newSelectedIndex = this.selectedIndex + inc;\r\n\r\n                // Set next control as selected\r\n                this.selectItem({\r\n                    itemIndex: newSelectedIndex,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusIn(event) {\r\n            // Choose selected element\r\n            let items,\r\n                selectedItem = this.$element.find(this.className + '.selected');\r\n\r\n            selectedItem.addClass('md-focused');\r\n\r\n            // If there are not selected elements then pick the first one\r\n            if (selectedItem.length === 0) {\r\n                this.selectedIndex = this.indexGetter(this.$scope);\r\n                items = this.$element.find(this.className + this.modifier);\r\n                this.selectItem({\r\n                    itemIndex: this.selectedIndex || 0,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusOut(event) {\r\n            this.$element.find(this.className + '.md-focused' + this.modifier).removeClass('md-focused');\r\n        }\r\n    }\r\n\r\n    const Selected = function (\r\n        $parse: ng.IParseService,\r\n        $mdConstant: any,\r\n        $timeout: ng.ITimeoutService\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: SelectedAttributes\r\n            ) {\r\n                new SelectedLink($parse, $mdConstant, $timeout, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipSelected\", [])\r\n        .directive('pipSelected', Selected);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\n\r\nexport class ShortcutItem {\r\n    // Shortcut combination\r\n    public shortcut: string;\r\n    // Target object \r\n    public target?: any;\r\n    // Target element by Id\r\n    public targetId?: string;\r\n    // Target element by class (firstelement??)\r\n    // Public targetClass?: string;\r\n    // Access function\r\n    public access?: (event: JQueryEventObject) => boolean;\r\n    // Window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public keypress?: (event: JQueryEventObject) => void;\r\n    // Default options\r\n    public options?: ShortcutOptions;    \r\n}\r\n\r\n// export class ShortcutItem extends SimpleShortcutItem {\r\n//     public shortcuts: SimpleShortcutItem[];\r\n// }\r\n\r\nexport class ShortcutsConfig {\r\n    // Global shortcut \r\n    public globalShortcuts: ShortcutItem[] = [];\r\n    // Local shortcut \r\n    public localShortcuts: ShortcutItem[] = [];\r\n    // Default options\r\n    public defaultOptions: ShortcutOptions = null;\r\n}\r\n\r\nexport interface IShortcutsService {\r\n    readonly config: ShortcutsConfig;\r\n\r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n}\r\n\r\nexport interface IShortcutsProvider extends ng.IServiceProvider {\r\n    config: ShortcutsConfig;\r\n    \r\n    globalShortcuts: ShortcutItem[];\r\n    defaultOptions: ShortcutOptions;\r\n}\r\n","export class KeyboardEvent {\r\n    static Keydown: string = 'keydown';\r\n    static Keyup: string = 'keyup';\r\n    static Keypress: string = 'keypress';\r\n}\r\n\r\nexport class ShortcutOptions {\r\n    Type: KeyboardEvent;\r\n    Propagate: boolean;\r\n    DisableInInput: boolean;\r\n    Target: any; // Event target object\r\n    Keycode: number;\r\n}\r\n\r\nexport class Shortcut {\r\n    private shift_nums = {\r\n        \"`\": \"~\",\r\n        \"1\": \"!\",\r\n        \"2\": \"@\",\r\n        \"3\": \"#\",\r\n        \"4\": \"$\",\r\n        \"5\": \"%\",\r\n        \"6\": \"^\",\r\n        \"7\": \"&\",\r\n        \"8\": \"*\",\r\n        \"9\": \"(\",\r\n        \"0\": \")\",\r\n        \"-\": \"_\",\r\n        \"=\": \"+\",\r\n        \";\": \":\",\r\n        \"'\": \"\\\"\",\r\n        \",\": \"<\",\r\n        \".\": \">\",\r\n        \"/\": \"?\",\r\n        \"\\\\\": \"|\"\r\n    };\r\n\r\n    private special_keys = {\r\n        'esc': 27,\r\n        'escape': 27,\r\n        'tab': 9,\r\n        'space': 32,\r\n        'return': 13,\r\n        'enter': 13,\r\n        'backspace': 8,\r\n\r\n        'scrolllock': 145,\r\n        'scroll_lock': 145,\r\n        'scroll': 145,\r\n        'capslock': 20,\r\n        'caps_lock': 20,\r\n        'caps': 20,\r\n        'numlock': 144,\r\n        'num_lock': 144,\r\n        'num': 144,\r\n\r\n        'pause': 19,\r\n        'break': 19,\r\n\r\n        'insert': 45,\r\n        'home': 36,\r\n        'delete': 46,\r\n        'end': 35,\r\n\r\n        'pageup': 33,\r\n        'page_up': 33,\r\n        'pu': 33,\r\n\r\n        'pagedown': 34,\r\n        'page_down': 34,\r\n        'pd': 34,\r\n\r\n        'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,\r\n\r\n        'f1': 112,\r\n        'f2': 113,\r\n        'f3': 114,\r\n        'f4': 115,\r\n        'f5': 116,\r\n        'f6': 117,\r\n        'f7': 118,\r\n        'f8': 119,\r\n        'f9': 120,\r\n        'f10': 121,\r\n        'f11': 122,\r\n        'f12': 123\r\n    };\r\n\r\n    private modifiers = {\r\n        shift: { wanted: false, pressed: false },\r\n        ctrl: { wanted: false, pressed: false },\r\n        alt: { wanted: false, pressed: false },\r\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\r\n    };\r\n\r\n    public eventCallback: Function;\r\n    public target: any;\r\n    public event: KeyboardEvent;\r\n    public option: ShortcutOptions;\r\n    public shorcut: string;\r\n    public callback: Function;\r\n\r\n    public constructor(\r\n        element: any,\r\n        shorcutCombination: string,\r\n        option: ShortcutOptions,\r\n        callback: (e?: JQueryEventObject) => void\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.target = element;\r\n        this.shorcut = shorcutCombination;\r\n        this.event = option.Type;\r\n        this.option = option;\r\n        this.callback = callback;\r\n\r\n        this.eventCallback = (event: JQueryEventObject) => {\r\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\r\n            let code: number;\r\n\r\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\r\n                let element;\r\n                if (e.target) {\r\n                    element = e.target;\r\n                } else if (e.srcElement) {\r\n                    element = e.srcElement;\r\n                }\r\n\r\n                if (element.nodeType == 3) {\r\n                    element = element.parentNode;\r\n                }\r\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\r\n            }\r\n            // Find Which key is pressed\r\n            if (e.keyCode) {\r\n                code = e.keyCode;\r\n            } else if (e.which) {\r\n                code = e.which;\r\n            }\r\n\r\n            let character = String.fromCharCode(code).toLowerCase();\r\n\r\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\r\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\r\n\r\n            let keys: string[] = this.shorcut.split(\"+\");\r\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\r\n            let kp: number = 0;\r\n\r\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\r\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\r\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\r\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\r\n\r\n            let i: number = 0;\r\n            for (i = 0; i < keys.length; i++) {\r\n                let k: string = keys[i];\r\n                // Modifiers\r\n                if (k == 'ctrl' || k == 'control') {\r\n                    kp++;\r\n                    this.modifiers.ctrl.wanted = true;\r\n                } else if (k == 'shift') {\r\n                    kp++;\r\n                    this.modifiers.shift.wanted = true;\r\n                } else if (k == 'alt') {\r\n                    kp++;\r\n                    this.modifiers.alt.wanted = true;\r\n                } else if (k == 'meta') {\r\n                    kp++;\r\n                    this.modifiers.meta.wanted = true;\r\n                } else if (k.length > 1) { // If it is a special key\r\n                    if (this.special_keys[k] == code) {\r\n                        kp++;\r\n                    }\r\n                } else if (this.option.Keycode) {\r\n                    if (this.option.Keycode == code) kp++;\r\n                } else { // The special keys did not match\r\n                    if (character == k) kp++;\r\n                    else {\r\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\r\n                            character = this.shift_nums[character];\r\n                            if (character == k) {\r\n                                kp++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (kp == keys.length &&\r\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\r\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\r\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\r\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\r\n\r\n                this.callback(e);\r\n\r\n                if (!this.option.Propagate) { // Stop the event\r\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    // e.stopPropagation works in Firefox.\r\n                    if (e.stopPropagation) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n            this.modifiers.ctrl.pressed = false;\r\n            this.modifiers.shift.pressed = false;\r\n            this.modifiers.alt.pressed = false;\r\n            this.modifiers.meta.pressed = false;\r\n        };\r\n    }\r\n}\r\n","import { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { IKeyboardShortcuts, IShortcutBindingService, IShortcutBindingProvider } from './IShortcutBindingService';\r\n\r\nexport class ShortcutBindingService implements IShortcutBindingService {\r\n    private _log: ng.ILogService;\r\n    private _defaultOption: ShortcutOptions;\r\n    private _shortcuts: IKeyboardShortcuts = {};\r\n\r\n    public constructor(\r\n        $log: ng.ILogService,\r\n        option: ShortcutOptions\r\n    ) {\r\n        \"ngInject\";\r\n        this._log = $log;\r\n        this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\r\n    }\r\n\r\n    private getDefaultOption(): ShortcutOptions {\r\n        let defaultOption: ShortcutOptions = {\r\n            Type: KeyboardEvent.Keydown,\r\n            Propagate: false,\r\n            DisableInInput: false,\r\n            Target: document,\r\n            Keycode: null\r\n        };\r\n\r\n        return defaultOption;\r\n    }\r\n\r\n    public get shortcuts(): IKeyboardShortcuts {\r\n        return this._shortcuts;\r\n    }\r\n\r\n    public add(shortcut: string, callback: (e: JQueryEventObject) => void, option: ShortcutOptions): void {\r\n        this.remove(shortcut);\r\n        let shortcutOption: ShortcutOptions = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\r\n        let shortcutCombination: string = shortcut.toLowerCase();\r\n        let element = shortcutOption.Target;\r\n\r\n        if (typeof shortcutOption.Target == 'string') {\r\n            element = document.getElementById(shortcutOption.Target);\r\n        } else {\r\n            element = shortcutOption.Target;\r\n        }\r\n\r\n        if (!element) {\r\n            this._log.error('Register shortcut: element undentified!');\r\n            return;\r\n        }\r\n\r\n        if (!shortcutCombination) {\r\n            this._log.error('Register shortcut: shortcut combination undentified!');\r\n            return;\r\n        }\r\n\r\n        if (!callback) {\r\n            this._log.error('Register shortcut: shorcut callback undentified!');\r\n            return;\r\n        }\r\n\r\n        let newKeyboardShortcut = new Shortcut(element, shortcutCombination, shortcutOption, callback);\r\n\r\n        this._shortcuts[shortcutCombination] = newKeyboardShortcut;\r\n\r\n        //Attach the function with the event\r\n        if (element.addEventListener) {\r\n            element.addEventListener(shortcutOption.Type, newKeyboardShortcut.eventCallback, false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent('on' + shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n        } else {\r\n            element.on(shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n        }\r\n    }\r\n\r\n    public remove(shorcut: string): void {\r\n        let shortcutCombination = shorcut.toLowerCase();\r\n        let binding: Shortcut = this._shortcuts[shortcutCombination];\r\n\r\n        delete(this._shortcuts[shortcutCombination])\r\n        if (!binding) return;\r\n\r\n        let type = binding.event;\r\n        let element = binding.target;\r\n        let callback = binding.eventCallback;\r\n\r\n        if (element.detachEvent) {\r\n            element.detachEvent('on' + type, callback);\r\n        } else if (element.removeEventListener) {\r\n            element.removeEventListener(type, callback, false);\r\n        } else {\r\n            // element['on' + type] = false;\r\n            element.off(type, callback);\r\n        }\r\n    }\r\n}\r\n\r\nclass ShortcutBindingProvider implements IShortcutBindingProvider {\r\n    private _service: ShortcutBindingService;\r\n    private _option: ShortcutOptions;\r\n\r\n    public get option(): ShortcutOptions {\r\n        return this._option;\r\n    }\r\n\r\n    public set option(value: ShortcutOptions) {\r\n        this._option = value || new ShortcutOptions();\r\n    }\r\n\r\n    public $get(\r\n        $log: ng.ILogService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutBindingService($log, this._option);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcutBinding', ShortcutBindingProvider);\r\n","import { ShortcutOptions } from \"./Shortcut\";\r\nimport { IShortcutBindingService } from \"./IShortcutBindingService\";\r\n\r\ninterface ShortcutAttributes extends ng.IAttributes {\r\n    pipShortcutAction: any;\r\n    pipShortcutName: any;\r\n    pipShorcutOptions: ShortcutOptions;\r\n}\r\n\r\nclass ShortcutController implements ng.IController  {\r\n    private actionShortcuts: Function;\r\n    private nameShortcuts: string;\r\n    private options: ShortcutOptions;\r\n\r\n    constructor(\r\n        $element: JQuery,\r\n        $attrs: ShortcutAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $parse: ng.IParseService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if ($attrs.pipShortcutAction) {\r\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\r\n            this.actionShortcuts($scope, {$event: {}});\r\n        } else {\r\n            $log.error('Shortcut action does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\r\n            this.nameShortcuts = $attrs.pipShortcutName;\r\n        } else {\r\n            $log.error('Shortcut name does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOptions>$attrs.pipShorcutOptions : <ShortcutOptions>{};\r\n        this.options.Target = $element;\r\n        \r\n        // Registration of keybord shortcuts\r\n        pipShortcutBinding.add(this.nameShortcuts, (e?: any) => {\r\n            this.actionShortcuts($scope, {$event: {'e': e}});          \r\n        }, this.options);\r\n    }\r\n\r\n    private keypressShortcut(action) {\r\n        this.actionShortcuts();\r\n    }\r\n}\r\n\r\n// Prevent junk from going into typescript definitions\r\n{\r\n    const shortcutsDirective = function(): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,            \r\n            controller: ShortcutController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .directive('pipShortcut', shortcutsDirective);\r\n}","import { IShortcutBindingService } from \"./IShortcutBindingService\"\r\nimport { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { ShortcutsConfig, ShortcutItem, IShortcutsService, IShortcutsProvider } from './IShortcutsService';\r\n\r\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\r\n\r\nclass ShortcutsService implements IShortcutsService {\r\n    private _oldConfig: ShortcutsConfig;\r\n    private _config: ShortcutsConfig;\r\n\r\n    public constructor(\r\n        config: ShortcutsConfig,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService, \r\n        private $location: ng.ILocationService, \r\n        private $injector: ng.auto.IInjectorService,\r\n        private pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        this._config = config;\r\n        this._oldConfig = _.cloneDeep(this._config);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this._config.globalShortcuts);\r\n        this.addShortcuts(this._config.localShortcuts);        \r\n    }\r\n\r\n    // Describe private functions\r\n    private sendChangeEvent() {\r\n        // Remove shortcuts\r\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\r\n        this.removeShortcuts(this._oldConfig.localShortcuts);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this.config.globalShortcuts);\r\n        this.addShortcuts(this.config.localShortcuts);\r\n\r\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\r\n\r\n        // Save current config to oldConfig\r\n        this._oldConfig = _.cloneDeep(this.config);\r\n    }\r\n\r\n    private removeShortcuts(collection: ShortcutItem[]): void {\r\n        _.each(collection, (k) => {\r\n            this.pipShortcutBinding.remove(k.shortcut);\r\n        });\r\n    }\r\n\r\n    private keypressShortcut(item: ShortcutItem, event: JQueryEventObject) {\r\n        if (item.access && _.isFunction(item.access)) {\r\n            if (!item.access(event)) {\r\n                return;\r\n            }\r\n        } \r\n\r\n        if (item.keypress) {\r\n            item.keypress(event);\r\n            return;\r\n        }\r\n\r\n        if (item.href) {\r\n            this.$window.location.href = item.href;\r\n            return;\r\n        }\r\n\r\n        if (item.url) {\r\n            this.$location.url(item.url);\r\n            return;\r\n        }\r\n\r\n        if (item.state) {\r\n            if (this.$injector.has('$state')) {\r\n                var $state = this.$injector.get('$state');\r\n                $state['go'](item.state, item.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (item.event) {\r\n            this.$rootScope.$broadcast(item.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipShortcutKeypress', item.shortcut);\r\n        }\r\n    }\r\n\r\n    private addShortcuts(collection: ShortcutItem[]): void {\r\n        let generalOptions: ShortcutOptions = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOptions>{};\r\n        \r\n        _.each(collection, (k) => {\r\n            let option: ShortcutOptions = k.options ? k.options : generalOptions;\r\n            let target: any;\r\n\r\n            target = k.target ? k.target : k.targetId;\r\n            option.Target = target;\r\n            // Registration of keyboard shortcut\r\n            this.pipShortcutBinding.add(k.shortcut, (e?: any) => {\r\n                this.keypressShortcut(k, e);        \r\n            }, option);              \r\n        });\r\n    }\r\n\r\n    // Describe public functions \r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n}\r\n\r\nclass ShortcutsProvider implements IShortcutsProvider {\r\n    private _config: ShortcutsConfig = new ShortcutsConfig();\r\n    private _service: ShortcutsService;\r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ShortcutsConfig) {\r\n        this._config = value || new ShortcutsConfig();\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: ng.IRootScopeService, \r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutBinding);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcuts', ShortcutsProvider);\r\n\r\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\r\n\r\nimport './ShortcutBindingService';\r\nimport './ShortcutsService';\r\nimport './ShortcutDirective';\r\n\r\nexport * from './IShortcutsService';\r\nexport * from './IShortcutBindingService';\r\nexport * from './ShortcutsService';\r\nexport * from './ShortcutBindingService';","{\r\n    interface UnsavedChangesScope extends ng.IScope {\r\n        unsavedChangesAvailable: Function;\r\n        unsavedChangesMessage: string;\r\n        cancelLeave: Function;\r\n        afterLeave: Function;\r\n    }\r\n\r\n    class UnsavedChangesLink {\r\n        constructor(\r\n            $scope: UnsavedChangesScope,\r\n            $window: ng.IWindowService\r\n        ) {\r\n            $window.onbeforeunload = () => {\r\n                if ($scope.unsavedChangesAvailable()) {\r\n                    return $scope.unsavedChangesMessage;\r\n                }\r\n            };\r\n\r\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\r\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\r\n                    event.preventDefault();\r\n                } else {\r\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                }\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                $window.onbeforeunload = null;\r\n                unbindFunc();\r\n            });\r\n        }\r\n    }\r\n\r\n    const UnsavedChanges = function ($window: ng.IWindowService) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave',\r\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\r\n            },\r\n            link: function ($scope: UnsavedChangesScope) {\r\n                new UnsavedChangesLink($scope, $window);\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"pipUnsavedChanges\", [])\r\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\r\n}"]}