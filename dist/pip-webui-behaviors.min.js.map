{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/behaviors.ts","src/draggable/draggable.ts","src/focused/focused.ts","src/infinite_scroll/infinite_scroll.ts","src/selected/selected.ts","src/unsaved_changes/unsaved_changes.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","thisModule","service","scope","inputEvent","event","isDefined","touches","originalEvent","directive","$rootScope","$parse","$document","$window","pipDraggable","restrict","link","element","attrs","initialize","attr","dragHandles","querySelectorAll","find","_dragHandle","toggleListeners","scrollContainer","scrollParent","parent","pipScrollContainer","scrollContainerGetter","toBoolean","value","toString","toLowerCase","enable","$on","onDestroy","$watch","pipDrag","onEnableChange","pipCenterAnchor","onCenterAnchor","on","_pressEvents","onpress","_hasTouch","nodeName","newVal","oldVal","_dragEnabled","_centerAnchor","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","_pressTimer","setTimeout","onlongpress","LONG_PRESS","_moveEvents","_releaseEvents","_elementStyle","left","css","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","_dragOffset","allowTransform","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","_deregisterRootMoveListener","origEvent","hasClass","_data","getDragData","addClass","$broadcast","x","y","tx","ty","data","onDragStartCallback","$apply","$data","$event","horizontalScroll","verticalScroll","dragToScroll","moveElement","uid","_myid","dragOffset","callback","onDragComplete","removeClass","reset","onDragStopCallback","onDragSuccessCallback","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","activationDistance","scrollDistance","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","ngDrag","DocumentTouch","$id","pipDragStart","pipDragStop","pipDragSuccess","$eval","pipDragData","pipVerticalScroll","pipHorizontalScroll","parseFloat","pipActivationDistance","pipScrollDistance","noop","$timeout","pipDrop","onDragStart","onDragMove","onDragEnd","_dropEnabled","obj","isTouching","pipDragMove","onDragMoveCallback","pipDropSuccess","onDropCallback","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","absorbEvent_","stopPropagation","cancelBubble","returnValue","$mdConstant","$scope","$element","$attrs","rgba","color","focusedColor","arr","split","red","blue","green","opacity","opacityLimit","opacityDelta","setTabindex","checkTabindex","controls","index","_","findIndex","c","focusedTabindex","init","selector","withHidden","controlsLength","$","isOpacity","_color","keydownListener","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","filter","focus","pipWithHidden","pipFocusedColor","pipFocusedTabindex","parseInt","pipFocusedOpacity","ngModel","$interval","THROTTLE_MILLISECONDS","pipInfiniteScroll","pipScrollDisabled","pipScrollUseDocumentBottom","pipScrollListenForEvent","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","handleScrollDistance","v","handleScrollDisabled","scrollEnabled","checkWhenEnabled","onContainerScroll","handleScrollUseDocumentBottom","useDocumentBottom","changeContainer","newContainer","unbind","bind","handleScrollContainer","HTMLElement","append","parents","Array","isArray","immediateCheck","unregisterEventListener","windowElement","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","throttle","pipScrollParent","pipScrolImmediateCheck","selectItem","itemParams","isScrolled","itemIndex","itemId","items","className","modifier","itemsLength","item","undefined","raiseEvent","noScroll","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedIndex","selectedId","indexSetter","idSetter","onSelect","changeGetter","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","indexGetter","pipSelected","assign","idGetter","pipSelectedId","pipSelect","enterSpaceGetter","pipEnterSpacePress","pipNoScroll","pipSkipHidden","pipTreeList","currentElementTabinex","pipSelectedWatch","newSelectedId","newSelectedIndex","currentTarget","ENTER","SPACE","inc","unsavedChangesAvailable","unsavedChangesMessage","afterLeave","cancelLeave","onbeforeunload","$routing","unbindFunc","confirm","isFunction"],"mappings":"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","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿/**\n * @file Registration of all WebUI list controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    angular.module('pipBehaviors', [\n        'pipFocused',\n        'pipSelected',\n        'pipInfiniteScroll',\n        'pipUnsavedChanges',\n        'pipDraggable'\n    ]);\n    \n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipDraggable\", []);\n\n    thisModule.service('pipDraggable', function () {\n\n        var scope = this;\n        scope.inputEvent = function (event) {\n            if (angular.isDefined(event.touches)) {\n                return event.touches[0];\n            }\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\n                return event.originalEvent.touches[0];\n            }\n            return event;\n        };\n\n    });\n\n    thisModule.directive('pipDrag',\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\n            return {\n\n                restrict: 'A',\n                link: function (scope: any, element, attrs: any) {\n                    scope.value = attrs.ngDrag;\n                    var LONG_PRESS = 50; // 50ms for longpress\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\n                    var _pressEvents = 'touchstart mousedown';\n                    var _moveEvents = 'touchmove mousemove';\n                    var _releaseEvents = 'touchend mouseup';\n                    var _dragHandle;\n\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\n                    var _myid = scope.$id;\n                    var _data = null;\n\n                    var _dragOffset = null;\n\n                    var _dragEnabled = false;\n\n                    var _pressTimer = null;\n\n                    var _elementStyle: any = {};\n\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\n\n                    var getDragData = $parse(attrs.pipDragData);\n                    var\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\n                        scrollParent = false,\n\n                        scrollContainer = angular.element(window),\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\n\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\n                    var _deregisterRootMoveListener = angular.noop;\n\n                    initialize();\n\n                    return;\n\n                    //-----------------------------------\n\n                    function initialize() {\n                        element.attr('pip-draggable', 'false'); // prevent native drag\n                        // check to see if drag handle(s) was specified\n                        // if querySelectorAll is available, we use this instead of find\n                        // as JQLite find is limited to tagnames\n                        let dragHandles: any;\n                        if (element[0].querySelectorAll) {\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\n                        } else {\n                            dragHandles = element.find('[pip-drag-handle]');\n                        }\n                        if (dragHandles.length) {\n                            _dragHandle = dragHandles;\n                        }\n                        toggleListeners(true);\n\n                        // Initialize scroll container\n                        if (scrollParent) {\n                            scrollContainer = angular.element(element.parent());\n                        } else if (attrs.pipScrollContainer) {\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\n                        } else {\n                            scrollContainer = angular.element(window);\n                        }\n                    }\n\n                    function toBoolean(value) {\n                        if (value == null) return false;\n                        if (!value) return false;\n                        value = value.toString().toLowerCase();\n                        return value == '1' || value == 'true';\n                    }\n\n                    function toggleListeners(enable) {\n                        if (!enable)return;\n                        // add listeners.\n\n                        scope.$on('$destroy', onDestroy);\n                        scope.$watch(attrs.pipDrag, onEnableChange);\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\n                        // wire up touch events\n                        if (_dragHandle) {\n                            // handle(s) specified, use those to initiate drag\n                            _dragHandle.on(_pressEvents, onpress);\n                        } else {\n                            // no handle(s) specified, use the element as the handle\n                            element.on(_pressEvents, onpress);\n                        }\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\n                            element.on('mousedown', function () {\n                                return false;\n                            }); // prevent native drag for images\n                        }\n                    }\n                    \n                    function onDestroy(enable) {\n                        toggleListeners(false);\n                    }\n\n                    function onEnableChange(newVal, oldVal) {\n                        _dragEnabled = (newVal);\n                    }\n\n                    function onCenterAnchor(newVal, oldVal) {\n                        if (angular.isDefined(newVal))\n                            _centerAnchor = (newVal || 'true');\n                    }\n\n                    function isClickableElement(evt) {\n                        return (\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\n                        );\n                    }\n\n                    /*\n                     * When the element is clicked start the drag behaviour\n                     * On touch devices as a small delay so as not to prevent native window scrolling\n                     */\n                    function onpress(evt) {\n                        if (!_dragEnabled)return;\n\n                        if (isClickableElement(evt)) {\n                            return;\n                        }\n\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\n                            // Do not start dragging on right-click\n                            return;\n                        }\n\n                        saveElementStyles();\n\n                        if (_hasTouch) {\n                            cancelPress();\n                            _pressTimer = setTimeout(function () {\n                                cancelPress();\n                                onlongpress(evt);\n                            }, LONG_PRESS);\n                            $document.on(_moveEvents, cancelPress);\n                            $document.on(_releaseEvents, cancelPress);\n                        } else {\n                            onlongpress(evt);\n                        }\n\n                    }\n\n                    function saveElementStyles() {\n                        _elementStyle.left = element.css('css') || 0;\n                        _elementStyle.top = element.css('top') || 0;\n                        _elementStyle.position = element.css('position');\n                        _elementStyle.width = element.css('width');    \n                    }\n\n                    function cancelPress() {\n                        clearTimeout(_pressTimer);\n                        $document.off(_moveEvents, cancelPress);\n                        $document.off(_releaseEvents, cancelPress);\n                    }\n\n                    function onlongpress(evt) {\n                        if (!_dragEnabled)return;\n                        evt.preventDefault();\n\n                        offset = element[0].getBoundingClientRect();\n                        if (allowTransform)\n                            _dragOffset = offset;\n                        else {\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\n                        }\n\n\n                        (<any>element).centerX = element[0].offsetWidth / 2;\n                        (<any>element).centerY = element[0].offsetHeight / 2;\n\n                        _mx = pipDraggable.inputEvent(evt).pageX;\n                        _my = pipDraggable.inputEvent(evt).pageY;\n                        _mrx = _mx - offset.left;\n                        _mry = _my - offset.top;\n                        if (_centerAnchor) {\n                            _tx = _mx - (<any>element).centerX - $window.pageXOffset;\n                            _ty = _my - (<any>element).centerY - $window.pageYOffset;\n                        } else {\n                            _tx = _mx - _mrx - $window.pageXOffset;\n                            _ty = _my - _mry - $window.pageYOffset;\n                        }\n\n                        $document.on(_moveEvents, onmove);\n                        $document.on(_releaseEvents, onrelease);\n                        // This event is used to receive manually triggered mouse move events\n                        // jqLite unfortunately only supports triggerHandler(...)\n                        // See http://api.jquery.com/triggerHandler/\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\n                            onmove(origEvent);\n                        });\n                    }\n\n                    function onmove(evt) {\n                        if (!_dragEnabled)return;\n                        evt.preventDefault();\n\n                        if (!element.hasClass('pip-dragging')) {\n                            _data = getDragData(scope);\n                            element.addClass('pip-dragging');\n                            $rootScope.$broadcast('draggable:start', {\n                                x: _mx,\n                                y: _my,\n                                tx: _tx,\n                                ty: _ty,\n                                event: evt,\n                                element: element,\n                                data: _data\n                            });\n\n                            if (onDragStartCallback) {\n                                scope.$apply(function () {\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\n                                });\n                            }\n                        }\n\n                        _mx = pipDraggable.inputEvent(evt).pageX;\n                        _my = pipDraggable.inputEvent(evt).pageY;\n\n                        if (horizontalScroll || verticalScroll) {\n                            dragToScroll();\n                        }\n\n                        if (_centerAnchor) {\n                            _tx = _mx - (<any>element).centerX - _dragOffset.left;\n                            _ty = _my - (<any>element).centerY - _dragOffset.top;\n                        } else {\n                            _tx = _mx - _mrx - _dragOffset.left;\n                            _ty = _my - _mry - _dragOffset.top;\n                        }\n\n                        moveElement(_tx, _ty);\n\n                        $rootScope.$broadcast('draggable:move', {\n                            x: _mx,\n                            y: _my,\n                            tx: _tx,\n                            ty: _ty,\n                            event: evt,\n                            element: element,\n                            data: _data,\n                            uid: _myid,\n                            dragOffset: _dragOffset\n                        });\n                    }\n\n                    function onrelease(evt) {\n                        if (!_dragEnabled)\n                            return;\n                        evt.preventDefault();\n                        $rootScope.$broadcast('draggable:end', {\n                            x: _mx,\n                            y: _my,\n                            tx: _tx,\n                            ty: _ty,\n                            event: evt,\n                            element: element,\n                            data: _data,\n                            callback: onDragComplete,\n                            uid: _myid\n                        });\n                        element.removeClass('pip-dragging');\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\n                        reset();\n                        $document.off(_moveEvents, onmove);\n                        $document.off(_releaseEvents, onrelease);\n\n                        if (onDragStopCallback) {\n                            scope.$apply(function () {\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\n                            });\n                        }\n\n                        _deregisterRootMoveListener();\n                    }\n\n                    function onDragComplete(evt) {\n                        if (!onDragSuccessCallback)return;\n\n                        scope.$apply(function () {\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\n                        });\n                    }\n\n                    function reset() {\n                        if (allowTransform)\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\n                        else {\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\n                        }\n                    }\n\n                    function moveElement(x, y) {\n                        var eWidth = element.css('width');\n                        if (allowTransform) {\n                            element.css({\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                                'z-index': 99999,\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n                            });\n                        } else {\n                            element.css({\n                                'left': x + 'px',\n                                'top': y + 'px',\n                                'position': 'fixed',\n                                'z-index': 100,\n                                width: eWidth\n                            });\n                        }\n                    }\n\n                    function dragToScroll() {\n                        var scrollX = 0, scrollY = 0,\n                            offset = function (element) {\n                                return element.offset() || {left: 0, top: 0};\n                            };\n\n                        if (horizontalScroll) {\n                            var\n                                containerLeft = offset(scrollContainer).left,\n                                containerWidth = scrollContainer.innerWidth(),\n                                containerRight = containerLeft + containerWidth;\n\n                            if ((_mx - containerLeft) < activationDistance) {\n                                scrollX = -scrollDistance;\n                            }\n                            else if ((containerRight - _mx) < activationDistance) {\n                                scrollX = scrollDistance;\n                            }\n                        }\n\n                        if (verticalScroll) {\n                            var\n                                containerTop = offset(scrollContainer).top,\n                                containerHeight = scrollContainer.innerHeight(),\n                                containerBottom = containerTop + containerHeight;\n\n                            if ((_my - containerTop) < activationDistance) {\n                                scrollY = -scrollDistance + 30;\n                            }\n                            else if ((containerBottom - _my) < activationDistance) {\n                                scrollY = scrollDistance - 30;\n                            }\n                        }\n                        if (scrollX !== 0 || scrollY !== 0) {\n                            var\n                                containerScrollLeft = scrollContainer.scrollLeft(),\n                                containerScrollTop = scrollContainer.scrollTop();\n\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\n                        }\n\n                    }\n                }\n            }\n        });\n\n    thisModule.directive('pipDrop', \n        function ($parse, $timeout, $window, $document, pipDraggable) {\n        return {\n            restrict: 'A',\n            link: function (scope: any, element, attrs: any) {\n                scope.value = attrs.pipDrop;\n                scope.isTouching = false;\n\n                var _lastDropTouch = null;\n                var _myid = scope.$id;\n                var _dropEnabled = false;\n\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\n                var onDragStartCallback = $parse(attrs.pipDragStart);\n                var onDragStopCallback = $parse(attrs.pipDragStop);\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\n\n                initialize();\n\n                return;\n\n                //----------------------\n\n                function initialize() {\n                    toggleListeners(true);\n                }\n\n                function toggleListeners(enable) {\n                    // remove listeners\n                    if (!enable)return;\n                    // add listeners.\n                    scope.$watch(attrs.pipDrop, onEnableChange);\n                    scope.$on('$destroy', onDestroy);\n                    scope.$on('draggable:start', onDragStart);\n                    scope.$on('draggable:move', onDragMove);\n                    scope.$on('draggable:end', onDragEnd);\n                }\n\n                function onDestroy(enable) {\n                    toggleListeners(false);\n                }\n\n                function onEnableChange(newVal, oldVal) {\n                    _dropEnabled = newVal;\n                }\n\n                function onDragStart(evt, obj) {\n                    if (!_dropEnabled)return;\n                    isTouching(obj.x, obj.y, obj.element);\n\n                    if (attrs.pipDragStart) {\n                        $timeout(function () {\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n                }\n\n                function onDragMove(evt, obj) {\n                    if (!_dropEnabled)return;\n                    isTouching(obj.x, obj.y, obj.element);\n\n                    if (attrs.pipDragMove) {\n                        $timeout(function () {\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n                }\n\n                function onDragEnd(evt, obj) {\n                    // don't listen to drop events if this is the element being dragged\n                    // only update the styles and return\n                    if (!_dropEnabled || _myid === obj.uid) {\n                        updateDragStyles(false, obj.element);\n                        return;\n                    }\n\n                    if (isTouching(obj.x, obj.y, obj.element)) {\n                        // call the pipDraggable pipDragSuccess element callback\n                        if (obj.callback) {\n                            obj.callback(obj);\n                        }\n\n                        if (attrs.pipDropSuccess) {\n                            $timeout(function () {\n                                onDropCallback(scope, {\n                                    $data: obj.data,\n                                    $event: obj,\n                                    $target: scope.$eval(scope.value)\n                                });\n                            });\n                        }\n                    }\n\n                    if (attrs.pipDragStop) {\n                        $timeout(function () {\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n\n                    updateDragStyles(false, obj.element);\n                }\n\n                function isTouching(mouseX, mouseY, dragElement) {\n                    var touching = hitTest(mouseX, mouseY);\n                    scope.isTouching = touching;\n                    if (touching) {\n                        _lastDropTouch = element;\n                    }\n                    updateDragStyles(touching, dragElement);\n                    return touching;\n                }\n\n                function updateDragStyles(touching, dragElement) {\n                    if (touching) {\n                        element.addClass('pip-drag-enter');\n                        dragElement.addClass('pip-drag-over');\n                    } else if (_lastDropTouch == element) {\n                        _lastDropTouch = null;\n                        element.removeClass('pip-drag-enter');\n                        dragElement.removeClass('pip-drag-over');\n                    }\n                };\n\n                function hitTest(x, y) {\n                    var bounds = element[0].getBoundingClientRect();\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\n                    return x >= bounds.left\n                        && x <= bounds.right\n                        && y <= bounds.bottom\n                        && y >= bounds.top;\n                }\n            }\n        };\n    });\n\n    //thisModule.directive('pipDragClone', function ($parse, $timeout, pipDraggable) {\n    //    return {\n    //        restrict: 'A',\n    //        link: function (scope, element, attrs) {\n    //            var img, _allowClone = true;\n    //            var _dragOffset = null;\n    //            scope.clonedData = {};\n    //            initialize();\n    //            return;\n\n    //            function initialize() {\n//\n    //                img = element.find('img');\n    //                element.attr('pip-draggable', 'false');\n    //                img.attr('draggable', 'false');\n    //                reset();\n    //                toggleListeners(true);\n    //            }\n//\n//\n    //            function toggleListeners(enable) {\n    //                // remove listeners\n//\n    //                if (!enable)return;\n    //                // add listeners.\n    //                scope.$on('draggable:start', onDragStart);\n    //                scope.$on('draggable:move', onDragMove);\n    //                scope.$on('draggable:end', onDragEnd);\n    //                preventContextMenu();\n//\n    //            }\n\n    //            function preventContextMenu() {\n    //                //  element.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                img.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                //  element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                img.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //            }\n\n    //            function onDragStart(evt, obj, elm) {\n    //                _allowClone = true;\n    //                if (angular.isDefined(obj.data.allowClone)) {\n    //                    _allowClone = obj.data.allowClone;\n    //                }\n    //                if (_allowClone) {\n    //                    scope.$apply(function () {\n    //                        scope.clonedData = obj.data;\n    //                    });\n    //                    element.css('width', obj.element[0].offsetWidth);\n    //                    element.css('height', obj.element[0].offsetHeight);\n//\n    //                    moveElement(obj.tx, obj.ty);\n    //                }\n//\n    //            }\n\n    //            function onDragMove(evt, obj) {\n    //                if (_allowClone) {\n//\n    //                    _tx = obj.tx + obj.dragOffset.left;\n    //                    _ty = obj.ty + obj.dragOffset.top;\n//\n    //                    moveElement(_tx, _ty);\n    //                }\n    //            }\n\n    //            function onDragEnd(evt, obj) {\n    //                //moveElement(obj.tx,obj.ty);\n    //                if (_allowClone) {\n    //                    reset();\n    //                }\n    //            }\n//\n    //            function reset() {\n    //                element.css({left: 0, top: 0, position: 'fixed', 'z-index': -1, visibility: 'hidden'});\n    //            }\n\n    //            function moveElement(x, y) {\n    //                element.css({\n    //                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n    //                    'z-index': 99999,\n    //                    'visibility': 'visible',\n    //                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n    //                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n    //                    //,margin: '0'  don't monkey with the margin,\n    //                });\n    //            }\n//\n    //            function absorbEvent_(event) {\n    //                var e = event;//.originalEvent;\n    //                e.preventDefault && e.preventDefault();\n    //                e.stopPropagation && e.stopPropagation();\n    //                e.cancelBubble = true;\n    //                e.returnValue = false;\n    //                return false;\n    //            }\n//\n    //        }\n    //    };\n    //});\n\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\n        return {\n            restrict: 'A',\n            link: function (scope: any, element, attrs: any) {\n                initialize();\n\n                return;\n                //---------------------\n\n                function initialize() {\n                    element.attr('pip-draggable', 'false');\n                    toggleListeners(true);\n                }\n\n                function toggleListeners(enable) {\n                    // remove listeners\n                    if (!enable)return;\n                    // add listeners.\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n                }\n\n                function absorbEvent_(event) {\n                    var e = event.originalEvent;\n                    e.preventDefault && e.preventDefault();\n                    e.stopPropagation && e.stopPropagation();\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n                    return false;\n                }\n            }\n        };\n    });\n\n    thisModule.directive('pipCancelDrag', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\n            }\n        };\n    });\n})();\n\n","/**\n * @file Keyboard navigation over few focusable controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipFocused\", []);\n\n    thisModule.directive('pipFocused', function ($timeout, $mdConstant, $window) {\n        return {\n            require: \"?ngModel\",\n            link: function ($scope: any, $element, $attrs: any) {\n                var controls, controlsLength,\n                    withHidden = $attrs.pipWithHidden,\n                    opacityDelta = 0.4,\n                    opacityLimit = 0.5,\n                    _color,\n                    focusedColor = $attrs.pipFocusedColor ? $attrs.pipFocusedColor : null,\n                    focusedTabindex = $attrs.pipFocusedTabindex ? parseInt($attrs.pipFocusedTabindex) || 0 : 0,\n                    isOpacity = $attrs.pipFocusedOpacity ? toBoolean($attrs.pipFocusedOpacity) : false;\n\n                $timeout(init);\n                $element.on('keydown', keydownListener);\n\n                $scope.$watch($attrs.ngModel, function () {\n                    $timeout(init);\n                }, true);\n\n                // Converts value into boolean\n                function toBoolean(value) {\n                    if (value == null) return false;\n                    if (!value) return false;\n                    value = value.toString().toLowerCase();\n                    return value == '1' || value == 'true';\n                };\n\n                function rgba(color) {\n                    if (focusedColor) {\n                        return focusedColor;\n                    }\n\n                    var arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\n\n                    if (!arr || arr.length < 3) {\n                        return ''\n                    }\n\n                    let red, blue, green, opacity;\n\n                    opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\n                    red = arr[0];\n                    blue = arr[1];\n                    green = arr[2];\n\n                    if (opacity < opacityLimit) {\n                        opacity += opacityDelta;\n                    } else {\n                        opacity -= opacityDelta;\n                    }\n\n                    return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\n                }\n\n                function setTabindex(element, value) {\n                    element.attr('tabindex', value);\n                }\n\n                function checkTabindex(controls) {\n                    let index = _.findIndex(controls, (c) => {\n                        return c['tabindex'] > -1;\n                    });\n\n                    if (index == -1 && controls.length > 0) {\n                        // let el = controls[0];\n                        setTabindex(angular.element(controls[0]), focusedTabindex);\n                    }\n                }\n\n                function init() {\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\n                    controls = $element.find(selector);\n                    controlsLength = controls.length;\n                    checkTabindex(controls);\n\n                    // add needed event listeners\n                    controls.on('focus', function () {\n                        if ($(this).hasClass('md-focused')) {\n                            return;\n                        }\n\n                        $element.addClass('pip-focused-container');\n                        if (isOpacity) {\n                            let ell = angular.element($(this)[0]);\n\n                            _color = $(this).css('backgroundColor');\n                            // _color = $window.getComputedStyle($(this)[0], null).backgroundColor;\n                            $(this).css('backgroundColor', rgba(_color));\n                            $(this).addClass('md-focused');\n                        } else {\n                            $(this).addClass('md-focused md-focused-opacity');\n                        }\n                        \n                        // setTabindex(angular.element($(this)[0]), 0);\n                    }).on('focusout', function () {\n                        if (!$(this).hasClass('md-focused')) {\n                            return;\n                        }                        \n                        $element.removeClass('pip-focused-container');\n\n                        if (isOpacity) {\n                            // $(this).css('backgroundColor', _color);\n                            $(this).css('backgroundColor', \"\");\n                            $(this).removeClass('md-focused md-focused-opacity');\n                        } else {\n                            $(this).removeClass('md-focused');\n                        }\n                        // if I go from block all element have tabindex = -1\n                        // setTabindex(angular.element($(this)[0]), -1);\n                    });\n                }\n\n                function keydownListener(e) {\n                    var keyCode = e.which || e.keyCode;\n                    // Check control keyCode\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\n\n                        e.preventDefault();\n\n                        var\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\n                        // Move focus to next control\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\n                            controls[moveToControl].focus();\n                        }\n                    }\n                }\n            }\n        };\n    });\n\n})();\n\n","/**\n * @file Infinite scrolling behavior\n * @description\n * Modified from https://github.com/sroze/ngInfiniteScroll\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\n\n    thisModule.directive('pipInfiniteScroll', \n        function($rootScope, $window, $interval, $parse) {\n            var THROTTLE_MILLISECONDS = 500;\n\n            return {\n                scope: {\n                    pipInfiniteScroll: '&',\n                    pipScrollContainer: '=',\n                    pipScrollDistance: '=',\n                    pipScrollDisabled: '=',\n                    pipScrollUseDocumentBottom: '=',\n                    pipScrollListenForEvent: '@'\n                },\n                link: function($scope: any, $element, $attrs: any) {\n                    var \n                        checkWhenEnabled = null,\n                        scrollContainer,\n                        immediateCheck = true,\n                        scrollDistance = null,\n                        scrollEnabled = null, \n                        unregisterEventListener = null,\n                        useDocumentBottom = false, \n                        windowElement = angular.element($window);\n                    \n                    function height(element) {\n                        element = element[0] || element;\n                        if (isNaN(element.offsetHeight)) {\n                            return element.document.documentElement.clientHeight;\n                        } else {\n                            return element.offsetHeight;\n                        }\n                    };\n\n                    function offsetTop(element) {\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\n                            return;\n                        }\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\n                    };\n\n                    function pageYOffset(element) {\n                        element = element[0] || element;\n                        if (isNaN(window.pageYOffset)) {\n                            return element.document.documentElement.scrollTop;\n                        } else {\n                            return element.ownerDocument.defaultView.pageYOffset;\n                        }\n                    };\n\n                    var onContainerScroll = function() {\n                        var \n                            containerBottom, \n                            containerTopOffset, \n                            elementBottom, \n                            remaining, \n                            shouldScroll;\n                                                \n                        if (scrollContainer === windowElement) {\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\n                            elementBottom = offsetTop($element) + height($element);\n                        } else {\n                            containerBottom = height(scrollContainer);\n                            containerTopOffset = 0;\n                            if (offsetTop(scrollContainer) !== void 0) {\n                                containerTopOffset = offsetTop(scrollContainer);\n                            }\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\n                        }\n\n                        if (useDocumentBottom) {\n                            elementBottom = height(($element[0].ownerDocument || (<any>$element[0]).document).documentElement);\n                        }\n\n                        remaining = elementBottom - containerBottom;\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\n                        \n                        if (shouldScroll) {\n                            checkWhenEnabled = true;\n                            if (scrollEnabled) {\n                                if ($scope.$$phase || $rootScope.$$phase) {\n                                    return $scope.pipInfiniteScroll();\n                                } else {\n                                    return $scope.$apply($scope.pipInfiniteScroll);\n                                }\n                            }\n                        } else {\n                            return checkWhenEnabled = false;\n                        }\n                    };\n\n                    if (THROTTLE_MILLISECONDS != null) {\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \n                    }\n\n                    $scope.$on('$destroy', function() {\n                        scrollContainer.unbind('scroll', onContainerScroll);\n                        if (unregisterEventListener != null) {\n                            unregisterEventListener();\n                            return unregisterEventListener = null;\n                        }\n                    });\n\n                    function handleScrollDistance(v) {\n                        return scrollDistance = parseFloat(v) || 0;\n                    };\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\n                    handleScrollDistance($scope.pipScrollDistance);\n                    \n                    function handleScrollDisabled(v) {\n                        scrollEnabled = !v;\n                        if (scrollEnabled && checkWhenEnabled) {\n                            checkWhenEnabled = false;\n                            return onContainerScroll();\n                        }\n                    };\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\n                    handleScrollDisabled($scope.pipScrollDisabled);\n\n                    function handleScrollUseDocumentBottom(v) {\n                        return useDocumentBottom = v;\n                    };\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\n\n                    function changeContainer(newContainer) {\n                        if (scrollContainer != null) {\n                            scrollContainer.unbind('scroll', onContainerScroll);\n                        }\n\n                        scrollContainer = newContainer;\n                        if (newContainer != null) {\n                            return scrollContainer.bind('scroll', onContainerScroll);\n                        }\n                    };\n\n                    changeContainer(windowElement);\n                    if ($scope.pipScrollListenForEvent) {\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\n                    }\n\n                    function handleScrollContainer(newContainer) {\n                        if ((newContainer == null) || newContainer.length === 0) {\n                            return;\n                        }\n                        if (newContainer instanceof HTMLElement) {\n                            newContainer = angular.element(newContainer);\n                        } else if (typeof newContainer.append === 'function') {\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\n                        } else if (typeof newContainer === 'string') {\n                            newContainer = $element.parents().find(newContainer);\n                        }\n\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\n                            return changeContainer(newContainer);\n                        } else {\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\n                        }\n                    };\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\n                        if (newContainer !== scrollContainer)\n                            handleScrollContainer(newContainer);\n                    });\n                    handleScrollContainer($scope.pipScrollContainer || []);\n                    \n                    if ($attrs.pipScrollParent != null) {\n                        changeContainer(angular.element($element.parent()));\n                    }\n                    if ($attrs.pipScrolImmediateCheck != null) {\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\n                    }\n                    \n                    return $interval((function() {\n                        if (immediateCheck) {\n                            return onContainerScroll();\n                        }\n                    }), 0, 1);\n                }\n            }\n        }\n    );\n\n})();\n\n","/**\n * @file Keyboard navigation with scrolling over non-focusable controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipSelected\", []);\n\n    thisModule.directive('pipSelected',function ($parse, $mdConstant, $timeout) {\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function ($scope: any, $element, $attrs: any) {\n                var\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\n                    indexSetter = indexGetter ? indexGetter.assign : null,\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\n                    idSetter = idGetter ? idGetter.assign : null,\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\n                    noScroll = toBoolean($attrs.pipNoScroll),\n                    modifier = toBoolean($attrs.pipSkipHidden) ? ':visible' : '',\n                    className = toBoolean($attrs.pipTreeList) ? '.pip-selectable-tree' : '.pip-selectable',\n                    selectedIndex = indexGetter($scope),\n                    currentElementTabinex = $element.attr('tabindex'),\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\n                    isScrolled = false;\n\n                // Set tabindex if it's not set yet\n                $element.attr('tabindex', currentElementTabinex || 0);\n\n                // Watch selected item index\n                if (!toBoolean($attrs.pipTreeList)) {\n                    $scope.$watch(indexGetter, function(newSelectedIndex) {\n                        selectItem({itemIndex: newSelectedIndex});\n                    });\n                } else {\n                    $scope.$watch(idGetter, function(newSelectedId) {\n                        setTimeout(function () {\n                            selectItem({itemId: newSelectedId, raiseEvent: true});\n                        }, 0);\n                    });\n                }\n\n                // Watch resync selection\n                if (pipSelectedWatch) {\n                    $scope.$watch(pipSelectedWatch, function() {\n                        // Delay update to allow ng-repeat to update DOM\n                        setTimeout(function() {\n                            selectedIndex = indexGetter($scope);\n                            selectItem({itemIndex: selectedIndex});\n                        }, 100);\n                    });\n                }\n\n                // Select item defined by index\n                selectItem({itemIndex: selectedIndex, items: $element.find(className)});\n\n                // Converts value into boolean\n                function toBoolean(value) {\n                    if (value == null) return false;\n                    if (!value) return false;\n                    value = value.toString().toLowerCase();\n                    return value == '1' || value == 'true';\n                };\n                \n                // Functions and listeners\n\n                function selectItem(itemParams) {\n                    if (isScrolled) return;\n                    var itemIndex = itemParams.itemIndex,\n                        itemId = itemParams.itemId,\n                        items = itemParams.items || $element.find(className + modifier),\n                        itemsLength = items.length,\n                        item = (function () {\n                            if (itemParams.item) return itemParams.item;\n                            if (itemIndex === undefined && itemIndex === -1) {\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\n                            }\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\n                                return items[itemIndex]\n                            }\n                        }()),\n                        raiseEvent = itemParams.raiseEvent;\n\n                    if (item) {\n                        $element.find(className).removeClass('selected md-focused');\n                        item = angular.element(item)\n                            .addClass('selected md-focused')\n                            .focus(); // todo сдвигает список тут, на первом проходе\n                        if (!noScroll) scrollToItem(item);\n                        if (raiseEvent) defineSelectedIndex(items);\n                    }\n                };\n\n                function defineSelectedIndex(items) {\n                    var oldSelectedIndex = selectedIndex;\n                    selectedIndex = -1;\n                    for (var index = 0; index < items.length; index++) {\n                        if ($(items[index]).hasClass('selected')) {\n                            selectedIndex = index;\n\n                            break;\n                        }\n                    }\n\n                    // Execute callback to notify about item select\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\n                        $scope.$apply(updateIndex);\n                    } else {\n                        $scope.$apply(onSelect);\n                    }\n\n                    function updateIndex() {\n                        var selectedItem = angular.element(items[selectedIndex]),\n                            selectedId = selectedItem.attr('pip-id');\n\n                        if (indexSetter) indexSetter($scope, selectedIndex);\n                        if (idSetter) idSetter($scope, selectedId);\n                        onSelect();\n                    };\n\n                    function onSelect() {\n                        var selectedItem = angular.element(items[selectedIndex]),\n                            selectedId = selectedItem.attr('pip-id');\n\n                        if (changeGetter) {\n                            changeGetter($scope, {\n                                $event: {\n                                    target: $element,\n                                    item: selectedItem,\n                                    index: selectedIndex,\n                                    id: selectedId,\n                                    newIndex: selectedIndex,\n                                    oldIndex: oldSelectedIndex\n                                }\n                            });\n                        }                        \n                    }\n                };\n\n                function scrollToItem($item) {\n                    if (noScroll) return;\n\n                    var\n                        containerTop = $element.offset().top,\n                        containerHeight = $element.height(),\n                        containerBottom = containerTop + containerHeight,\n                        itemTop = $item.offset().top,\n                        itemHeight = $item.outerHeight(true),\n                        itemBottom = itemTop + itemHeight,\n                        containerScrollTop = $element.scrollTop();\n\n                        isScrolled = true;\n                        setTimeout(function () {\n                            isScrolled = false;\n                        }, 100);\n\n                    if (containerTop > itemTop) {\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\n                    }\n                    else if (containerBottom < itemBottom) {\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\n                    }\n\n                };\n\n                $element.on('click touchstart', className, function (event) {\n                    selectItem({item: event.currentTarget, raiseEvent: true});\n                });\n\n                $element.on('keydown', function (e) {\n                    var keyCode = e.which || e.keyCode;\n\n                    // Check control keyCode\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        if (enterSpaceGetter) {\n                            enterSpaceGetter($scope, {\n                                $event: {\n                                    target: $element,\n                                    index: selectedIndex,\n                                    item: $element.find('.selected')\n                                }\n                            });\n                        }\n\n                    } else\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // Get next selectable control index\n                        var items = $element.find(className + modifier),\n                            inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                            newSelectedIndex = selectedIndex + inc;\n\n                        // Set next control as selected\n                        selectItem({itemIndex: newSelectedIndex, items: items, raiseEvent: true});\n                    }\n                });\n\n                $element.on('focusin', function (event) {\n                    // Choose selected element\n                    var items,\n                        selectedItem = $element.find(className + '.selected');\n\n                    selectedItem.addClass('md-focused');\n\n                    // If there are not selected elements then pick the first one\n                    if (selectedItem.length === 0) {\n                        selectedIndex = indexGetter($scope);\n                        items = $element.find(className + modifier);\n                        selectItem({itemIndex: selectedIndex || 0, items: items, raiseEvent: true});\n                    }\n                });\n\n                $element.on('focusout', function (event) {\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\n                });\n            }\n        };\n    });\n\n})();\n\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function(){\n    'use strict';\n\n    var thisModule = angular.module(\"pipUnsavedChanges\", []);\n\n    thisModule.directive(\"pipUnsavedChanges\", function ($window, $rootScope) {\n        return {\n            restrict: 'AE',\n            scope: {\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\n                afterLeave: '&pipUnsavedChangesAfterLeave',\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\n            },\n            link: function($scope: any) {\n\n                $window.onbeforeunload = function() {\n                    if ($scope.unsavedChangesAvailable()) {\n                        $rootScope.$routing = false;\n                        return $scope.unsavedChangesMessage;\n                    }\n                };\n\n                var unbindFunc = $scope.$on('$stateChangeStart', function(event) {\n                    if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\n                        $rootScope.$routing = false;\n                         _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\n                        event.preventDefault();\n                    } else {\n                        _.isFunction($scope.afterLeave) && $scope.afterLeave();\n                    }\n                });\n\n                $scope.$on('$destroy', function() {\n                    $window.onbeforeunload = null;\n                    unbindFunc();\n                });\n            }\n        };\n    });\n\n})();\n\n"]}