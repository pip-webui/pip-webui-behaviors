{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/behaviors.ts","src/draggable/draggable.ts","src/focused/focused.ts","src/infinite_scroll/infinite_scroll.ts","src/keyboard_shortcuts/KeyboardShortcut.ts","src/keyboard_shortcuts/ShorcutsRegisterService.ts","src/keyboard_shortcuts/ShortcutDirective.ts","src/keyboard_shortcuts/ShortcutsService.ts","src/keyboard_shortcuts/index.ts","src/selected/selected.ts","src/unsaved_changes/unsaved_changes.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","thisModule","service","scope","inputEvent","event","isDefined","touches","originalEvent","directive","$rootScope","$parse","$document","$window","pipDraggable","restrict","link","element","attrs","initialize","attr","dragHandles","querySelectorAll","find","_dragHandle","toggleListeners","scrollContainer","scrollParent","parent","pipScrollContainer","scrollContainerGetter","toBoolean","value","toString","toLowerCase","enable","$on","onDestroy","$watch","pipDrag","onEnableChange","pipCenterAnchor","onCenterAnchor","on","_pressEvents","onpress","_hasTouch","nodeName","newVal","oldVal","_dragEnabled","_centerAnchor","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","_pressTimer","setTimeout","onlongpress","LONG_PRESS","_moveEvents","_releaseEvents","_elementStyle","left","css","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","_dragOffset","allowTransform","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","_deregisterRootMoveListener","origEvent","hasClass","_data","getDragData","addClass","$broadcast","x","y","tx","ty","data","onDragStartCallback","$apply","$data","$event","horizontalScroll","verticalScroll","dragToScroll","moveElement","uid","_myid","dragOffset","callback","onDragComplete","removeClass","reset","onDragStopCallback","onDragSuccessCallback","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","activationDistance","scrollDistance","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","ngDrag","DocumentTouch","$id","pipDragStart","pipDragStop","pipDragSuccess","$eval","pipDragData","pipVerticalScroll","pipHorizontalScroll","parseFloat","pipActivationDistance","pipScrollDistance","noop","$timeout","pipDrop","onDragStart","onDragMove","onDragEnd","_dropEnabled","obj","isTouching","pipDragMove","onDragMoveCallback","pipDropSuccess","onDropCallback","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","absorbEvent_","stopPropagation","cancelBubble","returnValue","$mdConstant","$scope","$element","$attrs","rgba","color","focusedColor","arr","split","red","blue","green","opacity","opacityLimit","opacityDelta","setTabindex","checkTabindex","controls","index","_","findIndex","c","focusedTabindex","init","selector","withHidden","controlsLength","$","reInit","isOpacity","_color","keydownListener","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","filter","focus","pipWithHidden","pipFocusedColor","pipFocusedRebind","pipFocusedTabindex","parseInt","pipFocusedOpacity","ngModel","pipFocusedData","$observe","$interval","THROTTLE_MILLISECONDS","pipInfiniteScroll","pipScrollDisabled","pipScrollUseDocumentBottom","pipScrollListenForEvent","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","handleScrollDistance","v","handleScrollDisabled","scrollEnabled","checkWhenEnabled","onContainerScroll","handleScrollUseDocumentBottom","useDocumentBottom","changeContainer","newContainer","unbind","bind","handleScrollContainer","HTMLElement","append","parents","Array","isArray","immediateCheck","unregisterEventListener","windowElement","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","throttle","pipScrollParent","pipScrolImmediateCheck","ShortcutOption","KeyboardEvent","Keydown","Keyup","Keypress","KeyboardShortcut","shorcutCombination","option","_this","shift_nums","`","2","3","4","5","6","7","8","9","0","-","=",";","'",",",".","/","\\","special_keys","esc","escape","tab","space","return","enter","backspace","scrolllock","scroll_lock","scroll","capslock","caps_lock","caps","numlock","num_lock","num","pause","break","insert","home","delete","end","pageup","page_up","pu","pagedown","page_down","pd","up","down","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","modifiers","shift","wanted","pressed","ctrl","alt","meta","shorcut","Type","eventCallback","DisableInInput","element_1","srcElement","nodeType","parentNode","tagName","character","String","fromCharCode","keys","kp","ctrlKey","shiftKey","altKey","metaKey","k","Keycode","Propagate","$inject","Object","defineProperty","KeyboardShortcut_1","ShortcutsRegister","$log","_log","_defaultOption","defaults","getDefaultOption","_shortcuts","prototype","defaultOption","Target","checkAddShortcut","error","get","enumerable","configurable","add","shorcutName","remove","shorcutOption","getElementById","newKeyboardShortcut","addEventListener","attachEvent","shortcutCombination","binding","detachEvent","removeEventListener","ShortcutsRegisterProvider","_option","set","$get","_service","ShortcutController","pipShortcutsRegister","pipShortcutAction","actionShortcuts","pipShortcutName","isString","nameShortcuts","options","pipShorcutOptions","keypressShortcut","action","shortcutsDirective","controller","ShortcutsChangedEvent","ShortcutItem","ShortcutsConfig","globalShortcuts","localShortcuts","defaultOptions","ShortcutsService","config","$location","$injector","_config","_oldConfig","cloneDeep","_rootScope","_window","_location","_injector","_pipShortcutsRegister","addShortcuts","sendChangeEvent","removeShortcuts","$emit","collection","each","shortcut","access","isFunction","keypress","href","location","url","state","has","$state","stateParams","generalOptions","targetId","onLocal","ShortcutsProvider","__export","m","p","hasOwnProperty","./ShortcutDirective","./ShortcutsService","10","selectItem","itemParams","itemIndex","itemId","items","className","modifier","itemsLength","item","undefined","raiseEvent","noScroll","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedIndex","selectedId","indexSetter","idSetter","onSelect","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","isScrolled","getTargetElementFromEventTarget","eventTarget","Node","TEXT_NODE","touchHasMoved","touch","changedTouches","boundary","touchBoundary","Math","abs","touchStartX","touchStartY","onClickEvent","currentTarget","onTouchStart","ev","targetElement","trackingClick","trackingClickStart","timeStamp","lastClickTime","tapdelay","onTouchMove","onTouchEnd","newTrackingClickStart","cancelNextClick","tapTimeout","onTouchCancel","onKeyDown","ENTER","SPACE","inc","newSelectedIndex","onFocusIn","indexGetter","onFocusOut","pipSelected","assign","idGetter","pipSelectedId","changeGetter","pipSelect","enterSpaceGetter","pipEnterSpacePress","pipNoScroll","pipSkipHidden","pipTreeList","currentElementTabinex","pipSelectedWatch","newSelectedId","11","unsavedChangesAvailable","unsavedChangesMessage","afterLeave","onbeforeunload","$routing","confirm","cancelLeave","unbindFunc"],"mappings":"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","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿/**\n * @file Registration of all WebUI list controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    angular.module('pipBehaviors', [\n        'pipFocused',\n        'pipSelected',\n        'pipInfiniteScroll',\n        'pipUnsavedChanges',\n        'pipDraggable',\n        'pipShortcuts'\n    ]);\n    \n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipDraggable\", []);\n\n    thisModule.service('pipDraggable', function () {\n\n        var scope = this;\n        scope.inputEvent = function (event) {\n            if (angular.isDefined(event.touches)) {\n                return event.touches[0];\n            }\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\n                return event.originalEvent.touches[0];\n            }\n            return event;\n        };\n\n    });\n\n    thisModule.directive('pipDrag',\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\n            return {\n\n                restrict: 'A',\n                link: function (scope: any, element, attrs: any) {\n                    scope.value = attrs.ngDrag;\n                    var LONG_PRESS = 50; // 50ms for longpress\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\n                    var _pressEvents = 'touchstart mousedown';\n                    var _moveEvents = 'touchmove mousemove';\n                    var _releaseEvents = 'touchend mouseup';\n                    var _dragHandle;\n\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\n                    var _myid = scope.$id;\n                    var _data = null;\n\n                    var _dragOffset = null;\n\n                    var _dragEnabled = false;\n\n                    var _pressTimer = null;\n\n                    var _elementStyle: any = {};\n\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\n\n                    var getDragData = $parse(attrs.pipDragData);\n                    var\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\n                        scrollParent = false,\n\n                        scrollContainer = angular.element(window),\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\n\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\n                    var _deregisterRootMoveListener = angular.noop;\n\n                    initialize();\n\n                    return;\n\n                    //-----------------------------------\n\n                    function initialize() {\n                        element.attr('pip-draggable', 'false'); // prevent native drag\n                        // check to see if drag handle(s) was specified\n                        // if querySelectorAll is available, we use this instead of find\n                        // as JQLite find is limited to tagnames\n                        let dragHandles: any;\n                        if (element[0].querySelectorAll) {\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\n                        } else {\n                            dragHandles = element.find('[pip-drag-handle]');\n                        }\n                        if (dragHandles.length) {\n                            _dragHandle = dragHandles;\n                        }\n                        toggleListeners(true);\n\n                        // Initialize scroll container\n                        if (scrollParent) {\n                            scrollContainer = angular.element(element.parent());\n                        } else if (attrs.pipScrollContainer) {\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\n                        } else {\n                            scrollContainer = angular.element(window);\n                        }\n                    }\n\n                    function toBoolean(value) {\n                        if (value == null) return false;\n                        if (!value) return false;\n                        value = value.toString().toLowerCase();\n                        return value == '1' || value == 'true';\n                    }\n\n                    function toggleListeners(enable) {\n                        if (!enable)return;\n                        // add listeners.\n\n                        scope.$on('$destroy', onDestroy);\n                        scope.$watch(attrs.pipDrag, onEnableChange);\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\n                        // wire up touch events\n                        if (_dragHandle) {\n                            // handle(s) specified, use those to initiate drag\n                            _dragHandle.on(_pressEvents, onpress);\n                        } else {\n                            // no handle(s) specified, use the element as the handle\n                            element.on(_pressEvents, onpress);\n                        }\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\n                            element.on('mousedown', function () {\n                                return false;\n                            }); // prevent native drag for images\n                        }\n                    }\n                    \n                    function onDestroy(enable) {\n                        toggleListeners(false);\n                    }\n\n                    function onEnableChange(newVal, oldVal) {\n                        _dragEnabled = (newVal);\n                    }\n\n                    function onCenterAnchor(newVal, oldVal) {\n                        if (angular.isDefined(newVal))\n                            _centerAnchor = (newVal || 'true');\n                    }\n\n                    function isClickableElement(evt) {\n                        return (\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\n                        );\n                    }\n\n                    /*\n                     * When the element is clicked start the drag behaviour\n                     * On touch devices as a small delay so as not to prevent native window scrolling\n                     */\n                    function onpress(evt) {\n                        if (!_dragEnabled)return;\n\n                        if (isClickableElement(evt)) {\n                            return;\n                        }\n\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\n                            // Do not start dragging on right-click\n                            return;\n                        }\n\n                        saveElementStyles();\n\n                        if (_hasTouch) {\n                            cancelPress();\n                            _pressTimer = setTimeout(function () {\n                                cancelPress();\n                                onlongpress(evt);\n                            }, LONG_PRESS);\n                            $document.on(_moveEvents, cancelPress);\n                            $document.on(_releaseEvents, cancelPress);\n                        } else {\n                            onlongpress(evt);\n                        }\n\n                    }\n\n                    function saveElementStyles() {\n                        _elementStyle.left = element.css('css') || 0;\n                        _elementStyle.top = element.css('top') || 0;\n                        _elementStyle.position = element.css('position');\n                        _elementStyle.width = element.css('width');    \n                    }\n\n                    function cancelPress() {\n                        clearTimeout(_pressTimer);\n                        $document.off(_moveEvents, cancelPress);\n                        $document.off(_releaseEvents, cancelPress);\n                    }\n\n                    function onlongpress(evt) {\n                        if (!_dragEnabled)return;\n                        evt.preventDefault();\n\n                        offset = element[0].getBoundingClientRect();\n                        if (allowTransform)\n                            _dragOffset = offset;\n                        else {\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\n                        }\n\n\n                        (<any>element).centerX = element[0].offsetWidth / 2;\n                        (<any>element).centerY = element[0].offsetHeight / 2;\n\n                        _mx = pipDraggable.inputEvent(evt).pageX;\n                        _my = pipDraggable.inputEvent(evt).pageY;\n                        _mrx = _mx - offset.left;\n                        _mry = _my - offset.top;\n                        if (_centerAnchor) {\n                            _tx = _mx - (<any>element).centerX - $window.pageXOffset;\n                            _ty = _my - (<any>element).centerY - $window.pageYOffset;\n                        } else {\n                            _tx = _mx - _mrx - $window.pageXOffset;\n                            _ty = _my - _mry - $window.pageYOffset;\n                        }\n\n                        $document.on(_moveEvents, onmove);\n                        $document.on(_releaseEvents, onrelease);\n                        // This event is used to receive manually triggered mouse move events\n                        // jqLite unfortunately only supports triggerHandler(...)\n                        // See http://api.jquery.com/triggerHandler/\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\n                            onmove(origEvent);\n                        });\n                    }\n\n                    function onmove(evt) {\n                        if (!_dragEnabled)return;\n                        evt.preventDefault();\n\n                        if (!element.hasClass('pip-dragging')) {\n                            _data = getDragData(scope);\n                            element.addClass('pip-dragging');\n                            $rootScope.$broadcast('draggable:start', {\n                                x: _mx,\n                                y: _my,\n                                tx: _tx,\n                                ty: _ty,\n                                event: evt,\n                                element: element,\n                                data: _data\n                            });\n\n                            if (onDragStartCallback) {\n                                scope.$apply(function () {\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\n                                });\n                            }\n                        }\n\n                        _mx = pipDraggable.inputEvent(evt).pageX;\n                        _my = pipDraggable.inputEvent(evt).pageY;\n\n                        if (horizontalScroll || verticalScroll) {\n                            dragToScroll();\n                        }\n\n                        if (_centerAnchor) {\n                            _tx = _mx - (<any>element).centerX - _dragOffset.left;\n                            _ty = _my - (<any>element).centerY - _dragOffset.top;\n                        } else {\n                            _tx = _mx - _mrx - _dragOffset.left;\n                            _ty = _my - _mry - _dragOffset.top;\n                        }\n\n                        moveElement(_tx, _ty);\n\n                        $rootScope.$broadcast('draggable:move', {\n                            x: _mx,\n                            y: _my,\n                            tx: _tx,\n                            ty: _ty,\n                            event: evt,\n                            element: element,\n                            data: _data,\n                            uid: _myid,\n                            dragOffset: _dragOffset\n                        });\n                    }\n\n                    function onrelease(evt) {\n                        if (!_dragEnabled)\n                            return;\n                        evt.preventDefault();\n                        $rootScope.$broadcast('draggable:end', {\n                            x: _mx,\n                            y: _my,\n                            tx: _tx,\n                            ty: _ty,\n                            event: evt,\n                            element: element,\n                            data: _data,\n                            callback: onDragComplete,\n                            uid: _myid\n                        });\n                        element.removeClass('pip-dragging');\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\n                        reset();\n                        $document.off(_moveEvents, onmove);\n                        $document.off(_releaseEvents, onrelease);\n\n                        if (onDragStopCallback) {\n                            scope.$apply(function () {\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\n                            });\n                        }\n\n                        _deregisterRootMoveListener();\n                    }\n\n                    function onDragComplete(evt) {\n                        if (!onDragSuccessCallback)return;\n\n                        scope.$apply(function () {\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\n                        });\n                    }\n\n                    function reset() {\n                        if (allowTransform)\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\n                        else {\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\n                        }\n                    }\n\n                    function moveElement(x, y) {\n                        var eWidth = element.css('width');\n                        if (allowTransform) {\n                            element.css({\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                                'z-index': 99999,\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n                            });\n                        } else {\n                            element.css({\n                                'left': x + 'px',\n                                'top': y + 'px',\n                                'position': 'fixed',\n                                'z-index': 100,\n                                width: eWidth\n                            });\n                        }\n                    }\n\n                    function dragToScroll() {\n                        var scrollX = 0, scrollY = 0,\n                            offset = function (element) {\n                                return element.offset() || {left: 0, top: 0};\n                            };\n\n                        if (horizontalScroll) {\n                            var\n                                containerLeft = offset(scrollContainer).left,\n                                containerWidth = scrollContainer.innerWidth(),\n                                containerRight = containerLeft + containerWidth;\n\n                            if ((_mx - containerLeft) < activationDistance) {\n                                scrollX = -scrollDistance;\n                            }\n                            else if ((containerRight - _mx) < activationDistance) {\n                                scrollX = scrollDistance;\n                            }\n                        }\n\n                        if (verticalScroll) {\n                            var\n                                containerTop = offset(scrollContainer).top,\n                                containerHeight = scrollContainer.innerHeight(),\n                                containerBottom = containerTop + containerHeight;\n\n                            if ((_my - containerTop) < activationDistance) {\n                                scrollY = -scrollDistance + 30;\n                            }\n                            else if ((containerBottom - _my) < activationDistance) {\n                                scrollY = scrollDistance - 30;\n                            }\n                        }\n                        if (scrollX !== 0 || scrollY !== 0) {\n                            var\n                                containerScrollLeft = scrollContainer.scrollLeft(),\n                                containerScrollTop = scrollContainer.scrollTop();\n\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\n                        }\n\n                    }\n                }\n            }\n        });\n\n    thisModule.directive('pipDrop', \n        function ($parse, $timeout, $window, $document, pipDraggable) {\n        return {\n            restrict: 'A',\n            link: function (scope: any, element, attrs: any) {\n                scope.value = attrs.pipDrop;\n                scope.isTouching = false;\n\n                var _lastDropTouch = null;\n                var _myid = scope.$id;\n                var _dropEnabled = false;\n\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\n                var onDragStartCallback = $parse(attrs.pipDragStart);\n                var onDragStopCallback = $parse(attrs.pipDragStop);\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\n\n                initialize();\n\n                return;\n\n                //----------------------\n\n                function initialize() {\n                    toggleListeners(true);\n                }\n\n                function toggleListeners(enable) {\n                    // remove listeners\n                    if (!enable)return;\n                    // add listeners.\n                    scope.$watch(attrs.pipDrop, onEnableChange);\n                    scope.$on('$destroy', onDestroy);\n                    scope.$on('draggable:start', onDragStart);\n                    scope.$on('draggable:move', onDragMove);\n                    scope.$on('draggable:end', onDragEnd);\n                }\n\n                function onDestroy(enable) {\n                    toggleListeners(false);\n                }\n\n                function onEnableChange(newVal, oldVal) {\n                    _dropEnabled = newVal;\n                }\n\n                function onDragStart(evt, obj) {\n                    if (!_dropEnabled)return;\n                    isTouching(obj.x, obj.y, obj.element);\n\n                    if (attrs.pipDragStart) {\n                        $timeout(function () {\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n                }\n\n                function onDragMove(evt, obj) {\n                    if (!_dropEnabled)return;\n                    isTouching(obj.x, obj.y, obj.element);\n\n                    if (attrs.pipDragMove) {\n                        $timeout(function () {\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n                }\n\n                function onDragEnd(evt, obj) {\n                    // don't listen to drop events if this is the element being dragged\n                    // only update the styles and return\n                    if (!_dropEnabled || _myid === obj.uid) {\n                        updateDragStyles(false, obj.element);\n                        return;\n                    }\n\n                    if (isTouching(obj.x, obj.y, obj.element)) {\n                        // call the pipDraggable pipDragSuccess element callback\n                        if (obj.callback) {\n                            obj.callback(obj);\n                        }\n\n                        if (attrs.pipDropSuccess) {\n                            $timeout(function () {\n                                onDropCallback(scope, {\n                                    $data: obj.data,\n                                    $event: obj,\n                                    $target: scope.$eval(scope.value)\n                                });\n                            });\n                        }\n                    }\n\n                    if (attrs.pipDragStop) {\n                        $timeout(function () {\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n\n                    updateDragStyles(false, obj.element);\n                }\n\n                function isTouching(mouseX, mouseY, dragElement) {\n                    var touching = hitTest(mouseX, mouseY);\n                    scope.isTouching = touching;\n                    if (touching) {\n                        _lastDropTouch = element;\n                    }\n                    updateDragStyles(touching, dragElement);\n                    return touching;\n                }\n\n                function updateDragStyles(touching, dragElement) {\n                    if (touching) {\n                        element.addClass('pip-drag-enter');\n                        dragElement.addClass('pip-drag-over');\n                    } else if (_lastDropTouch == element) {\n                        _lastDropTouch = null;\n                        element.removeClass('pip-drag-enter');\n                        dragElement.removeClass('pip-drag-over');\n                    }\n                };\n\n                function hitTest(x, y) {\n                    var bounds = element[0].getBoundingClientRect();\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\n                    return x >= bounds.left\n                        && x <= bounds.right\n                        && y <= bounds.bottom\n                        && y >= bounds.top;\n                }\n            }\n        };\n    });\n\n    //thisModule.directive('pipDragClone', function ($parse, $timeout, pipDraggable) {\n    //    return {\n    //        restrict: 'A',\n    //        link: function (scope, element, attrs) {\n    //            var img, _allowClone = true;\n    //            var _dragOffset = null;\n    //            scope.clonedData = {};\n    //            initialize();\n    //            return;\n\n    //            function initialize() {\n//\n    //                img = element.find('img');\n    //                element.attr('pip-draggable', 'false');\n    //                img.attr('draggable', 'false');\n    //                reset();\n    //                toggleListeners(true);\n    //            }\n//\n//\n    //            function toggleListeners(enable) {\n    //                // remove listeners\n//\n    //                if (!enable)return;\n    //                // add listeners.\n    //                scope.$on('draggable:start', onDragStart);\n    //                scope.$on('draggable:move', onDragMove);\n    //                scope.$on('draggable:end', onDragEnd);\n    //                preventContextMenu();\n//\n    //            }\n\n    //            function preventContextMenu() {\n    //                //  element.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                img.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                //  element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                img.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //            }\n\n    //            function onDragStart(evt, obj, elm) {\n    //                _allowClone = true;\n    //                if (angular.isDefined(obj.data.allowClone)) {\n    //                    _allowClone = obj.data.allowClone;\n    //                }\n    //                if (_allowClone) {\n    //                    scope.$apply(function () {\n    //                        scope.clonedData = obj.data;\n    //                    });\n    //                    element.css('width', obj.element[0].offsetWidth);\n    //                    element.css('height', obj.element[0].offsetHeight);\n//\n    //                    moveElement(obj.tx, obj.ty);\n    //                }\n//\n    //            }\n\n    //            function onDragMove(evt, obj) {\n    //                if (_allowClone) {\n//\n    //                    _tx = obj.tx + obj.dragOffset.left;\n    //                    _ty = obj.ty + obj.dragOffset.top;\n//\n    //                    moveElement(_tx, _ty);\n    //                }\n    //            }\n\n    //            function onDragEnd(evt, obj) {\n    //                //moveElement(obj.tx,obj.ty);\n    //                if (_allowClone) {\n    //                    reset();\n    //                }\n    //            }\n//\n    //            function reset() {\n    //                element.css({left: 0, top: 0, position: 'fixed', 'z-index': -1, visibility: 'hidden'});\n    //            }\n\n    //            function moveElement(x, y) {\n    //                element.css({\n    //                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n    //                    'z-index': 99999,\n    //                    'visibility': 'visible',\n    //                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n    //                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n    //                    //,margin: '0'  don't monkey with the margin,\n    //                });\n    //            }\n//\n    //            function absorbEvent_(event) {\n    //                var e = event;//.originalEvent;\n    //                e.preventDefault && e.preventDefault();\n    //                e.stopPropagation && e.stopPropagation();\n    //                e.cancelBubble = true;\n    //                e.returnValue = false;\n    //                return false;\n    //            }\n//\n    //        }\n    //    };\n    //});\n\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\n        return {\n            restrict: 'A',\n            link: function (scope: any, element, attrs: any) {\n                initialize();\n\n                return;\n                //---------------------\n\n                function initialize() {\n                    element.attr('pip-draggable', 'false');\n                    toggleListeners(true);\n                }\n\n                function toggleListeners(enable) {\n                    // remove listeners\n                    if (!enable)return;\n                    // add listeners.\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n                }\n\n                function absorbEvent_(event) {\n                    var e = event.originalEvent;\n                    e.preventDefault && e.preventDefault();\n                    e.stopPropagation && e.stopPropagation();\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n                    return false;\n                }\n            }\n        };\n    });\n\n    thisModule.directive('pipCancelDrag', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\n            }\n        };\n    });\n})();\n\n","/**\n * @file Keyboard navigation over few focusable controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipFocused\", []);\n\n    thisModule.directive('pipFocused', function ($timeout, $mdConstant, $window) {\n        return {\n            // restrict: 'EA',\n            require: \"?ngModel\",\n            link: function ($scope: any, $element, $attrs: any) {\n                var controls, controlsLength,\n                    withHidden = $attrs.pipWithHidden,\n                    opacityDelta = 0.4,\n                    opacityLimit = 0.5,\n                    _color,\n                    focusedColor = $attrs.pipFocusedColor ? $attrs.pipFocusedColor : null,\n                    reInit = $attrs.pipFocusedRebind ? $attrs.pipFocusedRebind : null,\n                    focusedTabindex = $attrs.pipFocusedTabindex ? parseInt($attrs.pipFocusedTabindex) || 0 : 0,\n                    isOpacity = $attrs.pipFocusedOpacity ? toBoolean($attrs.pipFocusedOpacity) : false;\n\n                $timeout(init);\n                $element.on('keydown', keydownListener);\n\n                if ($attrs.ngModel) {\n                    $scope.$watch($attrs.ngModel, function () {\n                        $timeout(init);\n                    }, true);\n                }\n\n                if ($attrs.pipFocusedData) {\n                    $attrs.$observe('pipFocusedData', function () {\n                        $timeout(init);\n                    }, true);\n                }      \n                          \n                // Converts value into boolean\n                function toBoolean(value) {\n                    if (value == null) return false;\n                    if (!value) return false;\n                    value = value.toString().toLowerCase();\n                    return value == '1' || value == 'true';\n                };\n\n                function rgba(color) {\n                    if (focusedColor) {\n                        return focusedColor;\n                    }\n\n                    var arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\n\n                    if (!arr || arr.length < 3) {\n                        return ''\n                    }\n\n                    let red, blue, green, opacity;\n\n                    opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\n                    red = arr[0];\n                    blue = arr[1];\n                    green = arr[2];\n\n                    if (opacity < opacityLimit) {\n                        opacity += opacityDelta;\n                    } else {\n                        opacity -= opacityDelta;\n                    }\n\n                    return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\n                }\n\n                function setTabindex(element, value) {\n                    element.attr('tabindex', value);\n                }\n\n                function checkTabindex(controls) {\n                    let index = _.findIndex(controls, (c) => {\n                        return c['tabindex'] > -1;\n                    });\n\n                    if (index == -1 && controls.length > 0) {\n                        // let el = controls[0];\n                        setTabindex(angular.element(controls[0]), focusedTabindex);\n                    }\n                }\n\n                function init() {\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\n                    controls = $element.find(selector);\n                    controlsLength = controls.length;\n                    checkTabindex(controls);\n                    // add needed event listeners\n                    controls.on('focus', function () {\n                        if ($(this).hasClass('md-focused')) {\n                            return;\n                        }\n                        if (reInit) {\n                            init();\n                        }\n                        $element.addClass('pip-focused-container');\n                        if (isOpacity) {\n                            let ell = angular.element($(this)[0]);\n\n                            _color = $(this).css('backgroundColor');\n                            // _color = $window.getComputedStyle($(this)[0], null).backgroundColor;\n                            $(this).css('backgroundColor', rgba(_color));\n                            $(this).addClass('md-focused');\n                        } else {\n                            $(this).addClass('md-focused md-focused-opacity');\n                        }\n                        \n                        // setTabindex(angular.element($(this)[0]), 0);\n                    }).on('focusout', function () {\n                        if (!$(this).hasClass('md-focused')) {\n                            return;\n                        }                        \n                        $element.removeClass('pip-focused-container');\n\n                        if (isOpacity) {\n                            // $(this).css('backgroundColor', _color);\n                            $(this).css('backgroundColor', \"\");\n                            $(this).removeClass('md-focused md-focused-opacity');\n                        } else {\n                            $(this).removeClass('md-focused');\n                        }\n                        // if I go from block all element have tabindex = -1\n                        // setTabindex(angular.element($(this)[0]), -1);\n                    });\n                }\n\n                function keydownListener(e) {\n                    var keyCode = e.which || e.keyCode;\n                    // Check control keyCode\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\n\n                        e.preventDefault();\n\n                        var\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\n                        // Move focus to next control\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\n                            controls[moveToControl].focus();\n                        }\n                    }\n                }\n            }\n        };\n    });\n\n})();\n\n","/**\n * @file Infinite scrolling behavior\n * @description\n * Modified from https://github.com/sroze/ngInfiniteScroll\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\n\n    thisModule.directive('pipInfiniteScroll', \n        function($rootScope, $window, $interval, $parse) {\n            var THROTTLE_MILLISECONDS = 500;\n\n            return {\n                scope: {\n                    pipInfiniteScroll: '&',\n                    pipScrollContainer: '=',\n                    pipScrollDistance: '=',\n                    pipScrollDisabled: '=',\n                    pipScrollUseDocumentBottom: '=',\n                    pipScrollListenForEvent: '@'\n                },\n                link: function($scope: any, $element, $attrs: any) {\n                    var \n                        checkWhenEnabled = null,\n                        scrollContainer,\n                        immediateCheck = true,\n                        scrollDistance = null,\n                        scrollEnabled = null, \n                        unregisterEventListener = null,\n                        useDocumentBottom = false, \n                        windowElement = angular.element($window);\n                    \n                    function height(element) {\n                        element = element[0] || element;\n                        if (isNaN(element.offsetHeight)) {\n                            return element.document.documentElement.clientHeight;\n                        } else {\n                            return element.offsetHeight;\n                        }\n                    };\n\n                    function offsetTop(element) {\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\n                            return;\n                        }\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\n                    };\n\n                    function pageYOffset(element) {\n                        element = element[0] || element;\n                        if (isNaN(window.pageYOffset)) {\n                            return element.document.documentElement.scrollTop;\n                        } else {\n                            return element.ownerDocument.defaultView.pageYOffset;\n                        }\n                    };\n\n                    var onContainerScroll = function() {\n                        var \n                            containerBottom, \n                            containerTopOffset, \n                            elementBottom, \n                            remaining, \n                            shouldScroll;\n                                                \n                        if (scrollContainer === windowElement) {\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\n                            elementBottom = offsetTop($element) + height($element);\n                        } else {\n                            containerBottom = height(scrollContainer);\n                            containerTopOffset = 0;\n                            if (offsetTop(scrollContainer) !== void 0) {\n                                containerTopOffset = offsetTop(scrollContainer);\n                            }\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\n                        }\n\n                        if (useDocumentBottom) {\n                            elementBottom = height(($element[0].ownerDocument || (<any>$element[0]).document).documentElement);\n                        }\n\n                        remaining = elementBottom - containerBottom;\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\n                        \n                        if (shouldScroll) {\n                            checkWhenEnabled = true;\n                            if (scrollEnabled) {\n                                if ($scope.$$phase || $rootScope.$$phase) {\n                                    return $scope.pipInfiniteScroll();\n                                } else {\n                                    return $scope.$apply($scope.pipInfiniteScroll);\n                                }\n                            }\n                        } else {\n                            return checkWhenEnabled = false;\n                        }\n                    };\n\n                    if (THROTTLE_MILLISECONDS != null) {\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \n                    }\n\n                    $scope.$on('$destroy', function() {\n                        scrollContainer.unbind('scroll', onContainerScroll);\n                        if (unregisterEventListener != null) {\n                            unregisterEventListener();\n                            return unregisterEventListener = null;\n                        }\n                    });\n\n                    function handleScrollDistance(v) {\n                        return scrollDistance = parseFloat(v) || 0;\n                    };\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\n                    handleScrollDistance($scope.pipScrollDistance);\n                    \n                    function handleScrollDisabled(v) {\n                        scrollEnabled = !v;\n                        if (scrollEnabled && checkWhenEnabled) {\n                            checkWhenEnabled = false;\n                            return onContainerScroll();\n                        }\n                    };\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\n                    handleScrollDisabled($scope.pipScrollDisabled);\n\n                    function handleScrollUseDocumentBottom(v) {\n                        return useDocumentBottom = v;\n                    };\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\n\n                    function changeContainer(newContainer) {\n                        if (scrollContainer != null) {\n                            scrollContainer.unbind('scroll', onContainerScroll);\n                        }\n\n                        scrollContainer = newContainer;\n                        if (newContainer != null) {\n                            return scrollContainer.bind('scroll', onContainerScroll);\n                        }\n                    };\n\n                    changeContainer(windowElement);\n                    if ($scope.pipScrollListenForEvent) {\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\n                    }\n\n                    function handleScrollContainer(newContainer) {\n                        if ((newContainer == null) || newContainer.length === 0) {\n                            return;\n                        }\n                        if (newContainer instanceof HTMLElement) {\n                            newContainer = angular.element(newContainer);\n                        } else if (typeof newContainer.append === 'function') {\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\n                        } else if (typeof newContainer === 'string') {\n                            newContainer = $element.parents().find(newContainer);\n                        }\n\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\n                            return changeContainer(newContainer);\n                        } else {\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\n                        }\n                    };\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\n                        if (newContainer !== scrollContainer)\n                            handleScrollContainer(newContainer);\n                    });\n                    handleScrollContainer($scope.pipScrollContainer || []);\n                    \n                    if ($attrs.pipScrollParent != null) {\n                        changeContainer(angular.element($element.parent()));\n                    }\n                    if ($attrs.pipScrolImmediateCheck != null) {\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\n                    }\n                    \n                    return $interval((function() {\n                        if (immediateCheck) {\n                            return onContainerScroll();\n                        }\n                    }), 0, 1);\n                }\n            }\n        }\n    );\n\n})();\n\n","'use strict';\n\nexport class ShortcutOption {\n    Type: KeyboardEvent;\n    Propagate: boolean;\n    DisableInInput: boolean;\n    Target: any; // event target object\n    Keycode: number;\n}\n\nexport class KeyboardEvent {\n    static Keydown: string = 'keydown';\n    static Keyup: string = 'keyup';\n    static Keypress: string = 'keypress';\n}\n\nexport class KeyboardShortcut {\n    private shift_nums = {\n        \"`\": \"~\",\n        \"1\": \"!\",\n        \"2\": \"@\",\n        \"3\": \"#\",\n        \"4\": \"$\",\n        \"5\": \"%\",\n        \"6\": \"^\",\n        \"7\": \"&\",\n        \"8\": \"*\",\n        \"9\": \"(\",\n        \"0\": \")\",\n        \"-\": \"_\",\n        \"=\": \"+\",\n        \";\": \":\",\n        \"'\": \"\\\"\",\n        \",\": \"<\",\n        \".\": \">\",\n        \"/\": \"?\",\n        \"\\\\\": \"|\"\n    };\n\n    private special_keys = {\n        'esc': 27,\n        'escape': 27,\n        'tab': 9,\n        'space': 32,\n        'return': 13,\n        'enter': 13,\n        'backspace': 8,\n\n        'scrolllock': 145,\n        'scroll_lock': 145,\n        'scroll': 145,\n        'capslock': 20,\n        'caps_lock': 20,\n        'caps': 20,\n        'numlock': 144,\n        'num_lock': 144,\n        'num': 144,\n\n        'pause': 19,\n        'break': 19,\n\n        'insert': 45,\n        'home': 36,\n        'delete': 46,\n        'end': 35,\n\n        'pageup': 33,\n        'page_up': 33,\n        'pu': 33,\n\n        'pagedown': 34,\n        'page_down': 34,\n        'pd': 34,\n\n        'left': 37,\n        'up': 38,\n        'right': 39,\n        'down': 40,\n\n        'f1': 112,\n        'f2': 113,\n        'f3': 114,\n        'f4': 115,\n        'f5': 116,\n        'f6': 117,\n        'f7': 118,\n        'f8': 119,\n        'f9': 120,\n        'f10': 121,\n        'f11': 122,\n        'f12': 123\n    };\n\n    private modifiers = {\n        shift: { wanted: false, pressed: false },\n        ctrl: { wanted: false, pressed: false },\n        alt: { wanted: false, pressed: false },\n        meta: { wanted: false, pressed: false }\t//Meta is Mac specific\n    };\n\n    public eventCallback: Function;\n    public target: any;\n    public event: KeyboardEvent;\n    public option: ShortcutOption;\n    public shorcut: string;\n    public callback: Function;\n\n    public constructor(\n        element: any,\n        shorcutCombination: string,\n        option: ShortcutOption,\n        callback: (e?: JQueryEventObject) => void\n    ) {\n        \"ngInject\";\n\n        this.target = element;\n        this.shorcut = shorcutCombination;\n        this.event = option.Type;\n        this.option = option;\n        this.callback = callback;\n\n        this.eventCallback = (event: JQueryEventObject) => {\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\n            let code: number;\n\n            if (this.option.DisableInInput) { //Don't enable shortcut keys in Input, Textarea fields\n                let element;\n                if (e.target) {\n                    element = e.target;\n                } else if (e.srcElement) {\n                    element = e.srcElement;\n                }\n\n                if (element.nodeType == 3) {\n                    element = element.parentNode;\n                }\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\n            }\n            //Find Which key is pressed\n            if (e.keyCode) {\n                code = e.keyCode;\n            } else if (e.which) {\n                code = e.which;\n            }\n\n            let character = String.fromCharCode(code).toLowerCase();\n\n            if (code == 188) character = \",\"; //If the user presses , when the type is onkeydown\n            if (code == 190) character = \".\"; //If the user presses , when the type is onkeydown\n\n            let keys: string[] = this.shorcut.split(\"+\");\n            //Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\n            let kp: number = 0;\n\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\n\n            let i: number = 0;\n            for (i = 0; i < keys.length; i++) {\n                let k: string = keys[i];\n                //Modifiers\n                if (k == 'ctrl' || k == 'control') {\n                    kp++;\n                    this.modifiers.ctrl.wanted = true;\n                } else if (k == 'shift') {\n                    kp++;\n                    this.modifiers.shift.wanted = true;\n                } else if (k == 'alt') {\n                    kp++;\n                    this.modifiers.alt.wanted = true;\n                } else if (k == 'meta') {\n                    kp++;\n                    this.modifiers.meta.wanted = true;\n                } else if (k.length > 1) { //If it is a special key\n                    if (this.special_keys[k] == code) {\n                        kp++;\n                    }\n                } else if (this.option.Keycode) {\n                    if (this.option.Keycode == code) kp++;\n                } else { //The special keys did not match\n                    if (character == k) kp++;\n                    else {\n                        if (this.shift_nums[character] && e.shiftKey) { //Stupid Shift key bug created by using lowercase\n                            character = this.shift_nums[character];\n                            if (character == k) {\n                                kp++;\n                            }\n                        }\n                    }\n                }\n            }\n            \n            if (kp == keys.length &&\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\n\n                this.callback(e);\n\n                if (!this.option.Propagate) { //Stop the event\n                    //e.cancelBubble is supported by IE - this will kill the bubbling process.\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n\n                    //e.stopPropagation works in Firefox.\n                    if (e.stopPropagation) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }\n\n                    return false;\n                }\n            }\n            this.modifiers.ctrl.pressed = false;\n            this.modifiers.shift.pressed = false;\n            this.modifiers.alt.pressed = false;\n            this.modifiers.meta.pressed = false;\n        };\n    }\n}\n","'use strict';\n\nimport  {\n    KeyboardShortcut,\n    ShortcutOption,\n    KeyboardEvent\n} from \"./KeyboardShortcut\";\n\nexport interface IKeyboardShortcuts {\n    [key: string]: KeyboardShortcut\n}\n\nexport interface IShortcutsRegisterService {\n    add(shorcutName: string, callback: () => void, options: ShortcutOption): void;\n    remove(shorcutName: string): void;\n\n    shorcuts: IKeyboardShortcuts\n}\n\nexport interface IShortcutsRegisterProvider extends ng.IServiceProvider {\n    option: ShortcutOption;\n}\n\nexport class ShortcutsRegister implements IShortcutsRegisterService {\n    private _log: ng.ILogService;\n    private _defaultOption: ShortcutOption;\n    private _shortcuts: IKeyboardShortcuts;\n\n    public constructor(\n        $log: ng.ILogService,\n        option: ShortcutOption\n    ) {\n        \"ngInject\";\n        this._log = $log;\n        this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\n\n        this._shortcuts = {};\n    }\n\n    private getDefaultOption(): ShortcutOption {\n        let defaultOption: ShortcutOption = {\n            Type: KeyboardEvent.Keydown,\n            Propagate: false,\n            DisableInInput: false,\n            Target: document,\n            Keycode: null\n        };\n\n        return defaultOption;\n    }\n\n    private checkAddShortcut(element: any, shorcutCombination: string, callback: (e: JQueryEventObject) => void): boolean {\n        if (!element) {\n            this._log.error('Register shortcut: element undentified!');\n\n            return false;\n        }\n\n        if (!shorcutCombination) {\n            this._log.error('Register shortcut: shorcut combination undentified!');\n\n            return false;\n        }\n\n        if (!callback) {\n            this._log.error('Register shortcut: shorcut callback undentified!');\n\n            return false;\n        }\n\n        return true;\n    }\n\n    public get shorcuts(): IKeyboardShortcuts {\n        return this._shortcuts;\n    }\n\n    public add(shorcutName: string, callback: (e: JQueryEventObject) => void, option: ShortcutOption): void {\n        this.remove(shorcutName);\n        let shorcutOption: ShortcutOption = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\n        let shorcutCombination: string = shorcutName.toLowerCase();\n        let element = shorcutOption.Target;\n\n\n        if (typeof shorcutOption.Target == 'string') {\n            element = document.getElementById(shorcutOption.Target);\n        } else {\n            element = shorcutOption.Target;\n        }\n\n        if (!this.checkAddShortcut(element, shorcutCombination, callback)) {\n            \n            return\n        }\n\n        let newKeyboardShortcut = new KeyboardShortcut(element, shorcutCombination, shorcutOption, callback);\n\n\t\tthis._shortcuts[shorcutCombination] = newKeyboardShortcut;\n\n\t\t//Attach the function with the event\n\t\tif (element.addEventListener) { \n            element.addEventListener(shorcutOption.Type, newKeyboardShortcut.eventCallback, false);\n        } else if (element.attachEvent) { \n            element.attachEvent('on' + shorcutOption.Type, newKeyboardShortcut.eventCallback);\n        } else { \n            element.on(shorcutOption.Type, newKeyboardShortcut.eventCallback); \n        }\n    }\n\n    public remove(shorcutName: string): void {\n\t\tlet shortcutCombination = shorcutName.toLowerCase();\n\t\tlet binding: KeyboardShortcut = this._shortcuts[shortcutCombination];\n\n\t\tdelete(this._shortcuts[shortcutCombination])\n\t\tif (!binding) return;\n\n\t\tlet type = binding.event;\n\t\tlet element = binding.target;\n\t\tlet callback = binding.eventCallback;\n\n\t\tif (element.detachEvent) {\n            element.detachEvent('on' + type, callback);\n        } else if (element.removeEventListener) { \n            element.removeEventListener(type, callback, false);\n        } else { \n            // element['on' + type] = false;\n            element.off(type, callback);\n        }\n    }\n}\n\n\n\nclass ShortcutsRegisterProvider implements IShortcutsRegisterProvider {\n    private _service: ShortcutsRegister;\n    private _option: ShortcutOption;\n\n    public get option(): ShortcutOption {\n        return this._option;\n    }\n\n    public set option(value: ShortcutOption) {\n        this._option = value || new ShortcutOption();\n    }\n\n    public $get(\n        $log: ng.ILogService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ShortcutsRegister($log, this._option);\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipShortcuts')\n    .provider('pipShortcutsRegister', ShortcutsRegisterProvider);\n","'use strict';\n\nimport  {\n    ShortcutOption,\n} from \"./KeyboardShortcut\";\n\nimport  {\n    IShortcutsRegisterService,\n} from \"./ShorcutsRegisterService\";\n\n\n    // thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\n    //     return {\n    //         restrict: 'A',\n    //         scope: false,\n\nclass ShortcutController {\n    private _log: ng.ILogService;\n\n    private actionShortcuts: Function;\n    private nameShortcuts: string;\n    private options: ShortcutOption;\n\n    constructor(\n        $element: any,\n        $attrs: any,\n        $scope: ng.IScope,\n        $log: ng.ILogService,\n        $parse: any,\n        pipShortcutsRegister: IShortcutsRegisterService\n    ) {\n        \"ngInject\";\n        this._log = $log;\n\n        if ($attrs.pipShortcutAction) {\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\n            let a1 = $attrs.pipShortcutAction;\n            this.actionShortcuts($scope, {$event: {}});\n        } else {\n            this._log.error('Shorcunt action does not set.');\n\n            return\n        }\n\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\n            this.nameShortcuts = $attrs.pipShortcutName;\n        } else {\n            this._log.error('Shorcunt name does not set.');\n\n            return\n        }\n\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOption>$attrs.pipShorcutOptions : <ShortcutOption>{};\n        this.options.Target = $element;\n        // regester keyboard shortcut\n        pipShortcutsRegister.add(this.nameShortcuts, (e?: any) => {\n            this.actionShortcuts($scope, {$event: {'e': e}});          \n        }, this.options);\n    }\n\n    private keypressShortcut(action) {\n        this.actionShortcuts();\n    }\n}\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function shortcutsDirective($parse) {\n        return {\n            restrict: 'A',\n            scope: false,            \n            controller: ShortcutController\n        };\n    }\n\n    angular\n        .module('pipShortcuts')\n        .directive('pipShortcut', shortcutsDirective);\n})();","'use strict';\n\n\nimport {\n    ShortcutsRegister\n} from \"./ShorcutsRegisterService\"\nimport  {\n    KeyboardShortcut,\n    ShortcutOption,\n    KeyboardEvent\n} from \"./KeyboardShortcut\";\n\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\n\nexport class ShortcutItem {\n    // Shortcut combination\n    public shortcut: string;\n    // target object \n    public target?: any;\n    // target element by Id\n    public targetId?: string;\n    // // target element by class (firstelement??)\n    // public targetClass?: string;\n    // Access function\n    public access?: (event: JQueryEventObject) => boolean;\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public keypress?: (event: JQueryEventObject) => void;\n    // default options\n    public options?: ShortcutOption;    \n}\n\n// export class ShortcutItem extends SimpleShortcutItem {\n//     public shortcuts: SimpleShortcutItem[];\n// }\n\nexport class ShortcutsConfig {\n    // Global shortcut \n    public globalShortcuts: ShortcutItem[] = [];\n    // Local shortcut \n    public localShortcuts: ShortcutItem[] = [];\n    // default options\n    public defaultOptions: ShortcutOption = null;\n}\n\nexport interface IShortcutsService {\n    readonly config: ShortcutsConfig;\n\n    globalShortcuts: ShortcutItem[];\n    localShortcuts: ShortcutItem[];\n\n    on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void;\n    onLocal(localShortcuts?: ShortcutItem[]): void;\n    off(): void;\n}\n\nexport interface IShortcutsProvider extends ng.IServiceProvider {\n    config: ShortcutsConfig;\n    \n    globalShortcuts: ShortcutItem[];\n    localShortcuts: ShortcutItem[];\n    defaultOptions: ShortcutOption;\n}\n\nclass ShortcutsService implements IShortcutsService {\n    private _config: ShortcutsConfig;\n    private _oldConfig: ShortcutsConfig;\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n    private _location: ng.ILocationService;\n    private _injector: ng.auto.IInjectorService;    \n    private _pipShortcutsRegister: ShortcutsRegister;\n\n    public constructor(\n        config: ShortcutsConfig,\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService, \n        $location: ng.ILocationService, \n        $injector: ng.auto.IInjectorService,\n        pipShortcutsRegister: ShortcutsRegister\n    ) {\n        this._config = config;\n        this._oldConfig = _.cloneDeep(this._config);\n        this._rootScope = $rootScope;\n        this._window = $window;\n        this._location = $location;\n        this._injector = $injector;    \n        this._pipShortcutsRegister = pipShortcutsRegister;\n\n        // add shortcuts\n        this.addShortcuts(this._config.globalShortcuts);\n        this.addShortcuts(this._config.localShortcuts);        \n    }\n\n    // private declaration \n    private sendChangeEvent() {\n        // remove shortcuts\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\n        this.removeShortcuts(this._oldConfig.localShortcuts);\n        // add shortcuts\n        this.addShortcuts(this._config.globalShortcuts);\n        this.addShortcuts(this._config.localShortcuts);\n\n        this._rootScope.$emit(ShortcutsChangedEvent, this._config);\n        // save current config to oldConfig\n        this._oldConfig = _.cloneDeep(this._config);\n    }\n\n    private removeShortcuts(collection: ShortcutItem[]): void {\n        _.each(collection, (k) => {\n            this._pipShortcutsRegister.remove(k.shortcut);\n        });\n    }\n\n    private keypressShortcut(shorcut: ShortcutItem, event: JQueryEventObject) {\n        if (shorcut.access && _.isFunction(shorcut.access)) {\n            if (!shorcut.access(event)) {\n                return;\n            }\n        } \n\n        if (shorcut.keypress) {\n            shorcut.keypress(event);\n            return;\n        }\n\n        if (shorcut.href) {\n            this._window.location.href = shorcut.href;\n            return;\n        }\n\n        if (shorcut.url) {\n            this._location.url(shorcut.url);\n            return;\n        }\n\n        if (shorcut.state) {\n            if (this._injector.has('$state')) {\n                var $state = this._injector.get('$state');\n                $state['go'](shorcut.state, shorcut.stateParams);\n            }\n            return;\n        }\n\n        if (shorcut.event) {\n            this._rootScope.$broadcast(shorcut.event);\n        } else {\n            // Otherwise raise notification\n            this._rootScope.$broadcast('pipShortcutKeypress', shorcut.shortcut);\n        }\n    }\n\n    private addShortcuts(collection: ShortcutItem[]): void {\n        let generalOptions: ShortcutOption = this._config.defaultOptions ? this._config.defaultOptions : <ShortcutOption>{};\n        \n        _.each(collection, (k) => {\n            let option: ShortcutOption = k.options ? k.options : generalOptions;\n            let target: any;\n\n            target = k.target ? k.target : k.targetId;\n            option.Target = target;\n            // regester keyboard shortcut\n            this._pipShortcutsRegister.add(k.shortcut, (e?: any) => {\n                this.keypressShortcut(k, e);        \n            }, option);              \n        });\n    }\n\n    // public declaration \n\n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public get defaultOptions(): ShortcutOption {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOption) {\n        this._config.defaultOptions = value || null;\n        this.sendChangeEvent();\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get localShortcuts(): ShortcutItem[] {\n        return this._config.localShortcuts;\n    }\n\n    public set localShortcuts(value: ShortcutItem[]) {\n        this._config.localShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n\n    public on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void {\n        if (globalShortcuts && _.isArray(globalShortcuts)) {\n            this._config.globalShortcuts = globalShortcuts;    \n        }\n        if (localShortcuts && _.isArray(localShortcuts)) {\n            this._config.localShortcuts = localShortcuts;    \n        }        \n\n        this.sendChangeEvent();\n    }\n\n    public onLocal(localShortcuts?: ShortcutItem[]): void {\n        if (localShortcuts && _.isArray(localShortcuts)) {\n            this._config.localShortcuts = localShortcuts;    \n        }        \n\n        this.sendChangeEvent();\n    }\n\n    public off(): void {\n        this._config.globalShortcuts = [];\n        this._config.localShortcuts = [];\n        this.sendChangeEvent();\n    }\n}\n\nclass ShortcutsProvider implements IShortcutsProvider {\n    private _config: ShortcutsConfig = new ShortcutsConfig();\n    private _service: ShortcutsService;\n\n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public set config(value: ShortcutsConfig) {\n        this._config = value || new ShortcutsConfig();\n    }\n\n    public get defaultOptions(): ShortcutOption {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOption) {\n        this._config.defaultOptions = value || null;\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n    }\n\n    public get localShortcuts(): ShortcutItem[] {\n        return this._config.localShortcuts;\n    }\n\n    public set localShortcuts(value: ShortcutItem[]) {\n        this._config.localShortcuts = value || [];\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService, \n        $window: ng.IWindowService, \n        $location: ng.ILocationService, \n        $injector: ng.auto.IInjectorService,\n        pipShortcutsRegister: ShortcutsRegister\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutsRegister);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipShortcuts')\n    .provider('pipShortcuts', ShortcutsProvider);\n\n","'use strict';\n\nangular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\n\nimport './ShorcutsRegisterService';\nimport './ShortcutsService';\nimport './ShortcutDirective';\n\nexport * from './ShortcutsService';\nexport * from './ShorcutsRegisterService';","/**\n * @file Keyboard navigation with scrolling over non-focusable controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipSelected\", []);\n\n    thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function ($scope: any, $element, $attrs: any) {\n                var\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\n                    indexSetter = indexGetter ? indexGetter.assign : null,\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\n                    idSetter = idGetter ? idGetter.assign : null,\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\n                    noScroll = toBoolean($attrs.pipNoScroll),\n                    modifier = toBoolean($attrs.pipSkipHidden) ? ':visible' : '',\n                    className = toBoolean($attrs.pipTreeList) ? '.pip-selectable-tree' : '.pip-selectable',\n                    selectedIndex = indexGetter($scope),\n                    currentElementTabinex = $element.attr('tabindex'),\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\n                    isScrolled = false;\n\n                // variables for touch    \n                var touchStartX, touchStartY, trackingClick, trackingClickStart, targetElement, lastClickTime, cancelNextClick;\n                // constant for touch\n                var touchBoundary = 10,\n                    tapdelay = 200,\n                    tapTimeout = 700;\n\n                // Set tabindex if it's not set yet\n                $element.attr('tabindex', currentElementTabinex || 0);\n                \n                $element.on('click', className, onClickEvent);\n                $element.on('touchstart', className, onTouchStart);\n                $element.on('touchmove', className, onTouchMove);\n                $element.on('touchend', className, onTouchEnd);\n                $element.on('touchcancel', className, onTouchCancel);\n                $element.on('keydown', onKeyDown);\n                $element.on('focusin', onFocusIn);\n                $element.on('focusout', onFocusOut);\n\n                // Watch selected item index\n                if (!toBoolean($attrs.pipTreeList)) {\n                    $scope.$watch(indexGetter, function (newSelectedIndex) {\n                        selectItem({ itemIndex: newSelectedIndex });\n                    });\n                } else {\n                    $scope.$watch(idGetter, function (newSelectedId) {\n                        setTimeout(function () {\n                            selectItem({ itemId: newSelectedId, raiseEvent: true });\n                        }, 0);\n                    });\n                }\n\n                // Watch resync selection\n                if (pipSelectedWatch) {\n                    $scope.$watch(pipSelectedWatch, function () {\n                        // Delay update to allow ng-repeat to update DOM\n                        setTimeout(function () {\n                            selectedIndex = indexGetter($scope);\n                            selectItem({ itemIndex: selectedIndex });\n                        }, 100);\n                    });\n                }\n\n                // Select item defined by index\n                selectItem({ itemIndex: selectedIndex, items: $element.find(className) });\n\n                // Converts value into boolean\n                function toBoolean(value) {\n                    if (value == null) return false;\n                    if (!value) return false;\n                    value = value.toString().toLowerCase();\n                    return value == '1' || value == 'true';\n                };\n\n                // Functions and listeners\n                function selectItem(itemParams) {\n                    if (isScrolled) return;\n                    var itemIndex = itemParams.itemIndex,\n                        itemId = itemParams.itemId,\n                        items = itemParams.items || $element.find(className + modifier),\n                        itemsLength = items.length,\n                        item = (function () {\n                            if (itemParams.item) return itemParams.item;\n                            if (itemIndex === undefined && itemIndex === -1) {\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\n                            }\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\n                                return items[itemIndex]\n                            }\n                        } ()),\n                        raiseEvent = itemParams.raiseEvent;\n\n                    if (item) {\n                        $element.find(className).removeClass('selected md-focused');\n                        item = angular.element(item)\n                            .addClass('selected md-focused')\n                            .focus(); // todo сдвигает список тут, на первом проходе\n                        if (!noScroll) scrollToItem(item);\n                        if (raiseEvent) defineSelectedIndex(items);\n                    }\n                };\n\n                function defineSelectedIndex(items) {\n                    var oldSelectedIndex = selectedIndex;\n                    selectedIndex = -1;\n                    for (var index = 0; index < items.length; index++) {\n                        if ($(items[index]).hasClass('selected')) {\n                            selectedIndex = index;\n\n                            break;\n                        }\n                    }\n\n                    // Execute callback to notify about item select\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\n                        $scope.$apply(updateIndex);\n                    } else {\n                        $scope.$apply(onSelect);\n                    }\n\n                    function updateIndex() {\n                        var selectedItem = angular.element(items[selectedIndex]),\n                            selectedId = selectedItem.attr('pip-id');\n\n                        if (indexSetter) indexSetter($scope, selectedIndex);\n                        if (idSetter) idSetter($scope, selectedId);\n                        onSelect();\n                    };\n\n                    function onSelect() {\n                        var selectedItem = angular.element(items[selectedIndex]),\n                            selectedId = selectedItem.attr('pip-id');\n\n                        if (changeGetter) {\n                            changeGetter($scope, {\n                                $event: {\n                                    target: $element,\n                                    item: selectedItem,\n                                    index: selectedIndex,\n                                    id: selectedId,\n                                    newIndex: selectedIndex,\n                                    oldIndex: oldSelectedIndex\n                                }\n                            });\n                        }\n                    }\n                };\n\n                function scrollToItem($item) {\n                    if (noScroll) return;\n\n                    var\n                        containerTop = $element.offset().top,\n                        containerHeight = $element.height(),\n                        containerBottom = containerTop + containerHeight,\n                        itemTop = $item.offset().top,\n                        itemHeight = $item.outerHeight(true),\n                        itemBottom = itemTop + itemHeight,\n                        containerScrollTop = $element.scrollTop();\n\n                    isScrolled = true;\n                    setTimeout(function () {\n                        isScrolled = false;\n                    }, 100);\n\n                    if (containerTop > itemTop) {\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\n                    }\n                    else if (containerBottom < itemBottom) {\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\n                    }\n\n                };\n\n                function getTargetElementFromEventTarget(eventTarget) {\n                    // On some older browsers the event target may be a text node.\n                    if (eventTarget.nodeType === Node.TEXT_NODE) {\n                        return eventTarget.parentNode;\n                    }\n\n                    return eventTarget;\n                };\n\n                function touchHasMoved(event) {\n                    var touch = event.changedTouches[0], boundary = touchBoundary; //Touchmove boundary, beyond which a click will be cancelled.\n\n                    if (Math.abs(touch.pageX - touchStartX) > boundary || Math.abs(touch.pageY - touchStartY) > boundary) {\n                        return true;\n                    }\n\n                    return false;\n                };\n\n                function onClickEvent(event) {\n                    selectItem({ item: event.currentTarget, raiseEvent: true });\n                }\n\n                function onTouchStart(ev) {\n                    //ev.preventDefault();\n\n                    let event = ev.originalEvent;\n                    if (event['targetTouches'].length > 1) {\n                        return true;\n                    }\n                    let targetElement = getTargetElementFromEventTarget(event.target);\n                    let touch = event['targetTouches'][0];\n\n                    trackingClick = true;\n                    trackingClickStart = event.timeStamp;\n                    targetElement = targetElement;\n\n                    touchStartX = touch.pageX;\n                    touchStartY = touch.pageY;\n\n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\n                      //  event.preventDefault();\n                    }\n\n                    return true;\n                }\n\n                function onTouchMove(ev) {\n                    if (!trackingClick) {\n                        return true;\n                    }\n                    let event = ev.originalEvent;\n                    // If the touch has moved, cancel the click tracking\n                    if (targetElement !== getTargetElementFromEventTarget(event.target) || touchHasMoved(event)) {\n                        trackingClick = false;\n                        targetElement = null;\n                    }\n\n                    return true;\n                }\n\n                function onTouchEnd(ev) {\n                    var forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = targetElement;\n\n                    if (!trackingClick) {\n                        return true;\n                    }\n                    event = ev.originalEvent;\n                    // Prevent phantom clicks on fast double-tap \n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\n                        cancelNextClick = true;\n                        return true;\n                    }\n\n                    if ((event.timeStamp - trackingClickStart) > tapTimeout) {\n                        return true;\n                    }\n\n                    // Reset to prevent wrong click cancel on input \n                    cancelNextClick = false;\n\n                    lastClickTime = event.timeStamp;\n\n                    newTrackingClickStart = trackingClickStart;\n                    trackingClick = false;\n                    trackingClickStart = 0;\n\n                    selectItem({ item: ev.currentTarget, raiseEvent: true });\n\n                    return false;\n                }\n\n                function onTouchCancel(ev) {\n                    trackingClick = false;\n                    targetElement = null;\n                }\n\n                function onKeyDown(e) {\n                    var keyCode = e.which || e.keyCode;\n\n                    // Check control keyCode\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        if (enterSpaceGetter) {\n                            enterSpaceGetter($scope, {\n                                $event: {\n                                    target: $element,\n                                    index: selectedIndex,\n                                    item: $element.find('.selected')\n                                }\n                            });\n                        }\n\n                    } else\n                        if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\n                            keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\n\n                            e.preventDefault();\n                            e.stopPropagation();\n\n                            // Get next selectable control index\n                            var items = $element.find(className + modifier),\n                                inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                                newSelectedIndex = selectedIndex + inc;\n\n                            // Set next control as selected\n                            selectItem({ itemIndex: newSelectedIndex, items: items, raiseEvent: true });\n                        }\n                }\n\n                function onFocusIn(event) {\n                    // Choose selected element\n                    var items,\n                        selectedItem = $element.find(className + '.selected');\n\n                    selectedItem.addClass('md-focused');\n\n                    // If there are not selected elements then pick the first one\n                    if (selectedItem.length === 0) {\n                        selectedIndex = indexGetter($scope);\n                        items = $element.find(className + modifier);\n                        selectItem({ itemIndex: selectedIndex || 0, items: items, raiseEvent: true });\n                    }\n                }\n\n                function onFocusOut(event) {\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\n                }\n            }\n        };\n    });\n\n})();\n\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function(){\n    'use strict';\n\n    var thisModule = angular.module(\"pipUnsavedChanges\", []);\n\n    thisModule.directive(\"pipUnsavedChanges\", function ($window, $rootScope) {\n        return {\n            restrict: 'AE',\n            scope: {\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\n                afterLeave: '&pipUnsavedChangesAfterLeave',\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\n            },\n            link: function($scope: any) {\n\n                $window.onbeforeunload = function() {\n                    if ($scope.unsavedChangesAvailable()) {\n                        $rootScope.$routing = false;\n                        return $scope.unsavedChangesMessage;\n                    }\n                };\n\n                var unbindFunc = $scope.$on('$stateChangeStart', function(event) {\n                    if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\n                        $rootScope.$routing = false;\n                         _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\n                        event.preventDefault();\n                    } else {\n                        _.isFunction($scope.afterLeave) && $scope.afterLeave();\n                    }\n                });\n\n                $scope.$on('$destroy', function() {\n                    $window.onbeforeunload = null;\n                    unbindFunc();\n                });\n            }\n        };\n    });\n\n})();\n\n"]}