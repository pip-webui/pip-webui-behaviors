{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/behaviors.ts","src/draggable/draggable.ts","src/focused/focused.ts","src/infinite_scroll/infinite_scroll.ts","src/selected/selected.ts","src/unsaved_changes/unsaved_changes.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","behaviors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","thisModule","service","scope","inputEvent","event","isDefined","touches","originalEvent","directive","$rootScope","$parse","$document","$window","pipDraggable","restrict","link","element","attrs","initialize","attr","dragHandles","querySelectorAll","find","_dragHandle","toggleListeners","scrollContainer","scrollParent","parent","pipScrollContainer","scrollContainerGetter","toBoolean","value","toString","toLowerCase","enable","$on","onDestroy","$watch","pipDrag","onEnableChange","pipCenterAnchor","onCenterAnchor","on","_pressEvents","onpress","_hasTouch","nodeName","newVal","oldVal","_dragEnabled","_centerAnchor","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","_pressTimer","setTimeout","onlongpress","LONG_PRESS","_moveEvents","_releaseEvents","_elementStyle","left","css","top","position","width","clearTimeout","off","preventDefault","offset","getBoundingClientRect","_dragOffset","allowTransform","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","_deregisterRootMoveListener","origEvent","hasClass","_data","getDragData","addClass","$broadcast","x","y","tx","ty","data","onDragStartCallback","$apply","$data","$event","horizontalScroll","verticalScroll","dragToScroll","moveElement","uid","_myid","dragOffset","callback","onDragComplete","removeClass","reset","onDragStopCallback","onDragSuccessCallback","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","activationDistance","scrollDistance","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","ngDrag","DocumentTouch","$id","pipDragStart","pipDragStop","pipDragSuccess","$eval","pipDragData","pipVerticalScroll","pipHorizontalScroll","parseFloat","pipActivationDistance","pipScrollDistance","noop","$timeout","pipDrop","onDragStart","onDragMove","onDragEnd","_dropEnabled","obj","isTouching","pipDragMove","onDragMoveCallback","pipDropSuccess","onDropCallback","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","absorbEvent_","stopPropagation","cancelBubble","returnValue","$mdConstant","$scope","$element","$attrs","init","selector","withHidden","controls","controlsLength","$","keydownListener","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","increment","moveToControl","index","filter","focus","pipWithHidden","ngModel","$interval","THROTTLE_MILLISECONDS","pipInfiniteScroll","pipScrollDisabled","pipScrollUseDocumentBottom","pipScrollListenForEvent","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","handleScrollDistance","v","handleScrollDisabled","scrollEnabled","checkWhenEnabled","onContainerScroll","handleScrollUseDocumentBottom","useDocumentBottom","changeContainer","newContainer","unbind","bind","handleScrollContainer","HTMLElement","append","parents","Array","isArray","immediateCheck","unregisterEventListener","windowElement","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","_","throttle","pipScrollParent","pipScrolImmediateCheck","selectItem","itemParams","isScrolled","itemIndex","itemId","items","className","modifier","itemsLength","item","undefined","raiseEvent","noScroll","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedIndex","selectedId","indexSetter","idSetter","changeGetter","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","indexGetter","pipSelected","assign","idGetter","pipSelectedId","pipSelect","enterSpaceGetter","pipEnterSpacePress","pipNoScroll","pipSkipHidden","pipTreeList","currentElementTabinex","pipSelectedWatch","newSelectedId","newSelectedIndex","currentTarget","ENTER","SPACE","inc","unsavedChangesAvailable","unsavedChangesMessage","afterLeave","onbeforeunload","$routing","unbindFunc","confirm","isFunction"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,MAAAL,EAAAK,SAAAC,UAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,ICOA,WACI,YAEA2B,SAAQ1B,OAAO,gBACX,aACA,cACA,oBACA,oBACA,6CCbR,WACI,YAEA,IAAI2B,GAAaD,QAAQ1B,OAAO,kBAEhC2B,GAAWC,QAAQ,eAAgB,WAE/B,GAAIC,GAAQtB,IACZsB,GAAMC,WAAa,SAAUC,GACzB,MAAIL,SAAQM,UAAUD,EAAME,SACjBF,EAAME,QAAQ,GAGhBP,QAAQM,UAAUD,EAAMG,gBAAkBR,QAAQM,UAAUD,EAAMG,cAAcD,SAC9EF,EAAMG,cAAcD,QAAQ,GAEhCF,KAKfJ,EAAWQ,UAAU,WACjB,aAAU,SAAY,YAAQ,UAAkB,eAAc,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAC1D,OAEIC,SAAU,IACVC,KAAM,SAAUb,EAAYc,EAASC,GA+CjC,QAAAC,KACIF,EAAQG,KAAK,gBAAiB,QAI9B,IAAIC,EAEAA,GADAJ,EAAQ,GAAGK,iBACGtB,QAAQiB,QAAQA,EAAQ,GAAGK,iBAAiB,sBAE5CL,EAAQM,KAAK,qBAE3BF,EAAYvB,SACZ0B,EAAcH,GAElBI,GAAgB,GAIZC,GADAC,GACkB3B,QAAQiB,QAAQA,EAAQW,UACnCV,EAAMW,mBACK7B,QAAQiB,QAAQa,GAAsB3B,IAEtCH,QAAQiB,QAAQvC,QAI1C,QAAAqD,GAAmBC,GACf,MAAa,OAATA,MACCA,IACLA,EAAQA,EAAMC,WAAWC,cACT,KAATF,GAAyB,QAATA,IAG3B,QAAAP,GAAyBU,GAChBA,IAGLhC,EAAMiC,IAAI,WAAYC,GACtBlC,EAAMmC,OAAOpB,EAAMqB,QAASC,GAC5BrC,EAAMmC,OAAOpB,EAAMuB,gBAAiBC,GAEhClB,EAEAA,EAAYmB,GAAGC,EAAcC,GAG7B5B,EAAQ0B,GAAGC,EAAcC,GAExBC,GAAkD,OAArC7B,EAAQ,GAAG8B,SAASb,eAClCjB,EAAQ0B,GAAG,YAAa,WACpB,OAAO,KAKnB,QAAAN,GAAmBF,GACfV,GAAgB,GAGpB,QAAAe,GAAwBQ,EAAQC,GAC5BC,EAAe,EAGnB,QAAAR,GAAwBM,EAAQC,GACxBjD,QAAQM,UAAU0C,KAClBG,EAAiBH,GAAU,QAGnC,QAAAI,GAA4BC,GACxB,MACIrD,SAAQM,UAAUN,QAAQiB,QAAQoC,EAAIC,QAAQlC,KAAK,oBAQ3D,QAAAyB,GAAiBQ,GACRH,IAEDE,EAAmBC,IAIP,aAAZA,EAAIE,MAAqC,GAAdF,EAAIG,SAKnCC,IAEIX,GACAY,IACAC,EAAcC,WAAW,WACrBF,IACAG,EAAYR,IACbS,GACHlD,EAAU+B,GAAGoB,EAAaL,GAC1B9C,EAAU+B,GAAGqB,EAAgBN,IAE7BG,EAAYR,KAKpB,QAAAI,KACIQ,EAAcC,KAAOjD,EAAQkD,IAAI,QAAU,EAC3CF,EAAcG,IAAMnD,EAAQkD,IAAI,QAAU,EAC1CF,EAAcI,SAAWpD,EAAQkD,IAAI,YACrCF,EAAcK,MAAQrD,EAAQkD,IAAI,SAGtC,QAAAT,KACIa,aAAaZ,GACb/C,EAAU4D,IAAIT,EAAaL,GAC3B9C,EAAU4D,IAAIR,EAAgBN,GAGlC,QAAAG,GAAqBR,GACZH,IACLG,EAAIoB,iBAEJC,EAASzD,EAAQ,GAAG0D,wBAEhBC,EADAC,EACcH,GAECR,KAAMY,SAASC,KAAKC,WAAYZ,IAAKU,SAASC,KAAKE,WAItEhE,EAAQiE,QAAUjE,EAAQ,GAAGkE,YAAc,EAC3ClE,EAAQmE,QAAUnE,EAAQ,GAAGoE,aAAe,EAE5CC,EAAMxE,EAAaV,WAAWiD,GAAKkC,MACnCC,EAAM1E,EAAaV,WAAWiD,GAAKoC,MACnCC,EAAOJ,EAAMZ,EAAOR,KACpByB,EAAOH,EAAMd,EAAON,IAChBjB,GACAyC,EAAMN,EAAMrE,EAAQiE,QAAUrE,EAAQgF,YACtCC,EAAMN,EAAMvE,EAAQmE,QAAUvE,EAAQkF,cAEtCH,EAAMN,EAAMI,EAAO7E,EAAQgF,YAC3BC,EAAMN,EAAMG,EAAO9E,EAAQkF,aAG/BnF,EAAU+B,GAAGoB,EAAaiC,GAC1BpF,EAAU+B,GAAGqB,EAAgBiC,GAK7BC,GAA8BxF,EAAW0B,IAAI,gCAAiC,SAAU/B,EAAO8F,GAC3FH,EAAOG,MAIf,QAAAH,GAAgB3C,GACPH,IACLG,EAAIoB,iBAECxD,EAAQmF,SAAS,kBAClBC,EAAQC,EAAYnG,GACpBc,EAAQsF,SAAS,gBACjB7F,EAAW8F,WAAW,mBAClBC,EAAGnB,EACHoB,EAAGlB,EACHmB,GAAIf,EACJgB,GAAId,EACJzF,MAAOgD,EACPpC,QAASA,EACT4F,KAAMR,IAGNS,GACA3G,EAAM4G,OAAO,WACTD,EAAoB3G,GAAQ6G,MAAOX,EAAOY,OAAQ5D,OAK9DiC,EAAMxE,EAAaV,WAAWiD,GAAKkC,MACnCC,EAAM1E,EAAaV,WAAWiD,GAAKoC,OAE/ByB,GAAoBC,IACpBC,IAGAjE,GACAyC,EAAMN,EAAMrE,EAAQiE,QAAUN,EAAYV,KAC1C4B,EAAMN,EAAMvE,EAAQmE,QAAUR,EAAYR,MAE1CwB,EAAMN,EAAMI,EAAOd,EAAYV,KAC/B4B,EAAMN,EAAMG,EAAOf,EAAYR,KAGnCiD,EAAYzB,EAAKE,GAEjBpF,EAAW8F,WAAW,kBAClBC,EAAGnB,EACHoB,EAAGlB,EACHmB,GAAIf,EACJgB,GAAId,EACJzF,MAAOgD,EACPpC,QAASA,EACT4F,KAAMR,EACNiB,IAAKC,EACLC,WAAY5C,KAIpB,QAAAqB,GAAmB5C,GACVH,IAELG,EAAIoB,iBACJ/D,EAAW8F,WAAW,iBAClBC,EAAGnB,EACHoB,EAAGlB,EACHmB,GAAIf,EACJgB,GAAId,EACJzF,MAAOgD,EACPpC,QAASA,EACT4F,KAAMR,EACNoB,SAAUC,EACVJ,IAAKC,IAETtG,EAAQ0G,YAAY,gBACpB1G,EAAQW,SAASL,KAAK,mBAAmBoG,YAAY,kBACrDC,IACAhH,EAAU4D,IAAIT,EAAaiC,GAC3BpF,EAAU4D,IAAIR,EAAgBiC,GAE1B4B,GACA1H,EAAM4G,OAAO,WACTc,EAAmB1H,GAAQ6G,MAAOX,EAAOY,OAAQ5D,MAIzD6C,MAGJ,QAAAwB,GAAwBrE,GACfyE,GAEL3H,EAAM4G,OAAO,WACTe,EAAsB3H,GAAQ6G,MAAOX,EAAOY,OAAQ5D,MAI5D,QAAAuE,KACQ/C,EACA5D,EAAQkD,KAAK4D,UAAW,GAAIC,UAAW,GAAIC,oBAAqB,GAAIC,gBAAiB,KAErFjH,EAAQkD,KAAKE,SAAYJ,EAAcI,SAAUD,IAAKH,EAAcG,IAAKF,KAAMD,EAAcC,KAAM8D,UAAW,GAAI1D,MAAOL,EAAcK,QAI/I,QAAA+C,GAAqBZ,EAAGC,GACpB,GAAIyB,GAASlH,EAAQkD,IAAI,QACrBU,GACA5D,EAAQkD,KACJ4D,UAAW,gDAAkDtB,EAAI,KAAOC,EAAI,UAC5EsB,UAAW,MACXC,oBAAqB,gDAAkDxB,EAAI,KAAOC,EAAI,UACtFwB,gBAAiB,sBAAwBzB,EAAI,KAAOC,EAAI,MAG5DzF,EAAQkD,KACJD,KAAQuC,EAAI,KACZrC,IAAOsC,EAAI,KACXrC,SAAY,QACZ2D,UAAW,IACX1D,MAAO6D,IAKnB,QAAAf,KACI,GAAIgB,GAAU,EAAGC,EAAU,EACvB3D,EAAS,SAAUzD,GACf,MAAOA,GAAQyD,WAAaR,KAAM,EAAGE,IAAK,GAGlD,IAAI8C,EAAkB,CAClB,GACIoB,GAAgB5D,EAAOhD,IAAiBwC,KACxCqE,EAAiB7G,GAAgB8G,aACjCC,EAAiBH,EAAgBC,CAEhCjD,GAAMgD,EAAiBI,EACxBN,GAAWO,EAELF,EAAiBnD,EAAOoD,IAC9BN,EAAUO,GAIlB,GAAIxB,EAAgB,CAChB,GACIyB,GAAelE,EAAOhD,IAAiB0C,IACvCyE,EAAkBnH,GAAgBoH,cAClCC,EAAkBH,EAAeC,CAEhCrD,GAAMoD,EAAgBF,EACvBL,GAAWM,EAAiB,GAEtBI,EAAkBvD,EAAOkD,IAC/BL,EAAUM,EAAiB,IAGnC,GAAgB,IAAZP,GAA6B,IAAZC,EAAe,CAChC,GACIW,GAAsBtH,GAAgBsD,aACtCiE,EAAqBvH,GAAgBuD,WAEzCvD,IAAgBsD,WAAWgE,EAAsBZ,GACjD1G,GAAgBuD,UAAUgE,EAAqBZ,IA1WvDlI,EAAM6B,MAAQd,EAAMgI,MACpB,IACIxE,GAA+BY,EAAKE,EAAKI,EAAKE,EAAKJ,EAAMC,EAKzDnE,EANAsC,EAAa,GACLX,GAAgB,EACxBL,EAAa,gBAAkBpE,SAAiBA,OAAQyK,cACxDvG,EAAe,uBACfmB,EAAc,sBACdC,EAAiB,mBAIjBuD,EAAQpH,EAAMiJ,IACd/C,EAAQ,KAERzB,EAAc,KAEd1B,GAAe,EAEfS,EAAc,KAEdM,KAEA6C,EAAsBnG,EAAOO,EAAMmI,eAAiB,KACpDxB,EAAqBlH,EAAOO,EAAMoI,cAAgB,KAClDxB,EAAwBnH,EAAOO,EAAMqI,iBAAmB,KACxD1E,IAAiB7E,QAAQM,UAAUY,EAAM2D,iBAAkB1E,EAAMqJ,MAAMtI,EAAM2D,gBAE7EyB,EAAc3F,EAAOO,EAAMuI,aAE3BtC,EAAiBpF,EAAUb,EAAMwI,qBAAsB,EACvDxC,EAAmBnF,EAAUb,EAAMyI,uBAAwB,EAC3DjB,EAAqBkB,WAAW1I,EAAM2I,wBAA0B,GAChElB,EAAiBiB,WAAW1I,EAAM4I,oBAAsB,GACxDnI,IAAe,EAEfD,GAAkB1B,QAAQiB,QAAQvC,QAClCoD,GAAwBnB,EAAOO,EAAMW,oBAGrCqE,GAA8BlG,QAAQ+J,IAE1C5I,UA0UhBlB,EAAWQ,UAAU,WACjB,SAAU,WAAQ,UAAU,YAAkB,eAAc,SAAAE,EAAAqJ,EAAAnJ,EAAAD,EAAAE,GAC5D,OACIC,SAAU,IACVC,KAAM,SAAUb,EAAYc,EAASC,GAmBjC,QAAAC,KACIM,GAAgB,GAGpB,QAAAA,GAAyBU,GAEhBA,IAELhC,EAAMmC,OAAOpB,EAAM+I,QAASzH,GAC5BrC,EAAMiC,IAAI,WAAYC,GACtBlC,EAAMiC,IAAI,kBAAmB8H,GAC7B/J,EAAMiC,IAAI,iBAAkB+H,GAC5BhK,EAAMiC,IAAI,gBAAiBgI,IAG/B,QAAA/H,GAAmBF,GACfV,GAAgB,GAGpB,QAAAe,GAAwBQ,EAAQC,GAC5BoH,EAAerH,EAGnB,QAAAkH,GAAqB7G,EAAKiH,GACjBD,IACLE,EAAWD,EAAI7D,EAAG6D,EAAI5D,EAAG4D,EAAIrJ,SAEzBC,EAAMmI,cACNW,EAAS,WACLlD,EAAoB3G,GAAQ6G,MAAOsD,EAAIzD,KAAMI,OAAQqD,OAKjE,QAAAH,GAAoB9G,EAAKiH,GAChBD,IACLE,EAAWD,EAAI7D,EAAG6D,EAAI5D,EAAG4D,EAAIrJ,SAEzBC,EAAMsJ,aACNR,EAAS,WACLS,EAAmBtK,GAAQ6G,MAAOsD,EAAIzD,KAAMI,OAAQqD,OAKhE,QAAAF,GAAmB/G,EAAKiH,GAGpB,MAAKD,IAAgB9C,IAAU+C,EAAIhD,KAK/BiD,EAAWD,EAAI7D,EAAG6D,EAAI5D,EAAG4D,EAAIrJ,WAEzBqJ,EAAI7C,UACJ6C,EAAI7C,SAAS6C,GAGbpJ,EAAMwJ,gBACNV,EAAS,WACLW,EAAexK,GACX6G,MAAOsD,EAAIzD,KACXI,OAAQqD,EACRM,QAASzK,EAAMqJ,MAAMrJ,EAAM6B,YAMvCd,EAAMoI,aACNU,EAAS,WACLnC,EAAmB1H,GAAQ6G,MAAOsD,EAAIzD,KAAMI,OAAQqD,UAI5DO,IAAiB,EAAOP,EAAIrJ,cA3BxB4J,IAAiB,EAAOP,EAAIrJ,SA8BpC,QAAAsJ,GAAoBO,EAAQC,EAAQC,GAChC,GAAIC,GAAWC,EAAQJ,EAAQC,EAM/B,OALA5K,GAAMoK,WAAaU,EACfA,IACAE,EAAiBlK,GAErB4J,EAAiBI,EAAUD,GACpBC,EAGX,QAAAJ,GAA0BI,EAAUD,GAC5BC,GACAhK,EAAQsF,SAAS,kBACjByE,EAAYzE,SAAS,kBACd4E,GAAkBlK,IACzBkK,EAAiB,KACjBlK,EAAQ0G,YAAY,kBACpBqD,EAAYrD,YAAY,kBAIhC,QAAAuD,GAAiBzE,EAAGC,GAChB,GAAI0E,GAASnK,EAAQ,GAAG0D,uBAGxB,OAFA8B,IAAK7F,EAAU,GAAGmE,KAAKC,WAAapE,EAAU,GAAGyK,gBAAgBrG,WACjE0B,GAAK9F,EAAU,GAAGmE,KAAKE,UAAYrE,EAAU,GAAGyK,gBAAgBpG,UACzDwB,GAAK2E,EAAOlH,MACZuC,GAAK2E,EAAOE,OACZ5E,GAAK0E,EAAOG,QACZ7E,GAAK0E,EAAOhH,IA7HvBjE,EAAM6B,MAAQd,EAAM+I,QACpB9J,EAAMoK,YAAa,CAEnB,IAAIY,GAAiB,KACjB5D,EAAQpH,EAAMiJ,IACdiB,GAAe,EAEfM,EAAiBhK,EAAOO,EAAMwJ,gBAC9B5D,EAAsBnG,EAAOO,EAAMmI,cACnCxB,EAAqBlH,EAAOO,EAAMoI,aAClCmB,EAAqB9J,EAAOO,EAAMsJ,YAEtCrJ,UA4NZlB,EAAWQ,UAAU,kBAAkB,SAAU,WAAQ,SAAQE,EAAAqJ,GAC7D,OACIjJ,SAAU,IACVC,KAAM,SAAUb,EAAYc,EAASC,GAMjC,QAAAC,KACIF,EAAQG,KAAK,gBAAiB,SAC9BK,GAAgB,GAGpB,QAAAA,GAAyBU,GAEhBA,GAELlB,EAAQ0B,GAAG,sDAAuD6I,GAGtE,QAAAA,GAAsBnL,GAClB,GAAIrB,GAAIqB,EAAMG,aAKd,OAJAxB,GAAEyF,gBAAkBzF,EAAEyF,iBACtBzF,EAAEyM,iBAAmBzM,EAAEyM,kBACvBzM,EAAE0M,cAAe,EACjB1M,EAAE2M,aAAc,GACT,EAvBXxK,SA6BZlB,EAAWQ,UAAU,gBAAiB,WAClC,OACIM,SAAU,IACVC,KAAM,SAAUb,EAAOc,EAASC,GAC5BD,EAAQM,KAAK,KAAKH,KAAK,kBAAmB,mDC1pB1D,WACI,YAEA,IAAInB,GAAaD,QAAQ1B,OAAO,gBAEhC2B,GAAWQ,UAAU,cAAc,WAAS,cAAU,SAAWuJ,EAAA4B,GAC7D,OACIpM,QAAS,WACTwB,KAAM,SAAU6K,EAAaC,EAAUC,GAWnC,QAAAC,KACI,GAAIC,GAAWC,EAAa,iBAAmB,wBAC/CC,GAAWL,EAASvK,KAAK0K,GACzBG,EAAiBD,EAASrM,OAG1BqM,EAASxJ,GAAG,QAAS,WACjBmJ,EAASvF,SAAS,yBAClB8F,EAAExN,MAAM0H,SAAS,gBAClB5D,GAAG,WAAY,WACdmJ,EAASnE,YAAY,2BAI7B,QAAA2E,GAAyBtN,GACrB,GAAIuN,GAAUvN,EAAEwN,OAASxN,EAAEuN,OAG3B,IAAIA,GAAWX,EAAYa,SAASC,YAChCH,GAAWX,EAAYa,SAASE,UAChCJ,GAAWX,EAAYa,SAASG,aAChCL,GAAWX,EAAYa,SAASI,WAAY,CAE5C7N,EAAEyF,gBAEF,IACIqI,GAAaP,GAAWX,EAAYa,SAASG,aAAeL,GAAWX,EAAYa,SAASI,WAAc,GAAI,EAC9GE,EAAgBZ,EAASa,MAAMb,EAASc,OAAO,gBAAkBH,CAGjEC,IAAiB,GAAKA,EAAgBX,GACtCD,EAASY,GAAeG,SAzCpC,GAAIf,GAAUC,EACVF,EAAaH,EAAOoB,aAExBnD,GAASgC,GACTF,EAASnJ,GAAG,UAAW2J,GAEvBT,EAAOvJ,OAAOyJ,EAAOqB,QAAS,WAC1BpD,EAASgC,KACV,oCCfnB,WACI,YAEA,IAAI/L,GAAaD,QAAQ1B,OAAO,uBAEhC2B,GAAWQ,UAAU,qBACjB,aAAS,UAAY,YAAS,SAAiB,SAAAC,EAAAG,EAAAwM,EAAA1M,GAC3C,GAAI2M,GAAwB,GAE5B,QACInN,OACIoN,kBAAmB,IACnB1L,mBAAoB,IACpBiI,kBAAmB,IACnB0D,kBAAmB,IACnBC,2BAA4B,IAC5BC,wBAAyB,KAE7B1M,KAAM,SAAS6K,EAAaC,EAAUC,GAWlC,QAAA4B,GAAgB1M,GAEZ,MADAA,GAAUA,EAAQ,IAAMA,EACpB2M,MAAM3M,EAAQoE,cACPpE,EAAQ6D,SAASuG,gBAAgBwC,aAEjC5M,EAAQoE,aAIvB,QAAAyI,GAAmB7M,GACf,GAAKA,EAAQ,GAAG0D,wBAAyB1D,EAAQkD,IAAI,QAGrD,MAAOlD,GAAQ,GAAG0D,wBAAwBP,IAAM2B,EAAY9E,GAGhE,QAAA8E,GAAqB9E,GAEjB,MADAA,GAAUA,EAAQ,IAAMA,EACpB2M,MAAMlP,OAAOqH,aACN9E,EAAQ6D,SAASuG,gBAAgBpG,UAEjChE,EAAQ8M,cAAcC,YAAYjI,YAyDjD,QAAAkI,GAA8BC,GAC1B,MAAOvF,GAAiBiB,WAAWsE,IAAM,EAK7C,QAAAC,GAA8BD,GAE1B,GADAE,GAAiBF,EACbE,GAAiBC,EAEjB,MADAA,IAAmB,EACZC,IAMf,QAAAC,GAAuCL,GACnC,MAAOM,GAAoBN,EAK/B,QAAAO,GAAyBC,GAMrB,GALuB,MAAnBhN,GACAA,EAAgBiN,OAAO,SAAUL,GAGrC5M,EAAkBgN,EACE,MAAhBA,EACA,MAAOhN,GAAgBkN,KAAK,SAAUN,GAS9C,QAAAO,GAA+BH,GAC3B,GAAqB,MAAhBA,GAAiD,IAAxBA,EAAa5O,OAA3C,CAWA,GARI4O,YAAwBI,aACxBJ,EAAe1O,QAAQiB,QAAQyN,GACO,kBAAxBA,GAAaK,OAC3BL,EAAe1O,QAAQiB,QAAQyN,EAAaA,EAAa5O,OAAS,IACnC,gBAAjB4O,KACdA,EAAe5C,EAASkD,UAAUzN,KAAKmN,IAGvB,MAAhBA,KAA0BO,MAAMC,QAAQR,IACvCO,MAAMC,QAAQR,IAAiBA,EAAa5O,OAAS,GACtD,MAAO2O,GAAgBC,EAEvB,MAAM,IAAIhP,OAAM,4CA9IxB,GAEIgC,GADA2M,EAAmB,KAEnBc,GAAiB,EACjBxG,EAAiB,KACjByF,EAAgB,KAChBgB,EAA0B,KAC1BZ,GAAoB,EACpBa,EAAgBrP,QAAQiB,QAAQJ,GA2BhCyN,EAAoB,WACpB,GACIvF,GACAuG,EACAC,EACAC,EACAC,CAqBJ,OAnBI/N,KAAoB2N,GACpBtG,EAAkB4E,EAAOjM,GAAmBqE,EAAYrE,EAAgB,GAAGoD,SAASuG,iBACpFkE,EAAgBzB,EAAUhC,GAAY6B,EAAO7B,KAE7C/C,EAAkB4E,EAAOjM,GACzB4N,EAAqB,EACc,SAA/BxB,EAAUpM,KACV4N,EAAqBxB,EAAUpM,IAEnC6N,EAAgBzB,EAAUhC,GAAYwD,EAAqB3B,EAAO7B,IAGlE0C,IACAe,EAAgB5B,GAAQ7B,EAAS,GAAGiC,eAAiBjC,EAAS,GAAGhH,UAAUuG,kBAG/EmE,EAAYD,EAAgBxG,EAC5B0G,EAAeD,GAAa7B,EAAOjM,GAAmBiH,EAAiB,EAEnE8G,GACApB,GAAmB,EACfD,EACIvC,EAAO6D,SAAWhP,EAAWgP,QACtB7D,EAAO0B,oBAEP1B,EAAO9E,OAAO8E,EAAO0B,mBAJpC,QAQOc,GAAmB,EAsFlC,OAlF6B,OAAzBf,IACAgB,EAAoBqB,EAAEC,SAAStB,EAAmBhB,IAGtDzB,EAAOzJ,IAAI,WAAY,WAEnB,GADAV,EAAgBiN,OAAO,SAAUL,GACF,MAA3Bc,EAEA,MADAA,KACOA,EAA0B,OAOzCvD,EAAOvJ,OAAO,oBAAqB2L,GACnCA,EAAqBpC,EAAO/B,mBAS5B+B,EAAOvJ,OAAO,oBAAqB6L,GACnCA,EAAqBtC,EAAO2B,mBAK5B3B,EAAOvJ,OAAO,6BAA8BiM,GAC5CA,EAA8B1C,EAAO4B,4BAarCgB,EAAgBY,GACZxD,EAAO6B,0BACP0B,EAA0B1O,EAAW0B,IAAIyJ,EAAO6B,wBAAyBY,IAsB7EzC,EAAOvJ,OAAO,qBAAsB,SAAUoM,GACtCA,IAAiBhN,GACjBmN,EAAsBH,KAE9BG,EAAsBhD,EAAOhK,wBAEC,MAA1BkK,EAAO8D,iBACPpB,EAAgBzO,QAAQiB,QAAQ6K,EAASlK,WAER,MAAjCmK,EAAO+D,yBACPX,EAAiBtD,EAAOrC,MAAMuC,EAAO+D,yBAGlCzC,EAAU,WACb,GAAI8B,EACA,MAAOb,MAEX,EAAG,oCCvL3B,WACI,YAEA,IAAIrO,GAAaD,QAAQ1B,OAAO,iBAEhC2B,GAAWQ,UAAU,eAAc,SAAU,cAAQ,WAAa,SAAQE,EAAAiL,EAAA5B,GACtE,OACIjJ,SAAU,IACVZ,OAAO,EACPa,KAAM,SAAU6K,EAAaC,EAAUC,GA+CnC,QAAAhK,GAAmBC,GACf,MAAa,OAATA,MACCA,IACLA,EAAQA,EAAMC,WAAWC,cACT,KAATF,GAAyB,QAATA,IAK3B,QAAA+N,GAAoBC,GAChB,IAAIC,EAAJ,CACA,GAAIC,GAAYF,EAAWE,UACvBC,EAASH,EAAWG,OACpBC,EAAQJ,EAAWI,OAAStE,EAASvK,KAAK8O,EAAYC,GACtDC,EAAcH,EAAMtQ,OACpB0Q,EAAQ,WACJ,MAAIR,GAAWQ,KAAaR,EAAWQ,MACrBC,SAAdP,GAA2BA,KAAc,IACzCA,EAAYE,EAAMpD,MAAMoD,EAAMnD,OAAO,WAAakD,EAAS,OAE3DD,GAAa,GAAKA,EAAYK,EACvBH,EAAMF,GADjB,WAIJQ,EAAaV,EAAWU,UAExBF,KACA1E,EAASvK,KAAK8O,GAAW1I,YAAY,uBACrC6I,EAAOxQ,QAAQiB,QAAQuP,GAClBjK,SAAS,uBACT2G,QACAyD,GAAUC,EAAaJ,GACxBE,GAAYG,EAAoBT,KAI5C,QAAAS,GAA6BT,GAgBzB,QAAAU,KACI,GAAIC,GAAe/Q,QAAQiB,QAAQmP,EAAMY,IACrCC,EAAaF,EAAa3P,KAAK,SAE/B8P,IAAaA,EAAYrF,EAAQmF,GACjCG,GAAUA,EAAStF,EAAQoF,GAC3BG,GACAA,EAAavF,GACT5E,QACI3D,OAAQwI,EACR0E,KAAMO,EACN/D,MAAOgE,EACPK,GAAIJ,EACJK,SAAUN,EACVO,SAAUC,KA7B1B,GAAIA,GAAmBR,CACvBA,IAAgB,CAChB,KAAK,GAAIhE,GAAQ,EAAGA,EAAQoD,EAAMtQ,OAAQkN,IACtC,GAAIX,EAAE+D,EAAMpD,IAAQ5G,SAAS,YAAa,CACtC4K,EAAgBhE,CAEhB,OAKJwE,GAAoBR,GAAiBA,KAAkB,GACvDnF,EAAO9E,OAAO+J,GAwBtB,QAAAF,GAAsBa,GAClB,IAAId,EAAJ,CAEA,GACI/H,GAAekD,EAASpH,SAASN,IACjCyE,EAAkBiD,EAAS6B,SAC3B5E,EAAkBH,EAAeC,EACjC6I,EAAUD,EAAM/M,SAASN,IACzBuN,EAAaF,EAAMG,aAAY,GAC/BC,EAAaH,EAAUC,EACvB1I,EAAqB6C,EAAS7G,WAE9BgL,IAAa,EACbrM,WAAW,WACPqM,GAAa,GACd,KAEHrH,EAAe8I,EACf5F,EAAS7G,UAAUgE,EAAqByI,EAAU9I,GAE7CG,EAAkB8I,GACvB/F,EAAS7G,UAAUgE,EAAqB4I,EAAa9I,IA5I7D,GACI+I,GAAc/F,EAAOgG,YAAcpR,EAAOoL,EAAOgG,aAAe,KAChEb,EAAcY,EAAcA,EAAYE,OAAS,KACjDC,EAAWlG,EAAOmG,cAAgBvR,EAAOoL,EAAOmG,eAAiB,KACjEf,EAAWc,EAAWA,EAASD,OAAS,KACxCZ,EAAerF,EAAOoG,UAAYxR,EAAOoL,EAAOoG,WAAa,KAC7DC,EAAmBrG,EAAOsG,mBAAqB1R,EAAOoL,EAAOsG,oBAAsB,KACnF1B,EAAW5O,EAAUgK,EAAOuG,aAC5BhC,EAAWvO,EAAUgK,EAAOwG,eAAiB,WAAa,GAC1DlC,EAAYtO,EAAUgK,EAAOyG,aAAe,uBAAyB,kBACrExB,EAAgBc,EAAYjG,GAC5B4G,EAAwB3G,EAAS1K,KAAK,YACtCsR,EAAmB3G,EAAO2G,iBAC1BzC,GAAa,CAGjBnE,GAAS1K,KAAK,WAAYqR,GAAyB,GAG9C1Q,EAAUgK,EAAOyG,aAKlB3G,EAAOvJ,OAAO2P,EAAU,SAASU,GAC7B/O,WAAW,WACPmM,GAAYI,OAAQwC,EAAejC,YAAY,KAChD,KAPP7E,EAAOvJ,OAAOwP,EAAa,SAASc,GAChC7C,GAAYG,UAAW0C,MAW3BF,GACA7G,EAAOvJ,OAAOoQ,EAAkB,WAE5B9O,WAAW,WACPoN,EAAgBc,EAAYjG,GAC5BkE,GAAYG,UAAWc,KACxB,OAKXjB,GAAYG,UAAWc,EAAeZ,MAAOtE,EAASvK,KAAK8O,KAsG3DvE,EAASnJ,GAAG,mBAAoB0N,EAAW,SAAUhQ,GACjD0P,GAAYS,KAAMnQ,EAAMwS,cAAenC,YAAY,MAGvD5E,EAASnJ,GAAG,UAAW,SAAU3D,GAC7B,GAAIuN,GAAUvN,EAAEwN,OAASxN,EAAEuN,OAG3B,IAAIA,GAAWX,EAAYa,SAASqG,OAASvG,GAAWX,EAAYa,SAASsG,MACzE/T,EAAEyF,iBACFzF,EAAEyM,kBAEE2G,GACAA,EAAiBvG,GACb5E,QACI3D,OAAQwI,EACRkB,MAAOgE,EACPR,KAAM1E,EAASvK,KAAK,oBAMpC,IAAIgL,GAAWX,EAAYa,SAASC,YAAcH,GAAWX,EAAYa,SAASG,aAC9EL,GAAWX,EAAYa,SAASE,UAAYJ,GAAWX,EAAYa,SAASI,WAAY,CAExF7N,EAAEyF,iBACFzF,EAAEyM,iBAGF,IAAI2E,GAAQtE,EAASvK,KAAK8O,EAAYC,GAClC0C,EAAOzG,GAAWX,EAAYa,SAASG,aAAeL,GAAWX,EAAYa,SAASI,WAAc,GAAI,EACxG+F,EAAmB5B,EAAgBgC,CAGvCjD,IAAYG,UAAW0C,EAAkBxC,MAAOA,EAAOM,YAAY,OAI3E5E,EAASnJ,GAAG,UAAW,SAAUtC,GAE7B,GAAI+P,GACAW,EAAejF,EAASvK,KAAK8O,EAAY,YAE7CU,GAAaxK,SAAS,cAGM,IAAxBwK,EAAajR,SACbkR,EAAgBc,EAAYjG,GAC5BuE,EAAQtE,EAASvK,KAAK8O,EAAYC,GAClCP,GAAYG,UAAWc,GAAiB,EAAGZ,MAAOA,EAAOM,YAAY,OAI7E5E,EAASnJ,GAAG,WAAY,SAAUtC,GAC9ByL,EAASvK,KAAK8O,EAAY,cAAgBC,GAAU3I,YAAY,iDCvNpF,WACI,YAEA,IAAI1H,GAAaD,QAAQ1B,OAAO,uBAEhC2B,GAAWQ,UAAU,qBAAqB,UAAU,aAAS,SAAUI,EAAAH,GACnE,OACIK,SAAU,KACVZ,OACI8S,wBAAyB,8BACzBC,sBAAuB,4BACvBC,WAAY,gCAEhBnS,KAAM,SAAS6K,GAEXhL,EAAQuS,eAAiB,WACrB,GAAIvH,EAAOoH,0BAEP,MADAvS,GAAW2S,UAAW,EACfxH,EAAOqH,sBAItB,IAAII,GAAazH,EAAOzJ,IAAI,oBAAqB,SAAS/B,GAClDwL,EAAOoH,4BAA8BpS,EAAQ0S,QAAQ1H,EAAOqH,wBAC5DxS,EAAW2S,UAAW,EACtBhT,EAAMoE,kBAENkL,EAAE6D,WAAW3H,EAAOsH,aAAetH,EAAOsH,cAIlDtH,GAAOzJ,IAAI,WAAY,WACnBvB,EAAQuS,eAAiB,KACzBE","file":"pip-webui-behaviors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿/**\r\n * @file Registration of all WebUI list controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipBehaviors', [\r\n        'pipFocused',\r\n        'pipSelected',\r\n        'pipInfiniteScroll',\r\n        'pipUnsavedChanges',\r\n        'pipDraggable'\r\n    ]);\r\n    \r\n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipDraggable\", []);\r\n\r\n    thisModule.service('pipDraggable', function () {\r\n\r\n        var scope = this;\r\n        scope.inputEvent = function (event) {\r\n            if (angular.isDefined(event.touches)) {\r\n                return event.touches[0];\r\n            }\r\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n                return event.originalEvent.touches[0];\r\n            }\r\n            return event;\r\n        };\r\n\r\n    });\r\n\r\n    thisModule.directive('pipDrag',\r\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\r\n            return {\r\n\r\n                restrict: 'A',\r\n                link: function (scope: any, element, attrs: any) {\r\n                    scope.value = attrs.ngDrag;\r\n                    var LONG_PRESS = 50; // 50ms for longpress\r\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\r\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n                    var _pressEvents = 'touchstart mousedown';\r\n                    var _moveEvents = 'touchmove mousemove';\r\n                    var _releaseEvents = 'touchend mouseup';\r\n                    var _dragHandle;\r\n\r\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n                    var _myid = scope.$id;\r\n                    var _data = null;\r\n\r\n                    var _dragOffset = null;\r\n\r\n                    var _dragEnabled = false;\r\n\r\n                    var _pressTimer = null;\r\n\r\n                    var _elementStyle: any = {};\r\n\r\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\r\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\r\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\r\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\r\n\r\n                    var getDragData = $parse(attrs.pipDragData);\r\n                    var\r\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\r\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\r\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\r\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\r\n                        scrollParent = false,\r\n\r\n                        scrollContainer = angular.element(window),\r\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\r\n\r\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n                    var _deregisterRootMoveListener = angular.noop;\r\n\r\n                    initialize();\r\n\r\n                    return;\r\n\r\n                    //-----------------------------------\r\n\r\n                    function initialize() {\r\n                        element.attr('pip-draggable', 'false'); // prevent native drag\r\n                        // check to see if drag handle(s) was specified\r\n                        // if querySelectorAll is available, we use this instead of find\r\n                        // as JQLite find is limited to tagnames\r\n                        let dragHandles: any;\r\n                        if (element[0].querySelectorAll) {\r\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\r\n                        } else {\r\n                            dragHandles = element.find('[pip-drag-handle]');\r\n                        }\r\n                        if (dragHandles.length) {\r\n                            _dragHandle = dragHandles;\r\n                        }\r\n                        toggleListeners(true);\r\n\r\n                        // Initialize scroll container\r\n                        if (scrollParent) {\r\n                            scrollContainer = angular.element(element.parent());\r\n                        } else if (attrs.pipScrollContainer) {\r\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\r\n                        } else {\r\n                            scrollContainer = angular.element(window);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    function toggleListeners(enable) {\r\n                        if (!enable)return;\r\n                        // add listeners.\r\n\r\n                        scope.$on('$destroy', onDestroy);\r\n                        scope.$watch(attrs.pipDrag, onEnableChange);\r\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\r\n                        // wire up touch events\r\n                        if (_dragHandle) {\r\n                            // handle(s) specified, use those to initiate drag\r\n                            _dragHandle.on(_pressEvents, onpress);\r\n                        } else {\r\n                            // no handle(s) specified, use the element as the handle\r\n                            element.on(_pressEvents, onpress);\r\n                        }\r\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\r\n                            element.on('mousedown', function () {\r\n                                return false;\r\n                            }); // prevent native drag for images\r\n                        }\r\n                    }\r\n                    \r\n                    function onDestroy(enable) {\r\n                        toggleListeners(false);\r\n                    }\r\n\r\n                    function onEnableChange(newVal, oldVal) {\r\n                        _dragEnabled = (newVal);\r\n                    }\r\n\r\n                    function onCenterAnchor(newVal, oldVal) {\r\n                        if (angular.isDefined(newVal))\r\n                            _centerAnchor = (newVal || 'true');\r\n                    }\r\n\r\n                    function isClickableElement(evt) {\r\n                        return (\r\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n                        );\r\n                    }\r\n\r\n                    /*\r\n                     * When the element is clicked start the drag behaviour\r\n                     * On touch devices as a small delay so as not to prevent native window scrolling\r\n                     */\r\n                    function onpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n\r\n                        if (isClickableElement(evt)) {\r\n                            return;\r\n                        }\r\n\r\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                            // Do not start dragging on right-click\r\n                            return;\r\n                        }\r\n\r\n                        saveElementStyles();\r\n\r\n                        if (_hasTouch) {\r\n                            cancelPress();\r\n                            _pressTimer = setTimeout(function () {\r\n                                cancelPress();\r\n                                onlongpress(evt);\r\n                            }, LONG_PRESS);\r\n                            $document.on(_moveEvents, cancelPress);\r\n                            $document.on(_releaseEvents, cancelPress);\r\n                        } else {\r\n                            onlongpress(evt);\r\n                        }\r\n\r\n                    }\r\n\r\n                    function saveElementStyles() {\r\n                        _elementStyle.left = element.css('css') || 0;\r\n                        _elementStyle.top = element.css('top') || 0;\r\n                        _elementStyle.position = element.css('position');\r\n                        _elementStyle.width = element.css('width');    \r\n                    }\r\n\r\n                    function cancelPress() {\r\n                        clearTimeout(_pressTimer);\r\n                        $document.off(_moveEvents, cancelPress);\r\n                        $document.off(_releaseEvents, cancelPress);\r\n                    }\r\n\r\n                    function onlongpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        offset = element[0].getBoundingClientRect();\r\n                        if (allowTransform)\r\n                            _dragOffset = offset;\r\n                        else {\r\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\r\n                        }\r\n\r\n\r\n                        element.centerX = element[0].offsetWidth / 2;\r\n                        element.centerY = element[0].offsetHeight / 2;\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n                        _mrx = _mx - offset.left;\r\n                        _mry = _my - offset.top;\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - element.centerX - $window.pageXOffset;\r\n                            _ty = _my - element.centerY - $window.pageYOffset;\r\n                        } else {\r\n                            _tx = _mx - _mrx - $window.pageXOffset;\r\n                            _ty = _my - _mry - $window.pageYOffset;\r\n                        }\r\n\r\n                        $document.on(_moveEvents, onmove);\r\n                        $document.on(_releaseEvents, onrelease);\r\n                        // This event is used to receive manually triggered mouse move events\r\n                        // jqLite unfortunately only supports triggerHandler(...)\r\n                        // See http://api.jquery.com/triggerHandler/\r\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\r\n                            onmove(origEvent);\r\n                        });\r\n                    }\r\n\r\n                    function onmove(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        if (!element.hasClass('pip-dragging')) {\r\n                            _data = getDragData(scope);\r\n                            element.addClass('pip-dragging');\r\n                            $rootScope.$broadcast('draggable:start', {\r\n                                x: _mx,\r\n                                y: _my,\r\n                                tx: _tx,\r\n                                ty: _ty,\r\n                                event: evt,\r\n                                element: element,\r\n                                data: _data\r\n                            });\r\n\r\n                            if (onDragStartCallback) {\r\n                                scope.$apply(function () {\r\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n\r\n                        if (horizontalScroll || verticalScroll) {\r\n                            dragToScroll();\r\n                        }\r\n\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - element.centerX - _dragOffset.left;\r\n                            _ty = _my - element.centerY - _dragOffset.top;\r\n                        } else {\r\n                            _tx = _mx - _mrx - _dragOffset.left;\r\n                            _ty = _my - _mry - _dragOffset.top;\r\n                        }\r\n\r\n                        moveElement(_tx, _ty);\r\n\r\n                        $rootScope.$broadcast('draggable:move', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            uid: _myid,\r\n                            dragOffset: _dragOffset\r\n                        });\r\n                    }\r\n\r\n                    function onrelease(evt) {\r\n                        if (!_dragEnabled)\r\n                            return;\r\n                        evt.preventDefault();\r\n                        $rootScope.$broadcast('draggable:end', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            callback: onDragComplete,\r\n                            uid: _myid\r\n                        });\r\n                        element.removeClass('pip-dragging');\r\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n                        reset();\r\n                        $document.off(_moveEvents, onmove);\r\n                        $document.off(_releaseEvents, onrelease);\r\n\r\n                        if (onDragStopCallback) {\r\n                            scope.$apply(function () {\r\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\r\n                            });\r\n                        }\r\n\r\n                        _deregisterRootMoveListener();\r\n                    }\r\n\r\n                    function onDragComplete(evt) {\r\n                        if (!onDragSuccessCallback)return;\r\n\r\n                        scope.$apply(function () {\r\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\r\n                        });\r\n                    }\r\n\r\n                    function reset() {\r\n                        if (allowTransform)\r\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\r\n                        else {\r\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\r\n                        }\r\n                    }\r\n\r\n                    function moveElement(x, y) {\r\n                        var eWidth = element.css('width');\r\n                        if (allowTransform) {\r\n                            element.css({\r\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                'z-index': 99999,\r\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                            });\r\n                        } else {\r\n                            element.css({\r\n                                'left': x + 'px',\r\n                                'top': y + 'px',\r\n                                'position': 'fixed',\r\n                                'z-index': 100,\r\n                                width: eWidth\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    function dragToScroll() {\r\n                        var scrollX = 0, scrollY = 0,\r\n                            offset = function (element) {\r\n                                return element.offset() || {left: 0, top: 0};\r\n                            };\r\n\r\n                        if (horizontalScroll) {\r\n                            var\r\n                                containerLeft = offset(scrollContainer).left,\r\n                                containerWidth = scrollContainer.innerWidth(),\r\n                                containerRight = containerLeft + containerWidth;\r\n\r\n                            if ((_mx - containerLeft) < activationDistance) {\r\n                                scrollX = -scrollDistance;\r\n                            }\r\n                            else if ((containerRight - _mx) < activationDistance) {\r\n                                scrollX = scrollDistance;\r\n                            }\r\n                        }\r\n\r\n                        if (verticalScroll) {\r\n                            var\r\n                                containerTop = offset(scrollContainer).top,\r\n                                containerHeight = scrollContainer.innerHeight(),\r\n                                containerBottom = containerTop + containerHeight;\r\n\r\n                            if ((_my - containerTop) < activationDistance) {\r\n                                scrollY = -scrollDistance + 30;\r\n                            }\r\n                            else if ((containerBottom - _my) < activationDistance) {\r\n                                scrollY = scrollDistance - 30;\r\n                            }\r\n                        }\r\n                        if (scrollX !== 0 || scrollY !== 0) {\r\n                            var\r\n                                containerScrollLeft = scrollContainer.scrollLeft(),\r\n                                containerScrollTop = scrollContainer.scrollTop();\r\n\r\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    thisModule.directive('pipDrop', \r\n        function ($parse, $timeout, $window, $document, pipDraggable) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                scope.value = attrs.pipDrop;\r\n                scope.isTouching = false;\r\n\r\n                var _lastDropTouch = null;\r\n                var _myid = scope.$id;\r\n                var _dropEnabled = false;\r\n\r\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\r\n                var onDragStartCallback = $parse(attrs.pipDragStart);\r\n                var onDragStopCallback = $parse(attrs.pipDragStop);\r\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\r\n\r\n                initialize();\r\n\r\n                return;\r\n\r\n                //----------------------\r\n\r\n                function initialize() {\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    scope.$watch(attrs.pipDrop, onEnableChange);\r\n                    scope.$on('$destroy', onDestroy);\r\n                    scope.$on('draggable:start', onDragStart);\r\n                    scope.$on('draggable:move', onDragMove);\r\n                    scope.$on('draggable:end', onDragEnd);\r\n                }\r\n\r\n                function onDestroy(enable) {\r\n                    toggleListeners(false);\r\n                }\r\n\r\n                function onEnableChange(newVal, oldVal) {\r\n                    _dropEnabled = newVal;\r\n                }\r\n\r\n                function onDragStart(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragStart) {\r\n                        $timeout(function () {\r\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragMove(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragMove) {\r\n                        $timeout(function () {\r\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragEnd(evt, obj) {\r\n                    // don't listen to drop events if this is the element being dragged\r\n                    // only update the styles and return\r\n                    if (!_dropEnabled || _myid === obj.uid) {\r\n                        updateDragStyles(false, obj.element);\r\n                        return;\r\n                    }\r\n\r\n                    if (isTouching(obj.x, obj.y, obj.element)) {\r\n                        // call the pipDraggable pipDragSuccess element callback\r\n                        if (obj.callback) {\r\n                            obj.callback(obj);\r\n                        }\r\n\r\n                        if (attrs.pipDropSuccess) {\r\n                            $timeout(function () {\r\n                                onDropCallback(scope, {\r\n                                    $data: obj.data,\r\n                                    $event: obj,\r\n                                    $target: scope.$eval(scope.value)\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (attrs.pipDragStop) {\r\n                        $timeout(function () {\r\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n\r\n                    updateDragStyles(false, obj.element);\r\n                }\r\n\r\n                function isTouching(mouseX, mouseY, dragElement) {\r\n                    var touching = hitTest(mouseX, mouseY);\r\n                    scope.isTouching = touching;\r\n                    if (touching) {\r\n                        _lastDropTouch = element;\r\n                    }\r\n                    updateDragStyles(touching, dragElement);\r\n                    return touching;\r\n                }\r\n\r\n                function updateDragStyles(touching, dragElement) {\r\n                    if (touching) {\r\n                        element.addClass('pip-drag-enter');\r\n                        dragElement.addClass('pip-drag-over');\r\n                    } else if (_lastDropTouch == element) {\r\n                        _lastDropTouch = null;\r\n                        element.removeClass('pip-drag-enter');\r\n                        dragElement.removeClass('pip-drag-over');\r\n                    }\r\n                };\r\n\r\n                function hitTest(x, y) {\r\n                    var bounds = element[0].getBoundingClientRect();\r\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\r\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\r\n                    return x >= bounds.left\r\n                        && x <= bounds.right\r\n                        && y <= bounds.bottom\r\n                        && y >= bounds.top;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    //thisModule.directive('pipDragClone', function ($parse, $timeout, pipDraggable) {\r\n    //    return {\r\n    //        restrict: 'A',\r\n    //        link: function (scope, element, attrs) {\r\n    //            var img, _allowClone = true;\r\n    //            var _dragOffset = null;\r\n    //            scope.clonedData = {};\r\n    //            initialize();\r\n    //            return;\r\n\r\n    //            function initialize() {\r\n//\r\n    //                img = element.find('img');\r\n    //                element.attr('pip-draggable', 'false');\r\n    //                img.attr('draggable', 'false');\r\n    //                reset();\r\n    //                toggleListeners(true);\r\n    //            }\r\n//\r\n//\r\n    //            function toggleListeners(enable) {\r\n    //                // remove listeners\r\n//\r\n    //                if (!enable)return;\r\n    //                // add listeners.\r\n    //                scope.$on('draggable:start', onDragStart);\r\n    //                scope.$on('draggable:move', onDragMove);\r\n    //                scope.$on('draggable:end', onDragEnd);\r\n    //                preventContextMenu();\r\n//\r\n    //            }\r\n\r\n    //            function preventContextMenu() {\r\n    //                //  element.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                img.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                //  element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                img.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //            }\r\n\r\n    //            function onDragStart(evt, obj, elm) {\r\n    //                _allowClone = true;\r\n    //                if (angular.isDefined(obj.data.allowClone)) {\r\n    //                    _allowClone = obj.data.allowClone;\r\n    //                }\r\n    //                if (_allowClone) {\r\n    //                    scope.$apply(function () {\r\n    //                        scope.clonedData = obj.data;\r\n    //                    });\r\n    //                    element.css('width', obj.element[0].offsetWidth);\r\n    //                    element.css('height', obj.element[0].offsetHeight);\r\n//\r\n    //                    moveElement(obj.tx, obj.ty);\r\n    //                }\r\n//\r\n    //            }\r\n\r\n    //            function onDragMove(evt, obj) {\r\n    //                if (_allowClone) {\r\n//\r\n    //                    _tx = obj.tx + obj.dragOffset.left;\r\n    //                    _ty = obj.ty + obj.dragOffset.top;\r\n//\r\n    //                    moveElement(_tx, _ty);\r\n    //                }\r\n    //            }\r\n\r\n    //            function onDragEnd(evt, obj) {\r\n    //                //moveElement(obj.tx,obj.ty);\r\n    //                if (_allowClone) {\r\n    //                    reset();\r\n    //                }\r\n    //            }\r\n//\r\n    //            function reset() {\r\n    //                element.css({left: 0, top: 0, position: 'fixed', 'z-index': -1, visibility: 'hidden'});\r\n    //            }\r\n\r\n    //            function moveElement(x, y) {\r\n    //                element.css({\r\n    //                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n    //                    'z-index': 99999,\r\n    //                    'visibility': 'visible',\r\n    //                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n    //                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n    //                    //,margin: '0'  don't monkey with the margin,\r\n    //                });\r\n    //            }\r\n//\r\n    //            function absorbEvent_(event) {\r\n    //                var e = event;//.originalEvent;\r\n    //                e.preventDefault && e.preventDefault();\r\n    //                e.stopPropagation && e.stopPropagation();\r\n    //                e.cancelBubble = true;\r\n    //                e.returnValue = false;\r\n    //                return false;\r\n    //            }\r\n//\r\n    //        }\r\n    //    };\r\n    //});\r\n\r\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                initialize();\r\n\r\n                return;\r\n                //---------------------\r\n\r\n                function initialize() {\r\n                    element.attr('pip-draggable', 'false');\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n                }\r\n\r\n                function absorbEvent_(event) {\r\n                    var e = event.originalEvent;\r\n                    e.preventDefault && e.preventDefault();\r\n                    e.stopPropagation && e.stopPropagation();\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    thisModule.directive('pipCancelDrag', function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attrs) {\r\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n            }\r\n        };\r\n    });\r\n})();\r\n\r\n","/**\r\n * @file Keyboard navigation over few focusable controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipFocused\", []);\r\n\r\n    thisModule.directive('pipFocused', function($timeout, $mdConstant) {\r\n        return {\r\n            require: \"?ngModel\",\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var controls, controlsLength,\r\n                    withHidden = $attrs.pipWithHidden;\r\n\r\n                $timeout(init);\r\n                $element.on('keydown', keydownListener);\r\n\r\n                $scope.$watch($attrs.ngModel, function () {\r\n                    $timeout(init);\r\n                }, true);\r\n\r\n                function init() {\r\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\r\n                    controls = $element.find(selector);\r\n                    controlsLength = controls.length;\r\n\r\n                    // add needed event listeners\r\n                    controls.on('focus', function () {\r\n                        $element.addClass('pip-focused-container');\r\n                        $(this).addClass('md-focused');\r\n                    }).on('focusout', function () {\r\n                        $element.removeClass('pip-focused-container');\r\n                    });\r\n                }\r\n\r\n                function keydownListener(e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n\r\n                        var \r\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\r\n\r\n                        // Move focus to next control\r\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\r\n                            controls[moveToControl].focus();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n","/**\r\n * @file Infinite scrolling behavior\r\n * @description\r\n * Modified from https://github.com/sroze/ngInfiniteScroll\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\r\n\r\n    thisModule.directive('pipInfiniteScroll', \r\n        function($rootScope, $window, $interval, $parse) {\r\n            var THROTTLE_MILLISECONDS = 500;\r\n\r\n            return {\r\n                scope: {\r\n                    pipInfiniteScroll: '&',\r\n                    pipScrollContainer: '=',\r\n                    pipScrollDistance: '=',\r\n                    pipScrollDisabled: '=',\r\n                    pipScrollUseDocumentBottom: '=',\r\n                    pipScrollListenForEvent: '@'\r\n                },\r\n                link: function($scope: any, $element, $attrs: any) {\r\n                    var \r\n                        checkWhenEnabled = null,\r\n                        scrollContainer,\r\n                        immediateCheck = true,\r\n                        scrollDistance = null,\r\n                        scrollEnabled = null, \r\n                        unregisterEventListener = null,\r\n                        useDocumentBottom = false, \r\n                        windowElement = angular.element($window);\r\n                    \r\n                    function height(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(element.offsetHeight)) {\r\n                            return element.document.documentElement.clientHeight;\r\n                        } else {\r\n                            return element.offsetHeight;\r\n                        }\r\n                    };\r\n\r\n                    function offsetTop(element) {\r\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                            return;\r\n                        }\r\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\r\n                    };\r\n\r\n                    function pageYOffset(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(window.pageYOffset)) {\r\n                            return element.document.documentElement.scrollTop;\r\n                        } else {\r\n                            return element.ownerDocument.defaultView.pageYOffset;\r\n                        }\r\n                    };\r\n\r\n                    var onContainerScroll = function() {\r\n                        var \r\n                            containerBottom, \r\n                            containerTopOffset, \r\n                            elementBottom, \r\n                            remaining, \r\n                            shouldScroll;\r\n                                                \r\n                        if (scrollContainer === windowElement) {\r\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\r\n                            elementBottom = offsetTop($element) + height($element);\r\n                        } else {\r\n                            containerBottom = height(scrollContainer);\r\n                            containerTopOffset = 0;\r\n                            if (offsetTop(scrollContainer) !== void 0) {\r\n                                containerTopOffset = offsetTop(scrollContainer);\r\n                            }\r\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\r\n                        }\r\n\r\n                        if (useDocumentBottom) {\r\n                            elementBottom = height(($element[0].ownerDocument || $element[0].document).documentElement);\r\n                        }\r\n\r\n                        remaining = elementBottom - containerBottom;\r\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\r\n                        \r\n                        if (shouldScroll) {\r\n                            checkWhenEnabled = true;\r\n                            if (scrollEnabled) {\r\n                                if ($scope.$$phase || $rootScope.$$phase) {\r\n                                    return $scope.pipInfiniteScroll();\r\n                                } else {\r\n                                    return $scope.$apply($scope.pipInfiniteScroll);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return checkWhenEnabled = false;\r\n                        }\r\n                    };\r\n\r\n                    if (THROTTLE_MILLISECONDS != null) {\r\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \r\n                    }\r\n\r\n                    $scope.$on('$destroy', function() {\r\n                        scrollContainer.unbind('scroll', onContainerScroll);\r\n                        if (unregisterEventListener != null) {\r\n                            unregisterEventListener();\r\n                            return unregisterEventListener = null;\r\n                        }\r\n                    });\r\n\r\n                    function handleScrollDistance(v) {\r\n                        return scrollDistance = parseFloat(v) || 0;\r\n                    };\r\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\r\n                    handleScrollDistance($scope.pipScrollDistance);\r\n                    \r\n                    function handleScrollDisabled(v) {\r\n                        scrollEnabled = !v;\r\n                        if (scrollEnabled && checkWhenEnabled) {\r\n                            checkWhenEnabled = false;\r\n                            return onContainerScroll();\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\r\n                    handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n                    function handleScrollUseDocumentBottom(v) {\r\n                        return useDocumentBottom = v;\r\n                    };\r\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\r\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n                    function changeContainer(newContainer) {\r\n                        if (scrollContainer != null) {\r\n                            scrollContainer.unbind('scroll', onContainerScroll);\r\n                        }\r\n\r\n                        scrollContainer = newContainer;\r\n                        if (newContainer != null) {\r\n                            return scrollContainer.bind('scroll', onContainerScroll);\r\n                        }\r\n                    };\r\n\r\n                    changeContainer(windowElement);\r\n                    if ($scope.pipScrollListenForEvent) {\r\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\r\n                    }\r\n\r\n                    function handleScrollContainer(newContainer) {\r\n                        if ((newContainer == null) || newContainer.length === 0) {\r\n                            return;\r\n                        }\r\n                        if (newContainer instanceof HTMLElement) {\r\n                            newContainer = angular.element(newContainer);\r\n                        } else if (typeof newContainer.append === 'function') {\r\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n                        } else if (typeof newContainer === 'string') {\r\n                            newContainer = $element.parents().find(newContainer);\r\n                        }\r\n\r\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                            return changeContainer(newContainer);\r\n                        } else {\r\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\r\n                        if (newContainer !== scrollContainer)\r\n                            handleScrollContainer(newContainer);\r\n                    });\r\n                    handleScrollContainer($scope.pipScrollContainer || []);\r\n                    \r\n                    if ($attrs.pipScrollParent != null) {\r\n                        changeContainer(angular.element($element.parent()));\r\n                    }\r\n                    if ($attrs.pipScrolImmediateCheck != null) {\r\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n                    }\r\n                    \r\n                    return $interval((function() {\r\n                        if (immediateCheck) {\r\n                            return onContainerScroll();\r\n                        }\r\n                    }), 0, 1);\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/**\r\n * @file Keyboard navigation with scrolling over non-focusable controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipSelected\", []);\r\n\r\n    thisModule.directive('pipSelected',function ($parse, $mdConstant, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var\r\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\r\n                    indexSetter = indexGetter ? indexGetter.assign : null,\r\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\r\n                    idSetter = idGetter ? idGetter.assign : null,\r\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\r\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\r\n                    noScroll = toBoolean($attrs.pipNoScroll),\r\n                    modifier = toBoolean($attrs.pipSkipHidden) ? ':visible' : '',\r\n                    className = toBoolean($attrs.pipTreeList) ? '.pip-selectable-tree' : '.pip-selectable',\r\n                    selectedIndex = indexGetter($scope),\r\n                    currentElementTabinex = $element.attr('tabindex'),\r\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\r\n                    isScrolled = false;\r\n\r\n                // Set tabindex if it's not set yet\r\n                $element.attr('tabindex', currentElementTabinex || 0);\r\n\r\n                // Watch selected item index\r\n                if (!toBoolean($attrs.pipTreeList)) {\r\n                    $scope.$watch(indexGetter, function(newSelectedIndex) {\r\n                        selectItem({itemIndex: newSelectedIndex});\r\n                    });\r\n                } else {\r\n                    $scope.$watch(idGetter, function(newSelectedId) {\r\n                        setTimeout(function () {\r\n                            selectItem({itemId: newSelectedId, raiseEvent: true});\r\n                        }, 0);\r\n                    });\r\n                }\r\n\r\n                // Watch resync selection\r\n                if (pipSelectedWatch) {\r\n                    $scope.$watch(pipSelectedWatch, function() {\r\n                        // Delay update to allow ng-repeat to update DOM\r\n                        setTimeout(function() {\r\n                            selectedIndex = indexGetter($scope);\r\n                            selectItem({itemIndex: selectedIndex});\r\n                        }, 100);\r\n                    });\r\n                }\r\n\r\n                // Select item defined by index\r\n                selectItem({itemIndex: selectedIndex, items: $element.find(className)});\r\n\r\n                // Converts value into boolean\r\n                function toBoolean(value) {\r\n                    if (value == null) return false;\r\n                    if (!value) return false;\r\n                    value = value.toString().toLowerCase();\r\n                    return value == '1' || value == 'true';\r\n                };\r\n                \r\n                // Functions and listeners\r\n\r\n                function selectItem(itemParams) {\r\n                    if (isScrolled) return;\r\n                    var itemIndex = itemParams.itemIndex,\r\n                        itemId = itemParams.itemId,\r\n                        items = itemParams.items || $element.find(className + modifier),\r\n                        itemsLength = items.length,\r\n                        item = (function () {\r\n                            if (itemParams.item) return itemParams.item;\r\n                            if (itemIndex === undefined && itemIndex === -1) {\r\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                            }\r\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                                return items[itemIndex]\r\n                            }\r\n                        }()),\r\n                        raiseEvent = itemParams.raiseEvent;\r\n\r\n                    if (item) {\r\n                        $element.find(className).removeClass('selected md-focused');\r\n                        item = angular.element(item)\r\n                            .addClass('selected md-focused')\r\n                            .focus(); // todo сдвигает список тут, на первом проходе\r\n                        if (!noScroll) scrollToItem(item);\r\n                        if (raiseEvent) defineSelectedIndex(items);\r\n                    }\r\n                };\r\n\r\n                function defineSelectedIndex(items) {\r\n                    var oldSelectedIndex = selectedIndex;\r\n                    selectedIndex = -1;\r\n                    for (var index = 0; index < items.length; index++) {\r\n                        if ($(items[index]).hasClass('selected')) {\r\n                            selectedIndex = index;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // Execute callback to notify about item select\r\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\r\n                        $scope.$apply(updateIndex);\r\n                    }\r\n\r\n                    function updateIndex() {\r\n                        var selectedItem = angular.element(items[selectedIndex]),\r\n                            selectedId = selectedItem.attr('pip-id');\r\n\r\n                        if (indexSetter) indexSetter($scope, selectedIndex);\r\n                        if (idSetter) idSetter($scope, selectedId);\r\n                        if (changeGetter) {\r\n                            changeGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    item: selectedItem,\r\n                                    index: selectedIndex,\r\n                                    id: selectedId,\r\n                                    newIndex: selectedIndex,\r\n                                    oldIndex: oldSelectedIndex\r\n                                }\r\n                            });\r\n                        }\r\n                    };\r\n                };\r\n\r\n                function scrollToItem($item) {\r\n                    if (noScroll) return;\r\n\r\n                    var\r\n                        containerTop = $element.offset().top,\r\n                        containerHeight = $element.height(),\r\n                        containerBottom = containerTop + containerHeight,\r\n                        itemTop = $item.offset().top,\r\n                        itemHeight = $item.outerHeight(true),\r\n                        itemBottom = itemTop + itemHeight,\r\n                        containerScrollTop = $element.scrollTop();\r\n\r\n                        isScrolled = true;\r\n                        setTimeout(function () {\r\n                            isScrolled = false;\r\n                        }, 100);\r\n\r\n                    if (containerTop > itemTop) {\r\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n                    }\r\n                    else if (containerBottom < itemBottom) {\r\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n                    }\r\n\r\n                };\r\n\r\n                $element.on('click touchstart', className, function (event) {\r\n                    selectItem({item: event.currentTarget, raiseEvent: true});\r\n                });\r\n\r\n                $element.on('keydown', function (e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        if (enterSpaceGetter) {\r\n                            enterSpaceGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    index: selectedIndex,\r\n                                    item: $element.find('.selected')\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    } else\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        // Get next selectable control index\r\n                        var items = $element.find(className + modifier),\r\n                            inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            newSelectedIndex = selectedIndex + inc;\r\n\r\n                        // Set next control as selected\r\n                        selectItem({itemIndex: newSelectedIndex, items: items, raiseEvent: true});\r\n                    }\r\n                });\r\n\r\n                $element.on('focusin', function (event) {\r\n                    // Choose selected element\r\n                    var items,\r\n                        selectedItem = $element.find(className + '.selected');\r\n\r\n                    selectedItem.addClass('md-focused');\r\n\r\n                    // If there are not selected elements then pick the first one\r\n                    if (selectedItem.length === 0) {\r\n                        selectedIndex = indexGetter($scope);\r\n                        items = $element.find(className + modifier);\r\n                        selectItem({itemIndex: selectedIndex || 0, items: items, raiseEvent: true});\r\n                    }\r\n                });\r\n\r\n                $element.on('focusout', function (event) {\r\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function(){\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipUnsavedChanges\", []);\r\n\r\n    thisModule.directive(\"pipUnsavedChanges\", function ($window, $rootScope) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave'\r\n            },\r\n            link: function($scope: any) {\r\n\r\n                $window.onbeforeunload = function() {\r\n                    if ($scope.unsavedChangesAvailable()) {\r\n                        $rootScope.$routing = false;\r\n                        return $scope.unsavedChangesMessage;\r\n                    }\r\n                };\r\n\r\n                var unbindFunc = $scope.$on('$stateChangeStart', function(event) {\r\n                    if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                        $rootScope.$routing = false;\r\n                        event.preventDefault();\r\n                    } else {\r\n                        _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                    }\r\n                });\r\n\r\n                $scope.$on('$destroy', function() {\r\n                    $window.onbeforeunload = null;\r\n                    unbindFunc();\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n})();"]}