{"version":3,"sources":["behaviors.ts","focused/focused.ts","draggable/draggable.ts","infinite_scroll/infinite_scroll.ts","selected/selected.ts","unsaved_changes/unsaved_changes.ts"],"names":["angular","module","thisModule","directive","$timeout","$mdConstant","require","link","$scope","$element","$attrs","init","selector","withHidden","controls","find","controlsLength","length","on","addClass","$","this","removeClass","keydownListener","e","keyCode","which","KEY_CODE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","preventDefault","increment","moveToControl","index","filter","focus","pipWithHidden","$watch","ngModel","service","scope","inputEvent","event","isDefined","touches","originalEvent","$rootScope","$parse","$document","$window","pipDraggable","restrict","element","attrs","initialize","attr","dragHandles","querySelectorAll","_dragHandle","toggleListeners","scrollContainer","scrollParent","parent","pipScrollContainer","scrollContainerGetter","window","toBoolean","value","toString","toLowerCase","enable","$on","onDestroy","pipDrag","onEnableChange","pipCenterAnchor","onCenterAnchor","_pressEvents","onpress","_hasTouch","nodeName","newVal","oldVal","_dragEnabled","_centerAnchor","isClickableElement","evt","target","type","button","saveElementStyles","cancelPress","_pressTimer","setTimeout","onlongpress","LONG_PRESS","_moveEvents","_releaseEvents","_elementStyle","left","css","top","position","width","clearTimeout","off","offset","getBoundingClientRect","_dragOffset","allowTransform","document","body","scrollLeft","scrollTop","centerX","offsetWidth","centerY","offsetHeight","_mx","pageX","_my","pageY","_mrx","_mry","_tx","pageXOffset","_ty","pageYOffset","onmove","onrelease","_deregisterRootMoveListener","origEvent","hasClass","_data","getDragData","$broadcast","x","y","tx","ty","data","onDragStartCallback","$apply","$data","$event","horizontalScroll","verticalScroll","dragToScroll","moveElement","uid","_myid","dragOffset","callback","onDragComplete","reset","onDragStopCallback","onDragSuccessCallback","transform","z-index","-webkit-transform","-ms-transform","eWidth","scrollX","scrollY","containerLeft","containerWidth","innerWidth","containerRight","activationDistance","scrollDistance","containerTop","containerHeight","innerHeight","containerBottom","containerScrollLeft","containerScrollTop","ngDrag","DocumentTouch","$id","pipDragStart","pipDragStop","pipDragSuccess","$eval","pipDragData","pipVerticalScroll","pipHorizontalScroll","parseFloat","pipActivationDistance","pipScrollDistance","noop","pipDrop","onDragStart","onDragMove","onDragEnd","_dropEnabled","obj","isTouching","pipDragMove","onDragMoveCallback","pipDropSuccess","onDropCallback","$target","updateDragStyles","mouseX","mouseY","dragElement","touching","hitTest","_lastDropTouch","bounds","documentElement","right","bottom","absorbEvent_","stopPropagation","cancelBubble","returnValue","$interval","THROTTLE_MILLISECONDS","pipInfiniteScroll","pipScrollDisabled","pipScrollUseDocumentBottom","pipScrollListenForEvent","height","isNaN","clientHeight","offsetTop","ownerDocument","defaultView","handleScrollDistance","v","handleScrollDisabled","scrollEnabled","checkWhenEnabled","onContainerScroll","handleScrollUseDocumentBottom","useDocumentBottom","changeContainer","newContainer","unbind","bind","handleScrollContainer","HTMLElement","append","parents","Array","isArray","Error","immediateCheck","unregisterEventListener","windowElement","containerTopOffset","elementBottom","remaining","shouldScroll","$$phase","_","throttle","pipScrollParent","pipScrolImmediateCheck","selectItem","itemParams","console","log","isScrolled","itemIndex","itemId","items","className","modifier","itemsLength","item","undefined","raiseEvent","noScroll","scrollToItem","defineSelectedIndex","updateIndex","selectedItem","selectedIndex","selectedId","indexSetter","idSetter","changeGetter","id","newIndex","oldIndex","oldSelectedIndex","$item","itemTop","itemHeight","outerHeight","itemBottom","indexGetter","pipSelected","assign","idGetter","pipSelectedId","pipSelect","enterSpaceGetter","pipEnterSpacePress","pipNoScroll","pipSkipHidden","pipTreeList","currentElementTabinex","pipSelectedWatch","newSelectedId","newSelectedIndex","currentTarget","ENTER","SPACE","inc","unsavedChangesAvailable","unsavedChangesMessage","afterLeave","onbeforeunload","$routing","unbindFunc","confirm","isFunction"],"mappings":"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","file":"pip-webui-behaviors.min.js","sourcesContent":["/**\r\n * @file Registration of all WebUI list controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipBehaviors', [\r\n        'pipFocused',\r\n        'pipSelected',\r\n        'pipInfiniteScroll',\r\n        'pipUnsavedChanges',\r\n        'pipDraggable'\r\n    ]);\r\n    \r\n})();","/**\r\n * @file Keyboard navigation over few focusable controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipFocused\", []);\r\n\r\n    thisModule.directive('pipFocused', function($timeout, $mdConstant) {\r\n        return {\r\n            require: \"?ngModel\",\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var controls, controlsLength,\r\n                    withHidden = $attrs.pipWithHidden;\r\n\r\n                $timeout(init);\r\n                $element.on('keydown', keydownListener);\r\n\r\n                $scope.$watch($attrs.ngModel, function () {\r\n                    $timeout(init);\r\n                }, true);\r\n\r\n                function init() {\r\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\r\n                    controls = $element.find(selector);\r\n                    controlsLength = controls.length;\r\n\r\n                    // add needed event listeners\r\n                    controls.on('focus', function () {\r\n                        $element.addClass('pip-focused-container');\r\n                        $(this).addClass('md-focused');\r\n                    }).on('focusout', function () {\r\n                        $element.removeClass('pip-focused-container');\r\n                    });\r\n                }\r\n\r\n                function keydownListener(e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n\r\n                        var \r\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\r\n\r\n                        // Move focus to next control\r\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\r\n                            controls[moveToControl].focus();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipDraggable\", []);\r\n\r\n    thisModule.service('pipDraggable', function () {\r\n\r\n        var scope = this;\r\n        scope.inputEvent = function (event) {\r\n            if (angular.isDefined(event.touches)) {\r\n                return event.touches[0];\r\n            }\r\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n                return event.originalEvent.touches[0];\r\n            }\r\n            return event;\r\n        };\r\n\r\n    });\r\n\r\n    thisModule.directive('pipDrag',\r\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\r\n            return {\r\n\r\n                restrict: 'A',\r\n                link: function (scope: any, element, attrs: any) {\r\n                    scope.value = attrs.ngDrag;\r\n                    var LONG_PRESS = 50; // 50ms for longpress\r\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\r\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n                    var _pressEvents = 'touchstart mousedown';\r\n                    var _moveEvents = 'touchmove mousemove';\r\n                    var _releaseEvents = 'touchend mouseup';\r\n                    var _dragHandle;\r\n\r\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n                    var _myid = scope.$id;\r\n                    var _data = null;\r\n\r\n                    var _dragOffset = null;\r\n\r\n                    var _dragEnabled = false;\r\n\r\n                    var _pressTimer = null;\r\n\r\n                    var _elementStyle: any = {};\r\n\r\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\r\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\r\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\r\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\r\n\r\n                    var getDragData = $parse(attrs.pipDragData);\r\n                    var\r\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\r\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\r\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\r\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\r\n                        scrollParent = false,\r\n\r\n                        scrollContainer = angular.element(window),\r\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\r\n\r\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n                    var _deregisterRootMoveListener = angular.noop;\r\n\r\n                    initialize();\r\n\r\n                    return;\r\n\r\n                    //-----------------------------------\r\n\r\n                    function initialize() {\r\n                        element.attr('pip-draggable', 'false'); // prevent native drag\r\n                        // check to see if drag handle(s) was specified\r\n                        // if querySelectorAll is available, we use this instead of find\r\n                        // as JQLite find is limited to tagnames\r\n                        let dragHandles: any;\r\n                        if (element[0].querySelectorAll) {\r\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\r\n                        } else {\r\n                            dragHandles = element.find('[pip-drag-handle]');\r\n                        }\r\n                        if (dragHandles.length) {\r\n                            _dragHandle = dragHandles;\r\n                        }\r\n                        toggleListeners(true);\r\n\r\n                        // Initialize scroll container\r\n                        if (scrollParent) {\r\n                            scrollContainer = angular.element(element.parent());\r\n                        } else if (attrs.pipScrollContainer) {\r\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\r\n                        } else {\r\n                            scrollContainer = angular.element(window);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    function toggleListeners(enable) {\r\n                        if (!enable)return;\r\n                        // add listeners.\r\n\r\n                        scope.$on('$destroy', onDestroy);\r\n                        scope.$watch(attrs.pipDrag, onEnableChange);\r\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\r\n                        // wire up touch events\r\n                        if (_dragHandle) {\r\n                            // handle(s) specified, use those to initiate drag\r\n                            _dragHandle.on(_pressEvents, onpress);\r\n                        } else {\r\n                            // no handle(s) specified, use the element as the handle\r\n                            element.on(_pressEvents, onpress);\r\n                        }\r\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\r\n                            element.on('mousedown', function () {\r\n                                return false;\r\n                            }); // prevent native drag for images\r\n                        }\r\n                    }\r\n                    \r\n                    function onDestroy(enable) {\r\n                        toggleListeners(false);\r\n                    }\r\n\r\n                    function onEnableChange(newVal, oldVal) {\r\n                        _dragEnabled = (newVal);\r\n                    }\r\n\r\n                    function onCenterAnchor(newVal, oldVal) {\r\n                        if (angular.isDefined(newVal))\r\n                            _centerAnchor = (newVal || 'true');\r\n                    }\r\n\r\n                    function isClickableElement(evt) {\r\n                        return (\r\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n                        );\r\n                    }\r\n\r\n                    /*\r\n                     * When the element is clicked start the drag behaviour\r\n                     * On touch devices as a small delay so as not to prevent native window scrolling\r\n                     */\r\n                    function onpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n\r\n                        if (isClickableElement(evt)) {\r\n                            return;\r\n                        }\r\n\r\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                            // Do not start dragging on right-click\r\n                            return;\r\n                        }\r\n\r\n                        saveElementStyles();\r\n\r\n                        if (_hasTouch) {\r\n                            cancelPress();\r\n                            _pressTimer = setTimeout(function () {\r\n                                cancelPress();\r\n                                onlongpress(evt);\r\n                            }, LONG_PRESS);\r\n                            $document.on(_moveEvents, cancelPress);\r\n                            $document.on(_releaseEvents, cancelPress);\r\n                        } else {\r\n                            onlongpress(evt);\r\n                        }\r\n\r\n                    }\r\n\r\n                    function saveElementStyles() {\r\n                        _elementStyle.left = element.css('css') || 0;\r\n                        _elementStyle.top = element.css('top') || 0;\r\n                        _elementStyle.position = element.css('position');\r\n                        _elementStyle.width = element.css('width');    \r\n                    }\r\n\r\n                    function cancelPress() {\r\n                        clearTimeout(_pressTimer);\r\n                        $document.off(_moveEvents, cancelPress);\r\n                        $document.off(_releaseEvents, cancelPress);\r\n                    }\r\n\r\n                    function onlongpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        offset = element[0].getBoundingClientRect();\r\n                        if (allowTransform)\r\n                            _dragOffset = offset;\r\n                        else {\r\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\r\n                        }\r\n\r\n\r\n                        element.centerX = element[0].offsetWidth / 2;\r\n                        element.centerY = element[0].offsetHeight / 2;\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n                        _mrx = _mx - offset.left;\r\n                        _mry = _my - offset.top;\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - element.centerX - $window.pageXOffset;\r\n                            _ty = _my - element.centerY - $window.pageYOffset;\r\n                        } else {\r\n                            _tx = _mx - _mrx - $window.pageXOffset;\r\n                            _ty = _my - _mry - $window.pageYOffset;\r\n                        }\r\n\r\n                        $document.on(_moveEvents, onmove);\r\n                        $document.on(_releaseEvents, onrelease);\r\n                        // This event is used to receive manually triggered mouse move events\r\n                        // jqLite unfortunately only supports triggerHandler(...)\r\n                        // See http://api.jquery.com/triggerHandler/\r\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\r\n                            onmove(origEvent);\r\n                        });\r\n                    }\r\n\r\n                    function onmove(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        if (!element.hasClass('pip-dragging')) {\r\n                            _data = getDragData(scope);\r\n                            element.addClass('pip-dragging');\r\n                            $rootScope.$broadcast('draggable:start', {\r\n                                x: _mx,\r\n                                y: _my,\r\n                                tx: _tx,\r\n                                ty: _ty,\r\n                                event: evt,\r\n                                element: element,\r\n                                data: _data\r\n                            });\r\n\r\n                            if (onDragStartCallback) {\r\n                                scope.$apply(function () {\r\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n\r\n                        if (horizontalScroll || verticalScroll) {\r\n                            dragToScroll();\r\n                        }\r\n\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - element.centerX - _dragOffset.left;\r\n                            _ty = _my - element.centerY - _dragOffset.top;\r\n                        } else {\r\n                            _tx = _mx - _mrx - _dragOffset.left;\r\n                            _ty = _my - _mry - _dragOffset.top;\r\n                        }\r\n\r\n                        moveElement(_tx, _ty);\r\n\r\n                        $rootScope.$broadcast('draggable:move', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            uid: _myid,\r\n                            dragOffset: _dragOffset\r\n                        });\r\n                    }\r\n\r\n                    function onrelease(evt) {\r\n                        if (!_dragEnabled)\r\n                            return;\r\n                        evt.preventDefault();\r\n                        $rootScope.$broadcast('draggable:end', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            callback: onDragComplete,\r\n                            uid: _myid\r\n                        });\r\n                        element.removeClass('pip-dragging');\r\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n                        reset();\r\n                        $document.off(_moveEvents, onmove);\r\n                        $document.off(_releaseEvents, onrelease);\r\n\r\n                        if (onDragStopCallback) {\r\n                            scope.$apply(function () {\r\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\r\n                            });\r\n                        }\r\n\r\n                        _deregisterRootMoveListener();\r\n                    }\r\n\r\n                    function onDragComplete(evt) {\r\n                        if (!onDragSuccessCallback)return;\r\n\r\n                        scope.$apply(function () {\r\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\r\n                        });\r\n                    }\r\n\r\n                    function reset() {\r\n                        if (allowTransform)\r\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\r\n                        else {\r\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\r\n                        }\r\n                    }\r\n\r\n                    function moveElement(x, y) {\r\n                        var eWidth = element.css('width');\r\n                        if (allowTransform) {\r\n                            element.css({\r\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                'z-index': 99999,\r\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                            });\r\n                        } else {\r\n                            element.css({\r\n                                'left': x + 'px',\r\n                                'top': y + 'px',\r\n                                'position': 'fixed',\r\n                                'z-index': 100,\r\n                                width: eWidth\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    function dragToScroll() {\r\n                        var scrollX = 0, scrollY = 0,\r\n                            offset = function (element) {\r\n                                return element.offset() || {left: 0, top: 0};\r\n                            };\r\n\r\n                        if (horizontalScroll) {\r\n                            var\r\n                                containerLeft = offset(scrollContainer).left,\r\n                                containerWidth = scrollContainer.innerWidth(),\r\n                                containerRight = containerLeft + containerWidth;\r\n\r\n                            if ((_mx - containerLeft) < activationDistance) {\r\n                                scrollX = -scrollDistance;\r\n                            }\r\n                            else if ((containerRight - _mx) < activationDistance) {\r\n                                scrollX = scrollDistance;\r\n                            }\r\n                        }\r\n\r\n                        if (verticalScroll) {\r\n                            var\r\n                                containerTop = offset(scrollContainer).top,\r\n                                containerHeight = scrollContainer.innerHeight(),\r\n                                containerBottom = containerTop + containerHeight;\r\n\r\n                            if ((_my - containerTop) < activationDistance) {\r\n                                scrollY = -scrollDistance + 30;\r\n                            }\r\n                            else if ((containerBottom - _my) < activationDistance) {\r\n                                scrollY = scrollDistance - 30;\r\n                            }\r\n                        }\r\n                        if (scrollX !== 0 || scrollY !== 0) {\r\n                            var\r\n                                containerScrollLeft = scrollContainer.scrollLeft(),\r\n                                containerScrollTop = scrollContainer.scrollTop();\r\n\r\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    thisModule.directive('pipDrop', \r\n        function ($parse, $timeout, $window, $document, pipDraggable) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                scope.value = attrs.pipDrop;\r\n                scope.isTouching = false;\r\n\r\n                var _lastDropTouch = null;\r\n                var _myid = scope.$id;\r\n                var _dropEnabled = false;\r\n\r\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\r\n                var onDragStartCallback = $parse(attrs.pipDragStart);\r\n                var onDragStopCallback = $parse(attrs.pipDragStop);\r\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\r\n\r\n                initialize();\r\n\r\n                return;\r\n\r\n                //----------------------\r\n\r\n                function initialize() {\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    scope.$watch(attrs.pipDrop, onEnableChange);\r\n                    scope.$on('$destroy', onDestroy);\r\n                    scope.$on('draggable:start', onDragStart);\r\n                    scope.$on('draggable:move', onDragMove);\r\n                    scope.$on('draggable:end', onDragEnd);\r\n                }\r\n\r\n                function onDestroy(enable) {\r\n                    toggleListeners(false);\r\n                }\r\n\r\n                function onEnableChange(newVal, oldVal) {\r\n                    _dropEnabled = newVal;\r\n                }\r\n\r\n                function onDragStart(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragStart) {\r\n                        $timeout(function () {\r\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragMove(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragMove) {\r\n                        $timeout(function () {\r\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragEnd(evt, obj) {\r\n                    // don't listen to drop events if this is the element being dragged\r\n                    // only update the styles and return\r\n                    if (!_dropEnabled || _myid === obj.uid) {\r\n                        updateDragStyles(false, obj.element);\r\n                        return;\r\n                    }\r\n\r\n                    if (isTouching(obj.x, obj.y, obj.element)) {\r\n                        // call the pipDraggable pipDragSuccess element callback\r\n                        if (obj.callback) {\r\n                            obj.callback(obj);\r\n                        }\r\n\r\n                        if (attrs.pipDropSuccess) {\r\n                            $timeout(function () {\r\n                                onDropCallback(scope, {\r\n                                    $data: obj.data,\r\n                                    $event: obj,\r\n                                    $target: scope.$eval(scope.value)\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (attrs.pipDragStop) {\r\n                        $timeout(function () {\r\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n\r\n                    updateDragStyles(false, obj.element);\r\n                }\r\n\r\n                function isTouching(mouseX, mouseY, dragElement) {\r\n                    var touching = hitTest(mouseX, mouseY);\r\n                    scope.isTouching = touching;\r\n                    if (touching) {\r\n                        _lastDropTouch = element;\r\n                    }\r\n                    updateDragStyles(touching, dragElement);\r\n                    return touching;\r\n                }\r\n\r\n                function updateDragStyles(touching, dragElement) {\r\n                    if (touching) {\r\n                        element.addClass('pip-drag-enter');\r\n                        dragElement.addClass('pip-drag-over');\r\n                    } else if (_lastDropTouch == element) {\r\n                        _lastDropTouch = null;\r\n                        element.removeClass('pip-drag-enter');\r\n                        dragElement.removeClass('pip-drag-over');\r\n                    }\r\n                };\r\n\r\n                function hitTest(x, y) {\r\n                    var bounds = element[0].getBoundingClientRect();\r\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\r\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\r\n                    return x >= bounds.left\r\n                        && x <= bounds.right\r\n                        && y <= bounds.bottom\r\n                        && y >= bounds.top;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    //thisModule.directive('pipDragClone', function ($parse, $timeout, pipDraggable) {\r\n    //    return {\r\n    //        restrict: 'A',\r\n    //        link: function (scope, element, attrs) {\r\n    //            var img, _allowClone = true;\r\n    //            var _dragOffset = null;\r\n    //            scope.clonedData = {};\r\n    //            initialize();\r\n    //            return;\r\n\r\n    //            function initialize() {\r\n//\r\n    //                img = element.find('img');\r\n    //                element.attr('pip-draggable', 'false');\r\n    //                img.attr('draggable', 'false');\r\n    //                reset();\r\n    //                toggleListeners(true);\r\n    //            }\r\n//\r\n//\r\n    //            function toggleListeners(enable) {\r\n    //                // remove listeners\r\n//\r\n    //                if (!enable)return;\r\n    //                // add listeners.\r\n    //                scope.$on('draggable:start', onDragStart);\r\n    //                scope.$on('draggable:move', onDragMove);\r\n    //                scope.$on('draggable:end', onDragEnd);\r\n    //                preventContextMenu();\r\n//\r\n    //            }\r\n\r\n    //            function preventContextMenu() {\r\n    //                //  element.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                img.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                //  element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //                img.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n    //            }\r\n\r\n    //            function onDragStart(evt, obj, elm) {\r\n    //                _allowClone = true;\r\n    //                if (angular.isDefined(obj.data.allowClone)) {\r\n    //                    _allowClone = obj.data.allowClone;\r\n    //                }\r\n    //                if (_allowClone) {\r\n    //                    scope.$apply(function () {\r\n    //                        scope.clonedData = obj.data;\r\n    //                    });\r\n    //                    element.css('width', obj.element[0].offsetWidth);\r\n    //                    element.css('height', obj.element[0].offsetHeight);\r\n//\r\n    //                    moveElement(obj.tx, obj.ty);\r\n    //                }\r\n//\r\n    //            }\r\n\r\n    //            function onDragMove(evt, obj) {\r\n    //                if (_allowClone) {\r\n//\r\n    //                    _tx = obj.tx + obj.dragOffset.left;\r\n    //                    _ty = obj.ty + obj.dragOffset.top;\r\n//\r\n    //                    moveElement(_tx, _ty);\r\n    //                }\r\n    //            }\r\n\r\n    //            function onDragEnd(evt, obj) {\r\n    //                //moveElement(obj.tx,obj.ty);\r\n    //                if (_allowClone) {\r\n    //                    reset();\r\n    //                }\r\n    //            }\r\n//\r\n    //            function reset() {\r\n    //                element.css({left: 0, top: 0, position: 'fixed', 'z-index': -1, visibility: 'hidden'});\r\n    //            }\r\n\r\n    //            function moveElement(x, y) {\r\n    //                element.css({\r\n    //                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n    //                    'z-index': 99999,\r\n    //                    'visibility': 'visible',\r\n    //                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n    //                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n    //                    //,margin: '0'  don't monkey with the margin,\r\n    //                });\r\n    //            }\r\n//\r\n    //            function absorbEvent_(event) {\r\n    //                var e = event;//.originalEvent;\r\n    //                e.preventDefault && e.preventDefault();\r\n    //                e.stopPropagation && e.stopPropagation();\r\n    //                e.cancelBubble = true;\r\n    //                e.returnValue = false;\r\n    //                return false;\r\n    //            }\r\n//\r\n    //        }\r\n    //    };\r\n    //});\r\n\r\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                initialize();\r\n\r\n                return;\r\n                //---------------------\r\n\r\n                function initialize() {\r\n                    element.attr('pip-draggable', 'false');\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n                }\r\n\r\n                function absorbEvent_(event) {\r\n                    var e = event.originalEvent;\r\n                    e.preventDefault && e.preventDefault();\r\n                    e.stopPropagation && e.stopPropagation();\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    thisModule.directive('pipCancelDrag', function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attrs) {\r\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n            }\r\n        };\r\n    });\r\n})();\r\n\r\n","/**\r\n * @file Infinite scrolling behavior\r\n * @description\r\n * Modified from https://github.com/sroze/ngInfiniteScroll\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\r\n\r\n    thisModule.directive('pipInfiniteScroll', \r\n        function($rootScope, $window, $interval, $parse) {\r\n            var THROTTLE_MILLISECONDS = 500;\r\n\r\n            return {\r\n                scope: {\r\n                    pipInfiniteScroll: '&',\r\n                    pipScrollContainer: '=',\r\n                    pipScrollDistance: '=',\r\n                    pipScrollDisabled: '=',\r\n                    pipScrollUseDocumentBottom: '=',\r\n                    pipScrollListenForEvent: '@'\r\n                },\r\n                link: function($scope: any, $element, $attrs: any) {\r\n                    var \r\n                        checkWhenEnabled = null,\r\n                        scrollContainer,\r\n                        immediateCheck = true,\r\n                        scrollDistance = null,\r\n                        scrollEnabled = null, \r\n                        unregisterEventListener = null,\r\n                        useDocumentBottom = false, \r\n                        windowElement = angular.element($window);\r\n                    \r\n                    function height(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(element.offsetHeight)) {\r\n                            return element.document.documentElement.clientHeight;\r\n                        } else {\r\n                            return element.offsetHeight;\r\n                        }\r\n                    };\r\n\r\n                    function offsetTop(element) {\r\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                            return;\r\n                        }\r\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\r\n                    };\r\n\r\n                    function pageYOffset(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(window.pageYOffset)) {\r\n                            return element.document.documentElement.scrollTop;\r\n                        } else {\r\n                            return element.ownerDocument.defaultView.pageYOffset;\r\n                        }\r\n                    };\r\n\r\n                    var onContainerScroll = function() {\r\n                        var \r\n                            containerBottom, \r\n                            containerTopOffset, \r\n                            elementBottom, \r\n                            remaining, \r\n                            shouldScroll;\r\n                                                \r\n                        if (scrollContainer === windowElement) {\r\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\r\n                            elementBottom = offsetTop($element) + height($element);\r\n                        } else {\r\n                            containerBottom = height(scrollContainer);\r\n                            containerTopOffset = 0;\r\n                            if (offsetTop(scrollContainer) !== void 0) {\r\n                                containerTopOffset = offsetTop(scrollContainer);\r\n                            }\r\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\r\n                        }\r\n\r\n                        if (useDocumentBottom) {\r\n                            elementBottom = height(($element[0].ownerDocument || $element[0].document).documentElement);\r\n                        }\r\n\r\n                        remaining = elementBottom - containerBottom;\r\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\r\n                        \r\n                        if (shouldScroll) {\r\n                            checkWhenEnabled = true;\r\n                            if (scrollEnabled) {\r\n                                if ($scope.$$phase || $rootScope.$$phase) {\r\n                                    return $scope.pipInfiniteScroll();\r\n                                } else {\r\n                                    return $scope.$apply($scope.pipInfiniteScroll);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return checkWhenEnabled = false;\r\n                        }\r\n                    };\r\n\r\n                    if (THROTTLE_MILLISECONDS != null) {\r\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \r\n                    }\r\n\r\n                    $scope.$on('$destroy', function() {\r\n                        scrollContainer.unbind('scroll', onContainerScroll);\r\n                        if (unregisterEventListener != null) {\r\n                            unregisterEventListener();\r\n                            return unregisterEventListener = null;\r\n                        }\r\n                    });\r\n\r\n                    function handleScrollDistance(v) {\r\n                        return scrollDistance = parseFloat(v) || 0;\r\n                    };\r\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\r\n                    handleScrollDistance($scope.pipScrollDistance);\r\n                    \r\n                    function handleScrollDisabled(v) {\r\n                        scrollEnabled = !v;\r\n                        if (scrollEnabled && checkWhenEnabled) {\r\n                            checkWhenEnabled = false;\r\n                            return onContainerScroll();\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\r\n                    handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n                    function handleScrollUseDocumentBottom(v) {\r\n                        return useDocumentBottom = v;\r\n                    };\r\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\r\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n                    function changeContainer(newContainer) {\r\n                        if (scrollContainer != null) {\r\n                            scrollContainer.unbind('scroll', onContainerScroll);\r\n                        }\r\n\r\n                        scrollContainer = newContainer;\r\n                        if (newContainer != null) {\r\n                            return scrollContainer.bind('scroll', onContainerScroll);\r\n                        }\r\n                    };\r\n\r\n                    changeContainer(windowElement);\r\n                    if ($scope.pipScrollListenForEvent) {\r\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\r\n                    }\r\n\r\n                    function handleScrollContainer(newContainer) {\r\n                        if ((newContainer == null) || newContainer.length === 0) {\r\n                            return;\r\n                        }\r\n                        if (newContainer instanceof HTMLElement) {\r\n                            newContainer = angular.element(newContainer);\r\n                        } else if (typeof newContainer.append === 'function') {\r\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n                        } else if (typeof newContainer === 'string') {\r\n                            newContainer = $element.parents().find(newContainer);\r\n                        }\r\n\r\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                            return changeContainer(newContainer);\r\n                        } else {\r\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\r\n                        if (newContainer !== scrollContainer)\r\n                            handleScrollContainer(newContainer);\r\n                    });\r\n                    handleScrollContainer($scope.pipScrollContainer || []);\r\n                    \r\n                    if ($attrs.pipScrollParent != null) {\r\n                        changeContainer(angular.element($element.parent()));\r\n                    }\r\n                    if ($attrs.pipScrolImmediateCheck != null) {\r\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n                    }\r\n                    \r\n                    return $interval((function() {\r\n                        if (immediateCheck) {\r\n                            return onContainerScroll();\r\n                        }\r\n                    }), 0, 1);\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/**\r\n * @file Keyboard navigation with scrolling over non-focusable controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipSelected\", []);\r\n\r\n    thisModule.directive('pipSelected',function ($parse, $mdConstant, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var\r\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\r\n                    indexSetter = indexGetter ? indexGetter.assign : null,\r\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\r\n                    idSetter = idGetter ? idGetter.assign : null,\r\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\r\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\r\n                    noScroll = toBoolean($attrs.pipNoScroll),\r\n                    modifier = toBoolean($attrs.pipSkipHidden) ? ':visible' : '',\r\n                    className = toBoolean($attrs.pipTreeList) ? '.pip-selectable-tree' : '.pip-selectable',\r\n                    selectedIndex = indexGetter($scope),\r\n                    currentElementTabinex = $element.attr('tabindex'),\r\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\r\n                    isScrolled = false;\r\n\r\n                // Set tabindex if it's not set yet\r\n                $element.attr('tabindex', currentElementTabinex || 0);\r\n\r\n                // Watch selected item index\r\n                if (!toBoolean($attrs.pipTreeList)) {\r\n                    $scope.$watch(indexGetter, function(newSelectedIndex) {\r\n                        selectItem({itemIndex: newSelectedIndex});\r\n                    });\r\n                } else {\r\n                    $scope.$watch(idGetter, function(newSelectedId) {\r\n                        setTimeout(function () {\r\n                            selectItem({itemId: newSelectedId, raiseEvent: true});\r\n                        }, 0);\r\n                    });\r\n                }\r\n\r\n                // Watch resync selection\r\n                if (pipSelectedWatch) {\r\n                    $scope.$watch(pipSelectedWatch, function() {\r\n                        // Delay update to allow ng-repeat to update DOM\r\n                        setTimeout(function() {\r\n                            selectedIndex = indexGetter($scope);\r\n                            selectItem({itemIndex: selectedIndex});\r\n                        }, 100);\r\n                    });\r\n                }\r\n\r\n                // Select item defined by index\r\n                selectItem({itemIndex: selectedIndex, items: $element.find(className)});\r\n\r\n                // Converts value into boolean\r\n                function toBoolean(value) {\r\n                    if (value == null) return false;\r\n                    if (!value) return false;\r\n                    value = value.toString().toLowerCase();\r\n                    return value == '1' || value == 'true';\r\n                };\r\n                \r\n                // Functions and listeners\r\n\r\n                function selectItem(itemParams) {\r\n                    console.log('selectItem');\r\n                    if (isScrolled) return;\r\n                    var itemIndex = itemParams.itemIndex,\r\n                        itemId = itemParams.itemId,\r\n                        items = itemParams.items || $element.find(className + modifier),\r\n                        itemsLength = items.length,\r\n                        item = (function () {\r\n                            if (itemParams.item) return itemParams.item;\r\n                            if (itemIndex === undefined && itemIndex === -1) {\r\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                            }\r\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                                return items[itemIndex]\r\n                            }\r\n                        }()),\r\n                        raiseEvent = itemParams.raiseEvent;\r\n\r\n                    if (item) {\r\n                        $element.find(className).removeClass('selected md-focused');\r\n                        item = angular.element(item)\r\n                            .addClass('selected md-focused')\r\n                            .focus(); // todo сдвигает список тут, на первом проходе\r\n                        if (!noScroll) scrollToItem(item);\r\n                        if (raiseEvent) defineSelectedIndex(items);\r\n                    }\r\n                };\r\n\r\n                function defineSelectedIndex(items) {\r\n                    var oldSelectedIndex = selectedIndex;\r\n                    selectedIndex = -1;\r\n                    for (var index = 0; index < items.length; index++) {\r\n                        if ($(items[index]).hasClass('selected')) {\r\n                            selectedIndex = index;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // Execute callback to notify about item select\r\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\r\n                        $scope.$apply(updateIndex);\r\n                    }\r\n\r\n                    function updateIndex() {\r\n                        var selectedItem = angular.element(items[selectedIndex]),\r\n                            selectedId = selectedItem.attr('pip-id');\r\n\r\n                        if (indexSetter) indexSetter($scope, selectedIndex);\r\n                        if (idSetter) idSetter($scope, selectedId);\r\n                        if (changeGetter) {\r\n                            changeGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    item: selectedItem,\r\n                                    index: selectedIndex,\r\n                                    id: selectedId,\r\n                                    newIndex: selectedIndex,\r\n                                    oldIndex: oldSelectedIndex\r\n                                }\r\n                            });\r\n                        }\r\n                    };\r\n                };\r\n\r\n                function scrollToItem($item) {\r\n                    if (noScroll) return;\r\n\r\n                    var\r\n                        containerTop = $element.offset().top,\r\n                        containerHeight = $element.height(),\r\n                        containerBottom = containerTop + containerHeight,\r\n                        itemTop = $item.offset().top,\r\n                        itemHeight = $item.outerHeight(true),\r\n                        itemBottom = itemTop + itemHeight,\r\n                        containerScrollTop = $element.scrollTop();\r\n\r\n                        isScrolled = true;\r\n                        setTimeout(function () {\r\n                            isScrolled = false;\r\n                        }, 100);\r\n\r\n                    if (containerTop > itemTop) {\r\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n                    }\r\n                    else if (containerBottom < itemBottom) {\r\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n                    }\r\n\r\n                };\r\n\r\n                $element.on('click touchstart', className, function (event) {\r\n                    selectItem({item: event.currentTarget, raiseEvent: true});\r\n                });\r\n\r\n                $element.on('keydown', function (e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        if (enterSpaceGetter) {\r\n                            enterSpaceGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    index: selectedIndex,\r\n                                    item: $element.find('.selected')\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    } else\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        // Get next selectable control index\r\n                        var items = $element.find(className + modifier),\r\n                            inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            newSelectedIndex = selectedIndex + inc;\r\n\r\n                        // Set next control as selected\r\n                        selectItem({itemIndex: newSelectedIndex, items: items, raiseEvent: true});\r\n                    }\r\n                });\r\n\r\n                $element.on('focusin', function (event) {\r\n                    // Choose selected element\r\n                    var items,\r\n                        selectedItem = $element.find(className + '.selected');\r\n\r\n                    selectedItem.addClass('md-focused');\r\n\r\n                    // If there are not selected elements then pick the first one\r\n                    if (selectedItem.length === 0) {\r\n                        selectedIndex = indexGetter($scope);\r\n                        items = $element.find(className + modifier);\r\n                        selectItem({itemIndex: selectedIndex || 0, items: items, raiseEvent: true});\r\n                    }\r\n                });\r\n\r\n                $element.on('focusout', function (event) {\r\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function(){\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipUnsavedChanges\", []);\r\n\r\n    thisModule.directive(\"pipUnsavedChanges\", function ($window, $rootScope) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave'\r\n            },\r\n            link: function($scope: any) {\r\n\r\n                $window.onbeforeunload = function() {\r\n                    if ($scope.unsavedChangesAvailable()) {\r\n                        $rootScope.$routing = false;\r\n                        return $scope.unsavedChangesMessage;\r\n                    }\r\n                };\r\n\r\n                var unbindFunc = $scope.$on('$stateChangeStart', function(event) {\r\n                    if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                        $rootScope.$routing = false;\r\n                        event.preventDefault();\r\n                    } else {\r\n                        _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                    }\r\n                });\r\n\r\n                $scope.$on('$destroy', function() {\r\n                    $window.onbeforeunload = null;\r\n                    unbindFunc();\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n})();"]}