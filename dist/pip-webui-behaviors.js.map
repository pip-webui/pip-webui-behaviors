{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/draggable/CancelDrag.ts","src/draggable/Drag.ts","src/draggable/DraggableService.ts","src/draggable/Drop.ts","src/draggable/PreventDrag.ts","src/draggable/index.ts","src/focused/Focused.ts","src/index.ts","src/infinite_scroll/InfiniteScroll.ts","src/selected/Selected.ts","src/shortcuts/IShortcutsService.ts","src/shortcuts/Shortcut.ts","src/shortcuts/ShortcutBindingService.ts","src/shortcuts/ShortcutDirective.ts","src/shortcuts/ShortcutsService.ts","src/shortcuts/index.ts","src/unsaved_changes/UnsavedChanges.ts"],"names":[],"mappings":"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","file":"pip-webui-behaviors.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    class CancelDragLink {\r\n        constructor(\r\n            $element: JQuery\r\n        ) {\r\n            $element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n        }\r\n    }\r\n\r\n    const CancelDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new CancelDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipCancelDrag', CancelDrag);\r\n}","import {\r\n    IDraggableService\r\n} from './DraggableService';\r\n\r\n{\r\n    interface IDragLinkScope extends ng.IScope {\r\n        value: any;\r\n    }\r\n\r\n    interface IDragLinkAttributes extends ng.IAttributes {\r\n        ngDrag: any;\r\n        pipDragStart: any;\r\n        pipDragMove: any;\r\n        pipDragStop: any;\r\n        pipDragSuccess: any;\r\n        allowTransform: any;\r\n        pipDragData: any;\r\n        pipVerticalScroll: any;\r\n        pipHorizontalScroll: any;\r\n        pipActivationDistance: any;\r\n        pipScrollContainer: any;\r\n        pipDrag: any;\r\n        pipCenterAnchor: any;\r\n    }\r\n\r\n    class DragLink {\r\n        private LONG_PRESS: number = 50; // 50ms for longpress\r\n        private offset: any;\r\n        private _centerAnchor: boolean = false;\r\n        private _mx: number;\r\n        private _my: number;\r\n        private _tx: number;\r\n        private _ty: number;\r\n        private _mrx: number;\r\n        private _mry: number;\r\n        private _hasTouch: boolean = ('ontouchstart' in window) || ( < any > window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n        private _pressEvents: string = 'touchstart mousedown';\r\n        private _moveEvents: string = 'touchmove mousemove';\r\n        private _releaseEvents: string = 'touchend mouseup';\r\n        private _dragHandle: any;\r\n\r\n        // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n        private _myid: string | number;\r\n        private _data: any = null;\r\n\r\n        private _dragOffset: any = null;\r\n\r\n        private _dragEnabled: boolean = false;\r\n\r\n        private _pressTimer: any = null;\r\n\r\n        private _elementStyle: any = {};\r\n\r\n        private onDragStartCallback: Function;\r\n        private onDragMoveCallbak: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragSuccessCallback: Function;\r\n        private allowTransform: boolean;\r\n\r\n        private getDragData: any;\r\n        private verticalScroll: boolean;\r\n        private horizontalScroll: boolean;\r\n        private activationDistance: number;\r\n        private scrollDistance: number;\r\n        private scrollParent: boolean = false;\r\n\r\n        private scrollContainer: JQuery = angular.element(window);\r\n        private scrollContainerGetter: any;\r\n\r\n        // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n        private _deregisterRootMoveListener: Function = angular.noop;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $window: ng.IWindowService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDragLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDragLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.ngDrag;\r\n            this._myid = $scope.$id;\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart) || null;\r\n            this.onDragMoveCallbak = $parse($attrs.pipDragMove) || null;\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop) || null;\r\n            this.onDragSuccessCallback = $parse($attrs.pipDragSuccess) || null;\r\n            this.allowTransform = angular.isDefined($attrs.allowTransform) ? $scope.$eval($attrs.allowTransform) : false;\r\n\r\n            this.getDragData = $parse($attrs.pipDragData);\r\n            this.verticalScroll = $attrs.pipVerticalScroll || true;\r\n            this.horizontalScroll = $attrs.pipHorizontalScroll || true;\r\n            this.activationDistance = parseFloat($attrs.pipActivationDistance) || 75;\r\n            this.scrollDistance = parseFloat($attrs.pipActivationDistance) || 50;\r\n            this.scrollContainerGetter = $parse($attrs.pipScrollContainer);\r\n\r\n            this.$element.css('cursor', 'move');\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false'); // prevent native drag\r\n            // check to see if drag handle(s) was specified\r\n            // if querySelectorAll is available, we use this instead of find\r\n            // as JQLite find is limited to tagnames\r\n            let dragHandles: any;\r\n            if (this.$element[0].querySelectorAll) {\r\n                dragHandles = angular.element(this.$element[0].querySelectorAll('[pip-drag-handle]'));\r\n            } else {\r\n                dragHandles = this.$element.find('[pip-drag-handle]');\r\n            }\r\n            if (dragHandles.length) {\r\n                this._dragHandle = dragHandles;\r\n            }\r\n            this.toggleListeners(true);\r\n\r\n            // Initialize scroll container\r\n            if (this.scrollParent) {\r\n                this.scrollContainer = angular.element(this.$element.parent());\r\n            } else if (this.$attrs.pipScrollContainer) {\r\n                this.scrollContainer = angular.element(this.scrollContainerGetter(this.$scope));\r\n            } else {\r\n                this.scrollContainer = angular.element(window);\r\n            }\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            if (!enable) return;\r\n            // add listeners.\r\n\r\n            this.$scope.$on('$destroy', () => {\r\n                this.onDestroy(enable);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipDrag, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipCenterAnchor, (newVal, oldVal) => {\r\n                this.onCenterAnchor(newVal, oldVal);\r\n            });\r\n            // wire up touch events\r\n            if (this._dragHandle) {\r\n                // handle(s) specified, use those to initiate drag\r\n                this._dragHandle.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            } else {\r\n                // no handle(s) specified, use the element as the handle\r\n                this.$element.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            }\r\n            if (!this._hasTouch && this.$element[0].nodeName.toLowerCase() == \"img\") {\r\n                this.$element.on('mousedown', () => {\r\n                    return false;\r\n                }); // prevent native drag for images\r\n            }\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dragEnabled = (newVal);\r\n        }\r\n\r\n        private onCenterAnchor(newVal, oldVal) {\r\n            if (angular.isDefined(newVal))\r\n                this._centerAnchor = (newVal || 'true');\r\n        }\r\n\r\n        private isClickableElement(evt) {\r\n            return (\r\n                angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n            );\r\n        }\r\n\r\n        /*\r\n         * When the element is clicked start the drag behaviour\r\n         * On touch devices as a small delay so as not to prevent native window scrolling\r\n         */\r\n        private onpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n\r\n            if (this.isClickableElement(evt)) {\r\n                return;\r\n            }\r\n\r\n            if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                // Do not start dragging on right-click\r\n                return;\r\n            }\r\n\r\n            this.saveElementStyles();\r\n\r\n            if (this._hasTouch) {\r\n                this.cancelPress();\r\n                this._pressTimer = setTimeout(() => {\r\n                    this.cancelPress();\r\n                    this.onlongpress(evt);\r\n                }, this.LONG_PRESS);\r\n                this.$document.on(this._moveEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n                this.$document.on(this._releaseEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n            } else {\r\n                this.onlongpress(evt);\r\n            }\r\n        }\r\n\r\n        private saveElementStyles() {\r\n            this._elementStyle.left = this.$element.css('left') || 0;\r\n            this._elementStyle.top = this.$element.css('top') || 0;\r\n            this._elementStyle.position = this.$element.css('position');\r\n            this._elementStyle.width = this.$element.css('width');\r\n        }\r\n\r\n        private cancelPress() {\r\n            clearTimeout(this._pressTimer);\r\n            this.$document.off(this._moveEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n            this.$document.off(this._releaseEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n        }\r\n\r\n        private onlongpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n\r\n            this.offset = this.$element[0].getBoundingClientRect();\r\n            if (this.allowTransform)\r\n                this._dragOffset = this.offset;\r\n            else {\r\n                this._dragOffset = {\r\n                    left: document.body.scrollLeft,\r\n                    top: document.body.scrollTop\r\n                };\r\n            }\r\n\r\n\r\n            ( < any > this.$element).centerX = this.$element[0].offsetWidth / 2;\r\n            ( < any > this.$element).centerY = this.$element[0].offsetHeight / 2;\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n            this._mrx = this._mx - this.offset.left;\r\n            this._mry = this._my - this.offset.top;\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this.$window.pageXOffset;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this.$window.pageYOffset;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this.$window.pageXOffset;\r\n                this._ty = this._my - this._mry - this.$window.pageYOffset;\r\n            }\r\n\r\n            this.$document.on(this._moveEvents, (event) => {\r\n                this.onmove(event);\r\n            });\r\n            this.$document.on(this._releaseEvents, (event) => {\r\n                this.onrelease(event);\r\n            });\r\n            // This event is used to receive manually triggered mouse move events\r\n            // jqLite unfortunately only supports triggerHandler(...)\r\n            // See http://api.jquery.com/triggerHandler/\r\n            // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n            this._deregisterRootMoveListener = this.$rootScope.$on('draggable:_triggerHandlerMove', (event, origEvent) => {\r\n                this.onmove(origEvent);\r\n            });\r\n        }\r\n\r\n        private onmove(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n            if (!this.$element.hasClass('pip-dragging')) {\r\n                this._data = this.getDragData(this.$scope);\r\n                this.$element.addClass('pip-dragging');\r\n                this.$rootScope.$broadcast('draggable:start', {\r\n                    x: this._mx,\r\n                    y: this._my,\r\n                    tx: this._tx,\r\n                    ty: this._ty,\r\n                    event: evt,\r\n                    element: this.$element,\r\n                    data: this._data\r\n                });\r\n\r\n                if (this.onDragStartCallback) {\r\n                    this.$scope.$apply(() => {\r\n                        this.onDragStartCallback(this.$scope, {\r\n                            $data: this._data,\r\n                            $event: evt\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n\r\n            if (this.horizontalScroll || this.verticalScroll) {\r\n                this.dragToScroll();\r\n            }\r\n\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this._dragOffset.left;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this._dragOffset.top;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this._dragOffset.left;\r\n                this._ty = this._my - this._mry - this._dragOffset.top;\r\n            }\r\n\r\n            this.moveElement(this._tx, this._ty);\r\n            \r\n            this.$rootScope.$broadcast('draggable:move', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                uid: this._myid,\r\n                dragOffset: this._dragOffset\r\n            });\r\n\r\n            if (this.onDragMoveCallbak) {\r\n                this.$scope.$apply(() => {\r\n                    this.onDragMoveCallbak(this.$scope, {\r\n                        $data: this._data,\r\n                        $event: angular.extend(evt, ),\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onrelease(evt) {\r\n            if (!this._dragEnabled)\r\n                return;\r\n            evt.preventDefault();\r\n            this.$rootScope.$broadcast('draggable:end', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                callback: this.onDragComplete,\r\n                uid: this._myid\r\n            });\r\n            this.$element.removeClass('pip-dragging');\r\n            this.$element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n            this.reset();\r\n            this.$document.off(this._moveEvents);\r\n            this.$document.off(this._releaseEvents);\r\n            if (this.onDragStopCallback) {\r\n                this.$scope.$apply(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: this._data,\r\n                        $event: evt\r\n                    });\r\n                });\r\n            }\r\n\r\n            this._deregisterRootMoveListener();\r\n        }\r\n\r\n        private onDragComplete(evt) {\r\n            if (!this.onDragSuccessCallback) return;\r\n\r\n            this.$scope.$apply(() => {\r\n                this.onDragSuccessCallback(this.$scope, {\r\n                    $data: this._data,\r\n                    $event: evt\r\n                });\r\n            });\r\n        }\r\n\r\n        private reset() {\r\n            if (this.allowTransform)\r\n                this.$element.css({\r\n                    transform: '',\r\n                    'z-index': '',\r\n                    '-webkit-transform': '',\r\n                    '-ms-transform': ''\r\n                });\r\n            else {\r\n                this.$element.css({\r\n                    position: this._elementStyle.position,\r\n                    top: this._elementStyle.top,\r\n                    left: this._elementStyle.left,\r\n                    'z-index': '',\r\n                    width: this._elementStyle.width\r\n                });\r\n            }\r\n        }\r\n\r\n        private moveElement(x, y) {\r\n            const eWidth = this.$element.css('width');\r\n            if (this.allowTransform) {\r\n                this.$element.css({\r\n                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    'z-index': 99999,\r\n                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                });\r\n            } else {\r\n                this.$element.css({\r\n                    'left': x + 'px',\r\n                    'top': y + 'px',\r\n                    'position': 'fixed',\r\n                    'z-index': 100,\r\n                    width: eWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        private dragToScroll() {\r\n            let scrollX = 0,\r\n                scrollY = 0,\r\n                offset = (element) => {\r\n                    return element.offset() || {\r\n                        left: 0,\r\n                        top: 0\r\n                    };\r\n                };\r\n\r\n            if (this.horizontalScroll) {\r\n                const\r\n                    containerLeft = offset(this.scrollContainer).left,\r\n                    containerWidth = this.scrollContainer.innerWidth(),\r\n                    containerRight = containerLeft + containerWidth;\r\n\r\n                if ((this._mx - containerLeft) < this.activationDistance) {\r\n                    scrollX = -this.scrollDistance;\r\n                } else if ((containerRight - this._mx) < this.activationDistance) {\r\n                    scrollX = this.scrollDistance;\r\n                }\r\n            }\r\n\r\n            if (this.verticalScroll) {\r\n                const\r\n                    containerTop = offset(this.scrollContainer).top,\r\n                    containerHeight = this.scrollContainer.innerHeight(),\r\n                    containerBottom = containerTop + containerHeight;\r\n\r\n                if ((this._my - containerTop) < this.activationDistance) {\r\n                    scrollY = -this.scrollDistance + 30;\r\n                } else if ((containerBottom - this._my) < this.activationDistance) {\r\n                    scrollY = this.scrollDistance - 30;\r\n                }\r\n            }\r\n            if (scrollX !== 0 || scrollY !== 0) {\r\n                const\r\n                    containerScrollLeft = this.scrollContainer.scrollLeft(),\r\n                    containerScrollTop = this.scrollContainer.scrollTop();\r\n\r\n                this.scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                this.scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const Drag = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $window: ng.IWindowService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDragLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDragLinkAttributes\r\n            ) {\r\n                new DragLink($rootScope, $parse, $document, $window, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrag', Drag);\r\n}","export interface IDraggableService {\r\n    inputEvent(event: any);\r\n}\r\n\r\nclass DraggableService implements IDraggableService {\r\n    public inputEvent(event) {\r\n        if (angular.isDefined(event.touches)) {\r\n            return event.touches[0];\r\n        }\r\n        //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n        else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n            return event.originalEvent.touches[0];\r\n        }\r\n        return event;\r\n    };\r\n}\r\n\r\nangular\r\n    .module(\"pipDraggable\")\r\n    .service('pipDraggable', DraggableService);\r\n    ","import {\r\n    IDraggableService\r\n} from './DraggableService';\r\n\r\n{\r\n    interface IDropLinkScope extends ng.IScope {\r\n        value: any;\r\n        isTouching: any;\r\n    }\r\n\r\n    interface IDropLinkAttributes extends ng.IAttributes {\r\n        pipDrop: any;\r\n        pipDropSuccess: any;\r\n        pipDragStart: any;\r\n        pipDragStop: any;\r\n        pipDragMove: any;\r\n        pipEnter: any;\r\n        pipLeave: any;\r\n        pipDiactive: any;\r\n    }\r\n\r\n    class DropLink {\r\n\r\n        private _lastDropTouch: any;\r\n        private _myid: number | string;\r\n        private _dropEnabled: boolean;\r\n\r\n        private onDropCallback: Function; // || function(){};\r\n        private onDragStartCallback: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragMoveCallback: Function;\r\n        private onEnterCallback: Function;\r\n        private onLeaveCallback: Function;\r\n        private onDiactiveCallback: Function;\r\n\r\n        constructor(\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDropLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDropLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.pipDrop;\r\n            $scope.isTouching = false;\r\n\r\n            this._myid = $scope.$id;\r\n            this.onDropCallback = $parse($attrs.pipDropSuccess); // || function(){};\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart);\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop);\r\n            this.onDragMoveCallback = $parse($attrs.pipDragMove);\r\n            this.onEnterCallback = $parse($attrs.pipEnter);\r\n            this.onLeaveCallback = $parse($attrs.pipLeave);\r\n            this.onDiactiveCallback = $parse($attrs.pipDiactive);\r\n\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$scope.$watch(this.$attrs.pipDrop, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$on('$destroy', (event) => {\r\n                this.onDestroy(event);\r\n            });\r\n            this.$scope.$on('draggable:start', (evt, obj) => {\r\n                this.onDragStart(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:move', (evt, obj) => {\r\n                this.onDragMove(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:end', (evt, obj) => {\r\n                this.onDragEnd(evt, obj);\r\n            });\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dropEnabled = newVal;\r\n        }\r\n\r\n        private onDragStart(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element, evt, obj);\r\n\r\n            if (this.$attrs.pipDragStart) {\r\n                this.$timeout(() => {\r\n                    this.onDragStartCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragMove(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element, evt, obj);\r\n\r\n            if (this.$attrs.pipDragMove) {\r\n                this.$timeout(() => {\r\n                    this.onDragMoveCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragEnd(evt, obj) {\r\n            // don't listen to drop events if this is the element being dragged\r\n            // only update the styles and return\r\n            if (!this._dropEnabled) {\r\n                this.updateDragStyles(false, obj.element);\r\n                return;\r\n            }\r\n\r\n            if (this.isTouching(obj.x, obj.y, obj.element, evt, obj)) {\r\n                // call the pipDraggable pipDragSuccess element callback\r\n                if (obj.callback) {\r\n                    obj.callback(obj);\r\n                }\r\n\r\n                if (this.$attrs.pipDropSuccess) {\r\n                    this.$timeout(() => {\r\n                        this.onDropCallback(this.$scope, {\r\n                            $data: obj.data,\r\n                            $event: obj,\r\n                            $target: this.$scope.$eval(this.$scope.value)\r\n                        });\r\n                    });\r\n                }\r\n\r\n                if (this.$attrs.pipDiactive) {\r\n                    this.$timeout(() => {\r\n                        this.onDiactiveCallback(this.$scope, {\r\n                            $data: obj.data,\r\n                            $event: obj,\r\n                            $target: this.$scope.$eval(this.$scope.value)\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.$attrs.pipDragStop) {\r\n                this.$timeout(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.updateDragStyles(false, obj.element);\r\n        }\r\n\r\n        private isTouching(mouseX, mouseY, dragElement, evt, obj) {\r\n            const touching = this.hitTest(mouseX, mouseY);\r\n            if (touching !== this.$scope.isTouching) {\r\n                if (touching) {\r\n                    this.onEnterCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj,\r\n                        $target: this.$scope.$eval(this.$scope.value)\r\n                    });\r\n                } else {\r\n                    this.onLeaveCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj,\r\n                        $target: this.$scope.$eval(this.$scope.value)\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.$scope.isTouching = touching;\r\n            if (touching) {\r\n                this._lastDropTouch = this.$element;\r\n            }\r\n            this.updateDragStyles(touching, dragElement);\r\n            return touching;\r\n        }\r\n\r\n        private updateDragStyles(touching, dragElement) {\r\n            if (touching) {\r\n                this.$element.addClass('pip-drag-enter');\r\n                dragElement.addClass('pip-drag-over');\r\n            } else if (this._lastDropTouch == this.$element) {\r\n                this._lastDropTouch = null;\r\n                this.$element.removeClass('pip-drag-enter');\r\n                dragElement.removeClass('pip-drag-over');\r\n            }\r\n        };\r\n\r\n        private hitTest(x, y) {\r\n            const bounds = this.$element[0].getBoundingClientRect();\r\n            x -= this.$document[0].body.scrollLeft + this.$document[0].documentElement.scrollLeft;\r\n            y -= this.$document[0].body.scrollTop + this.$document[0].documentElement.scrollTop;\r\n            return x >= bounds.left &&\r\n                x <= bounds.right &&\r\n                y <= bounds.bottom &&\r\n                y >= bounds.top;\r\n        }\r\n    }\r\n\r\n    const Drop = function (\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDropLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDropLinkAttributes\r\n            ) {\r\n                new DropLink($parse, $document, $timeout, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrop', Drop);\r\n}","{\r\n\r\n    class PreventDragLink {\r\n        constructor(\r\n            private $element: JQuery\r\n        ) {\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false');\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$element.on('mousedown touchstart touchmove touchend touchcancel', (event) => { this.absorbEvent_(event); });\r\n        }\r\n\r\n        private absorbEvent_(event) {\r\n            const e = event.originalEvent;\r\n            e.preventDefault && e.preventDefault();\r\n            e.stopPropagation && e.stopPropagation();\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    const PreventDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new PreventDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipPreventDrag', PreventDrag);\r\n}","angular.module(\"pipDraggable\", []);\r\n\r\nimport './DraggableService';\r\nimport './Drag';\r\nimport './Drop';\r\nimport './PreventDrag';\r\nimport './CancelDrag';\r\n","{\n    interface FocusedScope extends ng.IScope {\n        pipFocusedColor: Function;\n        pipFocusedClass: Function;\n        pipFocusedRebind: Function;\n        pipFocusedTabindex: Function;\n        pipFocusedOpacity: Function;\n        pipFocusedData: Function;\n        pipWithHidden: Function;\n        pipRebind: Function;\n    }\n\n    interface FocusedAttributes extends ng.IAttributes {\n        ngModel: any;\n        pipFocusedData: any;\n    }\n\n    class FocusedLink implements ng.IDirective {\n        private controls: JQuery;\n        private controlsLength: number;\n        private color: string;\n        private opacityDelta: number = 0.4;\n        private opacityLimit: number = 0.5;\n        private oldBackgroundColor: string;\n        private onFocusClass: string;\n\n        constructor(\n            private $scope: FocusedScope,\n            private $element: JQuery,\n            $attrs: FocusedAttributes,\n            private $timeout: ng.ITimeoutService,\n            private $mdConstant: any,\n            private $window: ng.IWindowService\n        ) {\n\n            $element.on('keydown', (e) => {\n                this.keydownListener(e);\n            });\n\n            $timeout(() => {\n                this.init();\n            });\n\n            if ($attrs.ngModel) {\n                $scope.$watch('ngModel', function () {\n                    $timeout(this.init);\n                }, true);\n            }\n\n            if ($attrs.pipFocusedData) {\n                $scope.$watch('pipFocusedData', function () {\n                    $timeout(this.init);\n                }, true);\n            }\n        }\n\n        private init() {\n            const selector = this.$scope.pipWithHidden && this.$scope.pipWithHidden() ? '.pip-focusable' : '.pip-focusable:visible';\n            this.onFocusClass = this.$scope.pipFocusedClass ? this.$scope.pipFocusedClass() : '';\n            this.controls = this.$element.find(selector);\n            this.controlsLength = this.controls.length;\n            this.checkTabindex(this.controls);\n            // Add event listeners\n            this.controls.on('focus', (event) => {\n                const target = event.currentTarget;\n                if ($(target).hasClass('md-focused')) {\n                    return;\n                }\n                if (this.$scope.pipRebind && this.$scope.pipRebind()) {\n                    this.init();\n                }\n                this.$element.addClass('pip-focused-container');\n                $(target).addClass(this.onFocusClass);\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\n\n                    this.color = $(target).css('backgroundColor');\n                    this.oldBackgroundColor = this.color;\n                    $(target).css('backgroundColor', this.rgba(this.color));\n                    $(target).addClass('md-focused');\n                } else {\n                    $(target).addClass('md-focused md-focused-opacity');\n                }\n\n            }).on('focusout', (event) => {\n                const target = event.currentTarget;\n                if (!$(target).hasClass('md-focused')) {\n                    return;\n                }\n                this.$element.removeClass('pip-focused-container');\n                $(target).removeClass(this.onFocusClass);\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\n                    $(target).css('backgroundColor', this.oldBackgroundColor);\n                    $(target).removeClass('md-focused md-focused-opacity');\n                } else {\n                    $(target).removeClass('md-focused');\n                }\n            });\n        }\n\n        private rgba(color) {\n            if (this.$scope.pipFocusedColor && this.$scope.pipFocusedColor()) {\n                return this.$scope.pipFocusedColor();\n            }\n\n            const arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\n\n            if (!arr || arr.length < 3) {\n                return ''\n            }\n\n            let red, blue, green, opacity;\n\n            opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\n            red = arr[0];\n            blue = arr[1];\n            green = arr[2];\n\n            if (opacity < this.opacityLimit) {\n                opacity += this.opacityDelta;\n            } else {\n                opacity -= this.opacityDelta;\n            }\n\n            return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\n        }\n\n        private setTabindex(element, value) {\n            element.attr('tabindex', value);\n        }\n\n        private checkTabindex(controls) {\n            const index = _.findIndex(controls, (c) => {\n                return c['tabindex'] > -1;\n            });\n\n            if (index == -1 && controls.length > 0 && this.$scope.pipFocusedTabindex) {\n                this.setTabindex(angular.element(controls[0]), this.$scope.pipFocusedTabindex());\n            }\n        }\n\n        private keydownListener(e) {\n            const keyCode = e.which || e.keyCode;\n            // Check control keyCode\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\n            ) {\n                e.preventDefault();\n\n                const\n                    increment = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                    moveToControl = this.controls.index(this.controls.filter(\".md-focused\")) + increment;\n                // Move focus to next control\n                if (moveToControl >= 0 && moveToControl < this.controlsLength) {\n                    this.controls[moveToControl].focus();\n                }\n            }\n        }\n    }\n\n    const Focused = function ($timeout: ng.ITimeoutService, \n        $mdConstant: any, \n        $window: ng.IWindowService\n    ): ng.IDirective {\n        return {\n            scope: {\n                pipFocusedColor: '&?',\n                pipFocusedClass: '&?',\n                pipFocusedRebind: '&?',\n                pipFocusedTabindex: '&?',\n                pipFocusedOpacity: '&?',\n                pipFocusedData: '&?',\n                pipWithHidden: '&?',\n                pipRebind: '&?'\n            },\n            link: function($scope: FocusedScope, $element: JQuery, $attrs: FocusedAttributes) {\n                new FocusedLink($scope, $element, $attrs, $timeout, $mdConstant, $window);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipFocused\", [])\n        .directive('pipFocused', Focused);\n}","﻿import './unsaved_changes/UnsavedChanges';\r\nimport './shortcuts/index';\r\nimport './focused/Focused';\r\nimport './draggable/index';\r\nimport './selected/Selected';\r\nimport './infinite_scroll/InfiniteScroll';\r\n\r\nangular.module('pipBehaviors', [\r\n    'pipFocused',\r\n    'pipSelected',\r\n    'pipInfiniteScroll',\r\n    'pipUnsavedChanges',\r\n    'pipDraggable',\r\n    'pipShortcuts'\r\n]);\r\n\r\nexport * from './shortcuts/index';\r\n","{\r\n    interface InfiniteScrollScope extends ng.IScope {\r\n        pipInfiniteScroll: Function;\r\n        pipScrollContainer: JQuery;\r\n        pipScrollDistance: number | string;\r\n        pipScrollDisabled: boolean;\r\n        pipScrollUseDocumentBottom: boolean;\r\n        pipScrollListenForEvent: string;\r\n    }\r\n\r\n    interface InfiniteScrollAttributes extends ng.IAttributes {\r\n        pipScrollParent: any;\r\n        pipScrolImmediateCheck: any;\r\n    }\r\n\r\n    class InfiniteScrollLink {\r\n        private THROTTLE_MILLISECONDS: number = 500;\r\n        private checkWhenEnabled = null;\r\n        private scrollContainer = null;\r\n        private immediateCheck = true;\r\n        private scrollDistance = null;\r\n        private scrollEnabled = null;\r\n        private unregisterEventListener = null;\r\n        private useDocumentBottom = false;\r\n        private windowElement = null;\r\n        private onContainerScrollThrottle: Function;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $window: ng.IWindowService,\r\n            private $interval: ng.IIntervalService,\r\n            private $scope: InfiniteScrollScope,\r\n            private $element: JQuery,\r\n            private $attrs: InfiniteScrollAttributes\r\n        ) {\r\n            this.windowElement = angular.element($window);\r\n\r\n            this.onContainerScrollThrottle = _.throttle(() => {\r\n                this.onContainerScroll();\r\n            }, this.THROTTLE_MILLISECONDS);\r\n\r\n            $scope.$on('$destroy', () => {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n                if (this.unregisterEventListener !== null) {\r\n                    this.unregisterEventListener();\r\n                    return this.unregisterEventListener = null;\r\n                }\r\n            });\r\n\r\n            $scope.$watch('pipScrollDistance', (v) => {\r\n                this.handleScrollDistance(v);\r\n            });\r\n            this.handleScrollDistance($scope.pipScrollDistance);\r\n\r\n            $scope.$watch('pipScrollDisabled', (v) => {\r\n                this.handleScrollDisabled(v);\r\n            });\r\n            this.handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n            $scope.$watch('pipScrollUseDocumentBottom', (v) => {\r\n                this.handleScrollUseDocumentBottom(v);\r\n            });\r\n            this.handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n            this.changeContainer(this.windowElement);\r\n            if ($scope.pipScrollListenForEvent) {\r\n                this.unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            $scope.$watch('pipScrollContainer', (newContainer) => {\r\n                if (newContainer != this.scrollContainer)\r\n                    this.handleScrollContainer(newContainer);\r\n            });\r\n            this.handleScrollContainer($scope.pipScrollContainer || []);\r\n\r\n            if ($attrs.pipScrollParent !== null) {\r\n                this.changeContainer(angular.element($element.parent()));\r\n            }\r\n            if ($attrs.pipScrolImmediateCheck !== null) {\r\n                this.immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n            }\r\n\r\n            $interval((function () {\r\n                if (this.immediateCheck) {\r\n                    return this.onContainerScrollThrottle();\r\n                }\r\n            }), 0, 1);\r\n        }\r\n\r\n        private height(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(element.offsetHeight)) {\r\n                return element.document.documentElement.clientHeight;\r\n            } else {\r\n                return element.offsetHeight;\r\n            }\r\n        }\r\n\r\n        private offsetTop(element) {\r\n            if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                return;\r\n            }\r\n            return element[0].getBoundingClientRect().top + this.pageYOffset(element);\r\n        }\r\n\r\n        private pageYOffset(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(window.pageYOffset)) {\r\n                return element.document.documentElement.scrollTop;\r\n            } else {\r\n                return element.ownerDocument.defaultView.pageYOffset;\r\n            }\r\n        }\r\n\r\n        private onContainerScroll() {\r\n            let containerBottom,\r\n                containerTopOffset,\r\n                elementBottom,\r\n                remaining,\r\n                shouldScroll;\r\n\r\n            if (this.scrollContainer === this.windowElement) {\r\n                containerBottom = this.height(this.scrollContainer) + this.pageYOffset(this.scrollContainer[0].document.documentElement);\r\n                elementBottom = this.offsetTop(this.$element) + this.height(this.$element);\r\n            } else {\r\n                containerBottom = this.height(this.scrollContainer);\r\n                containerTopOffset = 0;\r\n                if (this.offsetTop(this.scrollContainer) !== void 0) {\r\n                    containerTopOffset = this.offsetTop(this.scrollContainer);\r\n                }\r\n                elementBottom = this.offsetTop(this.$element) - containerTopOffset + this.height(this.$element);\r\n            }\r\n\r\n            if (this.useDocumentBottom) {\r\n                elementBottom = this.height((this.$element[0].ownerDocument || ( < any > this.$element[0]).document).documentElement);\r\n            }\r\n\r\n            remaining = elementBottom - containerBottom;\r\n            shouldScroll = remaining <= this.height(this.scrollContainer) * this.scrollDistance + 1;\r\n\r\n            if (shouldScroll) {\r\n                this.checkWhenEnabled = true;\r\n                if (this.scrollEnabled) {\r\n                    if (this.$scope.$$phase || this.$rootScope.$$phase) {\r\n                        return this.$scope.pipInfiniteScroll();\r\n                    } else {\r\n                        return this.$scope.$apply(() => {\r\n                            this.$scope.pipInfiniteScroll();\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                return this.checkWhenEnabled = false;\r\n            }\r\n        }\r\n\r\n        private handleScrollDistance(v) {\r\n            return this.scrollDistance = parseFloat(v) || 0;\r\n        }\r\n\r\n        private handleScrollDisabled(v) {\r\n            this.scrollEnabled = !v;\r\n            if (this.scrollEnabled && this.checkWhenEnabled) {\r\n                this.checkWhenEnabled = false;\r\n                this.onContainerScrollThrottle();\r\n            }\r\n        }\r\n\r\n        private handleScrollUseDocumentBottom(v) {\r\n            return this.useDocumentBottom = v;\r\n        }\r\n\r\n        private changeContainer(newContainer) {\r\n            if (this.scrollContainer) {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            this.scrollContainer = newContainer;\r\n            if (newContainer) {\r\n                return this.scrollContainer.bind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n        }\r\n\r\n        private handleScrollContainer(newContainer) {\r\n            if ((newContainer == null) || newContainer.length === 0) {\r\n                return;\r\n            }\r\n            if (newContainer instanceof HTMLElement) {\r\n                newContainer = angular.element(newContainer);\r\n            } else if (typeof newContainer.append === 'function') {\r\n                newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n            } else if (typeof newContainer === 'string') {\r\n                newContainer = this.$element.parents().find(newContainer);\r\n            }\r\n\r\n            if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                    (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                return this.changeContainer(newContainer);\r\n            } else {\r\n                throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const InfiniteScroll = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $interval: ng.IIntervalService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipInfiniteScroll: '&',\r\n                pipScrollContainer: '=',\r\n                pipScrollDistance: '=',\r\n                pipScrollDisabled: '=',\r\n                pipScrollUseDocumentBottom: '=',\r\n                pipScrollListenForEvent: '@'\r\n            },\r\n            link: function (\r\n                $scope: InfiniteScrollScope,\r\n                $element: JQuery,\r\n                $attrs: InfiniteScrollAttributes\r\n            ) {\r\n                new InfiniteScrollLink($rootScope, $window, $interval, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipInfiniteScroll\", [])\r\n        .directive('pipInfiniteScroll', InfiniteScroll);\r\n}","{\r\n    interface SelectedAttributes extends ng.IAttributes {\r\n        pipSelected: any;\r\n        pipSelectedId: any;\r\n        pipSelect: any;\r\n        pipEnterSpacePress: any;\r\n        pipNoScroll: any;\r\n        pipSkipHidden: any;\r\n        pipTreeList: any;\r\n        pipSelectedWatch: any;\r\n    }\r\n\r\n    class SelectedLink {\r\n        private indexGetter: any;\r\n        private indexSetter: any;\r\n        private idSetter: any;\r\n        private idGetter: any;\r\n        private changeGetter: any;\r\n        private enterSpaceGetter: any;\r\n        private noScroll: any;\r\n        private modifier: any;\r\n        private className: any;\r\n        private selectedIndex: any;\r\n        private currentElementTabinex: any;\r\n        private pipSelectedWatch: any;\r\n        private isScrolled: any;\r\n        // Variables for touch functions\r\n        private touchStartX: any;\r\n        private touchStartY: any;\r\n        private trackingClick: any;\r\n        private trackingClickStart: any;\r\n        private targetElement: any;\r\n        private lastClickTime: any;\r\n        private cancelNextClick: any;\r\n        // Constants for touch functions\r\n        private touchBoundary: number = 10;\r\n        private tapdelay: number = 200;\r\n        private tapTimeout: number = 700;\r\n\r\n        constructor(\r\n            $parse: ng.IParseService,\r\n            private $mdConstant: any,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $scope: ng.IScope,\r\n            private $element: JQuery,\r\n            private $attrs: SelectedAttributes\r\n        ) {\r\n            //todo add stopSelect parametr to disable select\r\n            this.indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null;\r\n            this.indexSetter = this.indexGetter ? this.indexGetter.assign : null;\r\n            this.idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null;\r\n            this.idSetter = this.idGetter ? this.idGetter.assign : null;\r\n            this.changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null;\r\n            this.enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null;\r\n            this.noScroll = $attrs.pipNoScroll;\r\n            this.modifier = $attrs.pipSkipHidden ? ':visible' : '';\r\n            this.className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable';\r\n            this.selectedIndex = this.indexGetter($scope);\r\n            this.currentElementTabinex = $element.attr('tabindex');\r\n            this.pipSelectedWatch = $attrs.pipSelectedWatch;\r\n            this.isScrolled = false;\r\n\r\n            $element.attr('tabindex', this.currentElementTabinex || 0);\r\n\r\n            $element.on('click', this.className, (event) => {\r\n                this.onClickEvent(event);\r\n            });\r\n            $element.on('touchstart', this.className, (event) => {\r\n                this.onTouchStart(event);\r\n            });\r\n            $element.on('touchmove', this.className, (event) => {\r\n                this.onTouchMove(event);\r\n            });\r\n            $element.on('touchend', this.className, (event) => {\r\n                this.onTouchEnd(event);\r\n            });\r\n            $element.on('touchcancel', this.className, (event) => {\r\n                this.onTouchCancel(event);\r\n            });\r\n            $element.on('keydown', (event) => {\r\n                this.onKeyDown(event);\r\n            });\r\n            $element.on('focusin', (event) => {\r\n                this.onFocusIn(event);\r\n            });\r\n            $element.on('focusout', (event) => {\r\n                this.onFocusOut(event);\r\n            });\r\n\r\n            // Watch selected item index\r\n            if (!$attrs.pipTreeList) {\r\n                $scope.$watch(this.indexGetter, (newSelectedIndex) => {\r\n                    this.selectItem({\r\n                        itemIndex: newSelectedIndex\r\n                    });\r\n                });\r\n            } else {\r\n                $scope.$watch(this.idGetter, (newSelectedId) => {\r\n                    $timeout(() => {\r\n                        this.selectItem({\r\n                            itemId: newSelectedId,\r\n                            raiseEvent: true\r\n                        });\r\n                    }, 0);\r\n                });\r\n            }\r\n\r\n            // Watch resync selection\r\n            if (this.pipSelectedWatch) {\r\n                $scope.$watch(this.pipSelectedWatch, () => {\r\n                    // Delay update to allow ng-repeat to update DOM\r\n                    $timeout(() => {\r\n                        this.selectedIndex = this.indexGetter($scope);\r\n                        this.selectItem({\r\n                            itemIndex: this.selectedIndex\r\n                        });\r\n                    }, 100);\r\n                });\r\n            }\r\n\r\n            // Select item defined by index\r\n            this.selectItem({\r\n                itemIndex: this.selectedIndex,\r\n                items: $element.find(this.className)\r\n            });\r\n        }\r\n\r\n        private selectItem(itemParams) {\r\n            if (this.isScrolled) return;\r\n            let itemIndex = itemParams.itemIndex,\r\n                itemId = itemParams.itemId,\r\n                items = itemParams.items || this.$element.find(this.className + this.modifier),\r\n                itemsLength = items.length,\r\n                item = () => {\r\n                    if (itemParams.item) return itemParams.item;\r\n                    if (itemIndex === undefined && itemIndex === -1) {\r\n                        itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                    }\r\n                    if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                        return items[itemIndex]\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                raiseEvent = itemParams.raiseEvent;\r\n                item = item();\r\n            if (item) {\r\n                this.$element.find(this.className).removeClass('selected md-focused');\r\n                item = <any>angular.element(item)\r\n                    .addClass('selected md-focused')\r\n                    .focus();\r\n                if (!this.noScroll) this.scrollToItem(item);\r\n                if (raiseEvent) this.defineSelectedIndex(items);\r\n            }\r\n        };\r\n\r\n        private defineSelectedIndex(items) {\r\n            const oldSelectedIndex = this.selectedIndex;\r\n            this.selectedIndex = -1;\r\n            for (var index = 0; index < items.length; index++) {\r\n                if ($(items[index]).hasClass('selected')) {\r\n                    this.selectedIndex = index;\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            const updateIndex = () => {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.indexSetter) this.indexSetter(this.$scope, this.selectedIndex);\r\n                if (this.idSetter) this.idSetter(this.$scope, selectedId);\r\n                onSelect();\r\n            };\r\n\r\n            const onSelect = () => {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.changeGetter) {\r\n                    this.changeGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            item: selectedItem,\r\n                            index: this.selectedIndex,\r\n                            id: selectedId,\r\n                            newIndex: this.selectedIndex,\r\n                            oldIndex: oldSelectedIndex\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Execute callback to notify about item select\r\n            if (oldSelectedIndex != this.selectedIndex && this.selectedIndex !== -1) {\r\n                this.$scope.$apply(() => { updateIndex(); });\r\n            } else {\r\n                this.$scope.$apply(() => { onSelect(); });\r\n            }\r\n        };\r\n\r\n        private scrollToItem($item) {\r\n            if (this.noScroll || !$item.offset()) return;\r\n\r\n            const\r\n                containerTop = this.$element.offset().top,\r\n                containerHeight = this.$element.height(),\r\n                containerBottom = containerTop + containerHeight,\r\n                itemTop = $item.offset().top,\r\n                itemHeight = $item.outerHeight(true),\r\n                itemBottom = itemTop + itemHeight,\r\n                containerScrollTop = this.$element.scrollTop();\r\n\r\n            this.isScrolled = true;\r\n            this.$timeout(() => {\r\n                this.isScrolled = false;\r\n            }, 100);\r\n\r\n            if (containerTop > itemTop) {\r\n                this.$element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n            } else if (containerBottom < itemBottom) {\r\n                this.$element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n            }\r\n        };\r\n\r\n        private getTargetElementFromEventTarget(eventTarget) {\r\n            // On some older browsers the event target may be a text node.\r\n            if (eventTarget.nodeType === Node.TEXT_NODE) {\r\n                return eventTarget.parentNode;\r\n            }\r\n\r\n            return eventTarget;\r\n        };\r\n\r\n        private touchHasMoved(event) {\r\n            const touch = event.changedTouches[0],\r\n                boundary = this.touchBoundary; // Touchmove boundary, beyond which a click will be cancelled.\r\n\r\n            if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        private onClickEvent(event) {\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n        }\r\n\r\n        private onTouchStart(event) {\r\n            const ev = event.originalEvent;\r\n            if (ev['targetTouches'].length > 1) {\r\n                return true;\r\n            }\r\n            const targetElement = this.getTargetElementFromEventTarget(ev.target),\r\n                touch = ev['targetTouches'][0];\r\n\r\n            this.trackingClick = true;\r\n            this.trackingClickStart = ev.timeStamp;\r\n            this.targetElement = targetElement;\r\n\r\n            this.touchStartX = touch.pageX;\r\n            this.touchStartY = touch.pageY;\r\n\r\n            /*if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                //  event.preventDefault();\r\n            }*/\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchMove(event) {\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // If the touch has moved, cancel the click tracking\r\n            if (this.targetElement !== this.getTargetElementFromEventTarget(ev.target) || this.touchHasMoved(ev)) {\r\n                this.trackingClick = false;\r\n                this.targetElement = null;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchEnd(event) {\r\n            let forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = this.targetElement;\r\n\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // Prevent phantom clicks on fast double-tap \r\n            if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                this.cancelNextClick = true;\r\n                return true;\r\n            }\r\n\r\n            if ((ev.timeStamp - this.trackingClickStart) > this.tapTimeout) {\r\n                return true;\r\n            }\r\n\r\n            // Reset to prevent wrong click cancel on input \r\n            this.cancelNextClick = false;\r\n\r\n            this.lastClickTime = event.timeStamp;\r\n\r\n            newTrackingClickStart = this.trackingClickStart;\r\n            this.trackingClick = false;\r\n            this.trackingClickStart = 0;\r\n\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        private onTouchCancel(event) {\r\n            this.trackingClick = false;\r\n            this.targetElement = null;\r\n        }\r\n\r\n        private onKeyDown(event) {\r\n            var keyCode = event.which || event.keyCode;\r\n\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.ENTER || keyCode == this.$mdConstant.KEY_CODE.SPACE) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (this.enterSpaceGetter) {\r\n                    this.enterSpaceGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            index: this.selectedIndex,\r\n                            item: this.$element.find('.selected')\r\n                        }\r\n                    });\r\n                }\r\n\r\n            } else\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW || keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                // Get next selectable control index\r\n                const items = this.$element.find(this.className + this.modifier),\r\n                    inc = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    newSelectedIndex = this.selectedIndex + inc;\r\n\r\n                // Set next control as selected\r\n                this.selectItem({\r\n                    itemIndex: newSelectedIndex,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusIn(event) {\r\n            // Choose selected element\r\n            let items,\r\n                selectedItem = this.$element.find(this.className + '.selected');\r\n\r\n            selectedItem.addClass('md-focused');\r\n\r\n            // If there are not selected elements then pick the first one\r\n            if (selectedItem.length === 0) {\r\n                this.selectedIndex = this.indexGetter(this.$scope);\r\n                items = this.$element.find(this.className + this.modifier);\r\n                this.selectItem({\r\n                    itemIndex: this.selectedIndex || 0,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusOut(event) {\r\n            this.$element.find(this.className + '.md-focused' + this.modifier).removeClass('md-focused');\r\n        }\r\n    }\r\n\r\n    const Selected = function (\r\n        $parse: ng.IParseService,\r\n        $mdConstant: any,\r\n        $timeout: ng.ITimeoutService\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: SelectedAttributes\r\n            ) {\r\n                new SelectedLink($parse, $mdConstant, $timeout, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipSelected\", [])\r\n        .directive('pipSelected', Selected);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\n\r\nexport class ShortcutItem {\r\n    // Shortcut combination\r\n    public shortcut: string;\r\n    // Target object \r\n    public target?: any;\r\n    // Target element by Id\r\n    public targetId?: string;\r\n    // Target element by class (firstelement??)\r\n    // Public targetClass?: string;\r\n    // Access function\r\n    public access?: (event: JQueryEventObject) => boolean;\r\n    // Window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public keypress?: (event: JQueryEventObject) => void;\r\n    // Default options\r\n    public options?: ShortcutOptions;    \r\n}\r\n\r\n// export class ShortcutItem extends SimpleShortcutItem {\r\n//     public shortcuts: SimpleShortcutItem[];\r\n// }\r\n\r\nexport class ShortcutsConfig {\r\n    // Global shortcut \r\n    public globalShortcuts: ShortcutItem[] = [];\r\n    // Local shortcut \r\n    public localShortcuts: ShortcutItem[] = [];\r\n    // Default options\r\n    public defaultOptions: ShortcutOptions = null;\r\n}\r\n\r\nexport interface IShortcutsService {\r\n    readonly config: ShortcutsConfig;\r\n\r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n}\r\n\r\nexport interface IShortcutsProvider extends ng.IServiceProvider {\r\n    config: ShortcutsConfig;\r\n    \r\n    globalShortcuts: ShortcutItem[];\r\n    defaultOptions: ShortcutOptions;\r\n}\r\n","export class KeyboardEvent {\r\n    static Keydown: string = 'keydown';\r\n    static Keyup: string = 'keyup';\r\n    static Keypress: string = 'keypress';\r\n}\r\n\r\nexport class ShortcutOptions {\r\n    Type: KeyboardEvent;\r\n    Propagate: boolean;\r\n    DisableInInput: boolean;\r\n    Target: any; // Event target object\r\n    Keycode: number;\r\n}\r\n\r\nexport class Shortcut {\r\n    private shift_nums = {\r\n        \"`\": \"~\",\r\n        \"1\": \"!\",\r\n        \"2\": \"@\",\r\n        \"3\": \"#\",\r\n        \"4\": \"$\",\r\n        \"5\": \"%\",\r\n        \"6\": \"^\",\r\n        \"7\": \"&\",\r\n        \"8\": \"*\",\r\n        \"9\": \"(\",\r\n        \"0\": \")\",\r\n        \"-\": \"_\",\r\n        \"=\": \"+\",\r\n        \";\": \":\",\r\n        \"'\": \"\\\"\",\r\n        \",\": \"<\",\r\n        \".\": \">\",\r\n        \"/\": \"?\",\r\n        \"\\\\\": \"|\"\r\n    };\r\n\r\n    private special_keys = {\r\n        'esc': 27,\r\n        'escape': 27,\r\n        'tab': 9,\r\n        'space': 32,\r\n        'return': 13,\r\n        'enter': 13,\r\n        'backspace': 8,\r\n\r\n        'scrolllock': 145,\r\n        'scroll_lock': 145,\r\n        'scroll': 145,\r\n        'capslock': 20,\r\n        'caps_lock': 20,\r\n        'caps': 20,\r\n        'numlock': 144,\r\n        'num_lock': 144,\r\n        'num': 144,\r\n\r\n        'pause': 19,\r\n        'break': 19,\r\n\r\n        'insert': 45,\r\n        'home': 36,\r\n        'delete': 46,\r\n        'end': 35,\r\n\r\n        'pageup': 33,\r\n        'page_up': 33,\r\n        'pu': 33,\r\n\r\n        'pagedown': 34,\r\n        'page_down': 34,\r\n        'pd': 34,\r\n\r\n        'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,\r\n\r\n        'f1': 112,\r\n        'f2': 113,\r\n        'f3': 114,\r\n        'f4': 115,\r\n        'f5': 116,\r\n        'f6': 117,\r\n        'f7': 118,\r\n        'f8': 119,\r\n        'f9': 120,\r\n        'f10': 121,\r\n        'f11': 122,\r\n        'f12': 123\r\n    };\r\n\r\n    private modifiers = {\r\n        shift: { wanted: false, pressed: false },\r\n        ctrl: { wanted: false, pressed: false },\r\n        alt: { wanted: false, pressed: false },\r\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\r\n    };\r\n\r\n    public eventCallback: Function;\r\n    public target: any;\r\n    public event: KeyboardEvent;\r\n    public option: ShortcutOptions;\r\n    public shorcut: string;\r\n    public callback: Function;\r\n\r\n    public constructor(\r\n        element: any,\r\n        shorcutCombination: string,\r\n        option: ShortcutOptions,\r\n        callback: (e?: JQueryEventObject) => void\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.target = element;\r\n        this.shorcut = shorcutCombination;\r\n        this.event = option.Type;\r\n        this.option = option;\r\n        this.callback = callback;\r\n\r\n        this.eventCallback = (event: JQueryEventObject) => {\r\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\r\n            let code: number;\r\n\r\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\r\n                let element;\r\n                if (e.target) {\r\n                    element = e.target;\r\n                } else if (e.srcElement) {\r\n                    element = e.srcElement;\r\n                }\r\n\r\n                if (element.nodeType == 3) {\r\n                    element = element.parentNode;\r\n                }\r\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\r\n            }\r\n            // Find Which key is pressed\r\n            if (e.keyCode) {\r\n                code = e.keyCode;\r\n            } else if (e.which) {\r\n                code = e.which;\r\n            }\r\n\r\n            let character = String.fromCharCode(code).toLowerCase();\r\n\r\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\r\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\r\n\r\n            let keys: string[] = this.shorcut.split(\"+\");\r\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\r\n            let kp: number = 0;\r\n\r\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\r\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\r\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\r\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\r\n\r\n            let i: number = 0;\r\n            for (i = 0; i < keys.length; i++) {\r\n                let k: string = keys[i];\r\n                // Modifiers\r\n                if (k == 'ctrl' || k == 'control') {\r\n                    kp++;\r\n                    this.modifiers.ctrl.wanted = true;\r\n                } else if (k == 'shift') {\r\n                    kp++;\r\n                    this.modifiers.shift.wanted = true;\r\n                } else if (k == 'alt') {\r\n                    kp++;\r\n                    this.modifiers.alt.wanted = true;\r\n                } else if (k == 'meta') {\r\n                    kp++;\r\n                    this.modifiers.meta.wanted = true;\r\n                } else if (k.length > 1) { // If it is a special key\r\n                    if (this.special_keys[k] == code) {\r\n                        kp++;\r\n                    }\r\n                } else if (this.option.Keycode) {\r\n                    if (this.option.Keycode == code) kp++;\r\n                } else { // The special keys did not match\r\n                    if (character == k) kp++;\r\n                    else {\r\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\r\n                            character = this.shift_nums[character];\r\n                            if (character == k) {\r\n                                kp++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (kp == keys.length &&\r\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\r\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\r\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\r\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\r\n\r\n                this.callback(e);\r\n\r\n                if (!this.option.Propagate) { // Stop the event\r\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    // e.stopPropagation works in Firefox.\r\n                    if (e.stopPropagation) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n            this.modifiers.ctrl.pressed = false;\r\n            this.modifiers.shift.pressed = false;\r\n            this.modifiers.alt.pressed = false;\r\n            this.modifiers.meta.pressed = false;\r\n        };\r\n    }\r\n}\r\n","import { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { IKeyboardShortcuts, IShortcutBindingService, IShortcutBindingProvider } from './IShortcutBindingService';\r\n\r\n{\r\n    class ShortcutBindingService implements IShortcutBindingService {\r\n        private _log: ng.ILogService;\r\n        private _defaultOption: ShortcutOptions;\r\n        private _shortcuts: IKeyboardShortcuts = {};\r\n\r\n        public constructor(\r\n            $log: ng.ILogService,\r\n            option: ShortcutOptions\r\n        ) {\r\n            \"ngInject\";\r\n            this._log = $log;\r\n            this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\r\n        }\r\n\r\n        private getDefaultOption(): ShortcutOptions {\r\n            let defaultOption: ShortcutOptions = {\r\n                Type: KeyboardEvent.Keydown,\r\n                Propagate: false,\r\n                DisableInInput: false,\r\n                Target: document,\r\n                Keycode: null\r\n            };\r\n\r\n            return defaultOption;\r\n        }\r\n\r\n        public get shortcuts(): IKeyboardShortcuts {\r\n            return this._shortcuts;\r\n        }\r\n\r\n        public add(shortcut: string, callback: (e: JQueryEventObject) => void, option: ShortcutOptions): void {\r\n            this.remove(shortcut);\r\n            let shortcutOption: ShortcutOptions = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\r\n            let shortcutCombination: string = shortcut.toLowerCase();\r\n            let element = shortcutOption.Target;\r\n\r\n            if (typeof shortcutOption.Target == 'string') {\r\n                element = document.getElementById(shortcutOption.Target);\r\n            } else {\r\n                element = shortcutOption.Target;\r\n            }\r\n\r\n            if (!element) {\r\n                this._log.error('Register shortcut: element undentified!');\r\n                return;\r\n            }\r\n\r\n            if (!shortcutCombination) {\r\n                this._log.error('Register shortcut: shortcut combination undentified!');\r\n                return;\r\n            }\r\n\r\n            if (!callback) {\r\n                this._log.error('Register shortcut: shorcut callback undentified!');\r\n                return;\r\n            }\r\n\r\n            let newKeyboardShortcut = new Shortcut(element, shortcutCombination, shortcutOption, callback);\r\n\r\n            this._shortcuts[shortcutCombination] = newKeyboardShortcut;\r\n\r\n            //Attach the function with the event\r\n            if (element.addEventListener) {\r\n                element.addEventListener(shortcutOption.Type, newKeyboardShortcut.eventCallback, false);\r\n            } else if (element.attachEvent) {\r\n                element.attachEvent('on' + shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n            } else {\r\n                element.on(shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n            }\r\n        }\r\n\r\n        public remove(shorcut: string): void {\r\n            let shortcutCombination = shorcut.toLowerCase();\r\n            let binding: Shortcut = this._shortcuts[shortcutCombination];\r\n\r\n            delete(this._shortcuts[shortcutCombination])\r\n            if (!binding) return;\r\n\r\n            let type = binding.event;\r\n            let element = binding.target;\r\n            let callback = binding.eventCallback;\r\n\r\n            if (element.detachEvent) {\r\n                element.detachEvent('on' + type, callback);\r\n            } else if (element.removeEventListener) {\r\n                element.removeEventListener(type, callback, false);\r\n            } else {\r\n                // element['on' + type] = false;\r\n                element.off(type, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    class ShortcutBindingProvider implements IShortcutBindingProvider {\r\n        private _service: ShortcutBindingService;\r\n        private _option: ShortcutOptions;\r\n\r\n        public get option(): ShortcutOptions {\r\n            return this._option;\r\n        }\r\n\r\n        public set option(value: ShortcutOptions) {\r\n            this._option = value || new ShortcutOptions();\r\n        }\r\n\r\n        public $get(\r\n            $log: ng.ILogService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null)\r\n                this._service = new ShortcutBindingService($log, this._option);\r\n\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .provider('pipShortcutBinding', ShortcutBindingProvider);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\nimport { IShortcutBindingService } from \"./IShortcutBindingService\";\r\n\r\ninterface ShortcutAttributes extends ng.IAttributes {\r\n    pipShortcutAction: any;\r\n    pipShortcutName: any;\r\n    pipShorcutOptions: ShortcutOptions;\r\n}\r\n\r\nclass ShortcutController implements ng.IController  {\r\n    private actionShortcuts: Function;\r\n    private nameShortcuts: string;\r\n    private options: ShortcutOptions;\r\n\r\n    constructor(\r\n        $element: JQuery,\r\n        $attrs: ShortcutAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $parse: ng.IParseService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if ($attrs.pipShortcutAction) {\r\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\r\n            // this.actionShortcuts($scope, {$event: {}});\r\n        } else {\r\n            $log.error('Shortcut action does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\r\n            this.nameShortcuts = $attrs.pipShortcutName;\r\n        } else {\r\n            $log.error('Shortcut name does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOptions>$attrs.pipShorcutOptions : <ShortcutOptions>{};\r\n        this.options.Target = $element;\r\n        \r\n        // Registration of keybord shortcuts\r\n        pipShortcutBinding.add(this.nameShortcuts, (e?: any) => {\r\n            this.actionShortcuts($scope, {$event: {'e': e}});          \r\n        }, this.options);\r\n    }\r\n\r\n    private keypressShortcut(action) {\r\n        this.actionShortcuts();\r\n    }\r\n\r\n    public $onInit() {}\r\n}\r\n\r\n// Prevent junk from going into typescript definitions\r\n{\r\n    const shortcutsDirective = function(): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,            \r\n            controller: ShortcutController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .directive('pipShortcut', shortcutsDirective);\r\n}","import { IShortcutBindingService } from \"./IShortcutBindingService\"\r\nimport { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { ShortcutsConfig, ShortcutItem, IShortcutsService, IShortcutsProvider } from './IShortcutsService';\r\n\r\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\r\n\r\nclass ShortcutsService implements IShortcutsService {\r\n    private _oldConfig: ShortcutsConfig;\r\n    private _config: ShortcutsConfig;\r\n\r\n    public constructor(\r\n        config: ShortcutsConfig,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService, \r\n        private $location: ng.ILocationService, \r\n        private $injector: ng.auto.IInjectorService,\r\n        private pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n        this._config = config;\r\n        this._oldConfig = _.cloneDeep(this._config);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this._config.globalShortcuts);\r\n        this.addShortcuts(this._config.localShortcuts);        \r\n    }\r\n\r\n    // Describe private functions\r\n    private sendChangeEvent() {\r\n        // Remove shortcuts\r\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\r\n        this.removeShortcuts(this._oldConfig.localShortcuts);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this.config.globalShortcuts);\r\n        this.addShortcuts(this.config.localShortcuts);\r\n\r\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\r\n\r\n        // Save current config to oldConfig\r\n        this._oldConfig = _.cloneDeep(this.config);\r\n    }\r\n\r\n    private removeShortcuts(collection: ShortcutItem[]): void {\r\n        _.each(collection, (k) => {\r\n            this.pipShortcutBinding.remove(k.shortcut);\r\n        });\r\n    }\r\n\r\n    private keypressShortcut(item: ShortcutItem, event: JQueryEventObject) {\r\n        if (item.access && _.isFunction(item.access)) {\r\n            if (!item.access(event)) {\r\n                return;\r\n            }\r\n        } \r\n\r\n        if (item.keypress) {\r\n            item.keypress(event);\r\n            return;\r\n        }\r\n\r\n        if (item.href) {\r\n            this.$window.location.href = item.href;\r\n            return;\r\n        }\r\n\r\n        if (item.url) {\r\n            this.$location.url(item.url);\r\n            return;\r\n        }\r\n\r\n        if (item.state) {\r\n            if (this.$injector.has('$state')) {\r\n                var $state = this.$injector.get('$state');\r\n                $state['go'](item.state, item.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (item.event) {\r\n            this.$rootScope.$broadcast(item.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipShortcutKeypress', item.shortcut);\r\n        }\r\n    }\r\n\r\n    private addShortcuts(collection: ShortcutItem[]): void {\r\n        let generalOptions: ShortcutOptions = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOptions>{};\r\n        \r\n        _.each(collection, (k) => {\r\n            let option: ShortcutOptions = k.options ? k.options : generalOptions;\r\n            let target: any;\r\n\r\n            target = k.target ? k.target : k.targetId;\r\n            if (target) { \r\n                option.Target = target;\r\n            }\r\n            // Registration of keyboard shortcut\r\n            this.pipShortcutBinding.add(k.shortcut, (e?: any) => {\r\n                this.keypressShortcut(k, e);        \r\n            }, option);              \r\n        });\r\n    }\r\n\r\n    // Describe public functions \r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n}\r\n\r\nclass ShortcutsProvider implements IShortcutsProvider {\r\n    private _config: ShortcutsConfig = new ShortcutsConfig();\r\n    private _service: ShortcutsService;\r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ShortcutsConfig) {\r\n        this._config = value || new ShortcutsConfig();\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: ng.IRootScopeService, \r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutBinding);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcuts', ShortcutsProvider);\r\n\r\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\r\n\r\nimport './ShortcutBindingService';\r\nimport './ShortcutsService';\r\nimport './ShortcutDirective';\r\n\r\nexport * from './IShortcutsService';\r\nexport * from './IShortcutBindingService';\r\nexport * from './ShortcutsService';\r\nexport * from './ShortcutBindingService';","{\r\n    interface UnsavedChangesScope extends ng.IScope {\r\n        unsavedChangesAvailable: Function;\r\n        unsavedChangesMessage: string;\r\n        cancelLeave: Function;\r\n        afterLeave: Function;\r\n    }\r\n\r\n    class UnsavedChangesLink {\r\n        constructor(\r\n            $scope: UnsavedChangesScope,\r\n            $window: ng.IWindowService\r\n        ) {\r\n            $window.onbeforeunload = () => {\r\n                if ($scope.unsavedChangesAvailable()) {\r\n                    return $scope.unsavedChangesMessage;\r\n                }\r\n            };\r\n\r\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\r\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\r\n                    event.preventDefault();\r\n                } else {\r\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                }\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                $window.onbeforeunload = null;\r\n                unbindFunc();\r\n            });\r\n        }\r\n    }\r\n\r\n    const UnsavedChanges = function ($window: ng.IWindowService) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave',\r\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\r\n            },\r\n            link: function ($scope: UnsavedChangesScope) {\r\n                new UnsavedChangesLink($scope, $window);\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"pipUnsavedChanges\", [])\r\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZHJhZ2dhYmxlL0NhbmNlbERyYWcudHMiLCJzcmMvZHJhZ2dhYmxlL0RyYWcudHMiLCJzcmMvZHJhZ2dhYmxlL0RyYWdnYWJsZVNlcnZpY2UudHMiLCJzcmMvZHJhZ2dhYmxlL0Ryb3AudHMiLCJzcmMvZHJhZ2dhYmxlL1ByZXZlbnREcmFnLnRzIiwic3JjL2RyYWdnYWJsZS9pbmRleC50cyIsInNyYy9mb2N1c2VkL0ZvY3VzZWQudHMiLCJzcmMvaW5kZXgudHMiLCJzcmMvaW5maW5pdGVfc2Nyb2xsL0luZmluaXRlU2Nyb2xsLnRzIiwic3JjL3NlbGVjdGVkL1NlbGVjdGVkLnRzIiwic3JjL3Nob3J0Y3V0cy9JU2hvcnRjdXRzU2VydmljZS50cyIsInNyYy9zaG9ydGN1dHMvU2hvcnRjdXQudHMiLCJzcmMvc2hvcnRjdXRzL1Nob3J0Y3V0QmluZGluZ1NlcnZpY2UudHMiLCJzcmMvc2hvcnRjdXRzL1Nob3J0Y3V0RGlyZWN0aXZlLnRzIiwic3JjL3Nob3J0Y3V0cy9TaG9ydGN1dHNTZXJ2aWNlLnRzIiwic3JjL3Nob3J0Y3V0cy9pbmRleC50cyIsInNyYy91bnNhdmVkX2NoYW5nZXMvVW5zYXZlZENoYW5nZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxDQUFDO0lBQ0c7UUFDSSwwQkFDSSxRQUFnQjtZQUVoQixRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2xFLENBQUM7UUFDTCx1QkFBQztJQUFELENBTkEsQUFNQyxJQUFBO0lBRUQsSUFBTSxVQUFVLEdBQUc7UUFDZixNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLElBQUksRUFBRSxVQUNGLE1BQWlCLEVBQ2pCLFFBQWdCLEVBQ2hCLE1BQXNCO2dCQUV0QixJQUFJLGdCQUFjLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDakMsQ0FBQztTQUNKLENBQUE7SUFDTCxDQUFDLENBQUE7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUN0QixTQUFTLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2hELENBQUM7Ozs7QUNyQkQsQ0FBQztJQXFCRztRQStDSSxvQkFDWSxVQUFnQyxFQUNoQyxNQUF3QixFQUN4QixTQUE4QixFQUM5QixPQUEwQixFQUMxQixZQUErQixFQUMvQixNQUFzQixFQUN0QixRQUFnQixFQUNoQixNQUEyQjtZQVAzQixlQUFVLEdBQVYsVUFBVSxDQUFzQjtZQUNoQyxXQUFNLEdBQU4sTUFBTSxDQUFrQjtZQUN4QixjQUFTLEdBQVQsU0FBUyxDQUFxQjtZQUM5QixZQUFPLEdBQVAsT0FBTyxDQUFtQjtZQUMxQixpQkFBWSxHQUFaLFlBQVksQ0FBbUI7WUFDL0IsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7WUFDdEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtZQUNoQixXQUFNLEdBQU4sTUFBTSxDQUFxQjtZQXREL0IsZUFBVSxHQUFXLEVBQUUsQ0FBQztZQUV4QixrQkFBYSxHQUFZLEtBQUssQ0FBQztZQU8vQixjQUFTLEdBQVksQ0FBQyxjQUFjLElBQUksTUFBTSxDQUFDLElBQWMsTUFBTyxDQUFDLGFBQWEsQ0FBQztZQUNuRixpQkFBWSxHQUFXLHNCQUFzQixDQUFDO1lBQzlDLGdCQUFXLEdBQVcscUJBQXFCLENBQUM7WUFDNUMsbUJBQWMsR0FBVyxrQkFBa0IsQ0FBQztZQUs1QyxVQUFLLEdBQVEsSUFBSSxDQUFDO1lBRWxCLGdCQUFXLEdBQVEsSUFBSSxDQUFDO1lBRXhCLGlCQUFZLEdBQVksS0FBSyxDQUFDO1lBRTlCLGdCQUFXLEdBQVEsSUFBSSxDQUFDO1lBRXhCLGtCQUFhLEdBQVEsRUFBRSxDQUFDO1lBYXhCLGlCQUFZLEdBQVksS0FBSyxDQUFDO1lBRTlCLG9CQUFlLEdBQVcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUlsRCxnQ0FBMkIsR0FBYSxPQUFPLENBQUMsSUFBSSxDQUFDO1lBWXpELE1BQU0sQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUM3QixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUM7WUFDeEIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxDQUFDO1lBQy9ELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQztZQUM1RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLENBQUM7WUFDN0QsSUFBSSxDQUFDLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksSUFBSSxDQUFDO1lBQ25FLElBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsS0FBSyxDQUFDO1lBRTdHLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLENBQUM7WUFDdkQsSUFBSSxDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxtQkFBbUIsSUFBSSxJQUFJLENBQUM7WUFDM0QsSUFBSSxDQUFDLGtCQUFrQixHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDekUsSUFBSSxDQUFDLGNBQWMsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3JFLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFFL0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ3BDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN0QixDQUFDO1FBRU8sK0JBQVUsR0FBbEI7WUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFJN0MsSUFBSSxXQUFnQixDQUFDO1lBQ3JCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO2dCQUNwQyxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztZQUMxRixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7WUFDMUQsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztZQUNuQyxDQUFDO1lBQ0QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUczQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztZQUNuRSxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO2dCQUN4QyxJQUFJLENBQUMsZUFBZSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BGLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixJQUFJLENBQUMsZUFBZSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDbkQsQ0FBQztRQUNMLENBQUM7UUFFTyxvQ0FBZSxHQUF2QixVQUF3QixNQUFNO1lBQTlCLGlCQThCQztZQTdCRyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFHcEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFO2dCQUN4QixLQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBQyxNQUFNLEVBQUUsTUFBTTtnQkFDbkQsS0FBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDeEMsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxVQUFDLE1BQU0sRUFBRSxNQUFNO2dCQUMzRCxLQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztZQUN4QyxDQUFDLENBQUMsQ0FBQztZQUVILEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO2dCQUVuQixJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLFVBQUMsS0FBSztvQkFDekMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDeEIsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBRUosSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxVQUFDLEtBQUs7b0JBQ3RDLEtBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3hCLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUN0RSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUU7b0JBQzFCLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQ2pCLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFFTyw4QkFBUyxHQUFqQixVQUFrQixNQUFNO1lBQ3BCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEMsQ0FBQztRQUVPLG1DQUFjLEdBQXRCLFVBQXVCLE1BQU0sRUFBRSxNQUFNO1lBQ2pDLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqQyxDQUFDO1FBRU8sbUNBQWMsR0FBdEIsVUFBdUIsTUFBTSxFQUFFLE1BQU07WUFDakMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsQ0FBQztRQUNoRCxDQUFDO1FBRU8sdUNBQWtCLEdBQTFCLFVBQTJCLEdBQUc7WUFDMUIsTUFBTSxDQUFDLENBQ0gsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUN6RSxDQUFDO1FBQ04sQ0FBQztRQU1PLDRCQUFPLEdBQWYsVUFBZ0IsR0FBRztZQUFuQixpQkE2QkM7WUE1QkcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUUvQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixNQUFNLENBQUM7WUFDWCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxXQUFXLElBQUksR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUU3QyxNQUFNLENBQUM7WUFDWCxDQUFDO1lBRUQsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFFekIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztnQkFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7b0JBQzFCLEtBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztvQkFDbkIsS0FBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDMUIsQ0FBQyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtvQkFDaEMsS0FBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO2dCQUN2QixDQUFDLENBQUMsQ0FBQztnQkFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFO29CQUNuQyxLQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDMUIsQ0FBQztRQUNMLENBQUM7UUFFTyxzQ0FBaUIsR0FBekI7WUFDSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzVELElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFELENBQUM7UUFFTyxnQ0FBVyxHQUFuQjtZQUFBLGlCQVFDO1lBUEcsWUFBWSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUMvQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUNqQyxLQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDdkIsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFO2dCQUNwQyxLQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDdkIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO1FBRU8sZ0NBQVcsR0FBbkIsVUFBb0IsR0FBRztZQUF2QixpQkEyQ0M7WUExQ0csRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUMvQixHQUFHLENBQUMsY0FBYyxFQUFFLENBQUM7WUFFckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixFQUFFLENBQUM7WUFDdkQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ25DLElBQUksQ0FBQyxDQUFDO2dCQUNGLElBQUksQ0FBQyxXQUFXLEdBQUc7b0JBQ2YsSUFBSSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVTtvQkFDOUIsR0FBRyxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUztpQkFDL0IsQ0FBQztZQUNOLENBQUM7WUFHUyxJQUFJLENBQUMsUUFBUyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7WUFDMUQsSUFBSSxDQUFDLFFBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO1lBRXJFLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ25ELElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUN4QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7WUFDdkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBYSxJQUFJLENBQUMsUUFBUyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztnQkFDbEYsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFhLElBQUksQ0FBQyxRQUFTLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQ3RGLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztnQkFDM0QsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7WUFDL0QsQ0FBQztZQUVELElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsVUFBQyxLQUFLO2dCQUN0QyxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxVQUFDLEtBQUs7Z0JBQ3pDLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7WUFLSCxJQUFJLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsK0JBQStCLEVBQUUsVUFBQyxLQUFLLEVBQUUsU0FBUztnQkFDckcsS0FBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUMzQixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFFTywyQkFBTSxHQUFkLFVBQWUsR0FBRztZQUFsQixpQkErREM7WUE5REcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUMvQixHQUFHLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDckIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQzNDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUN2QyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsRUFBRTtvQkFDMUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHO29CQUNYLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRztvQkFDWCxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUc7b0JBQ1osRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHO29CQUNaLEtBQUssRUFBRSxHQUFHO29CQUNWLE9BQU8sRUFBRSxJQUFJLENBQUMsUUFBUTtvQkFDdEIsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLO2lCQUNuQixDQUFDLENBQUM7Z0JBRUgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztvQkFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7d0JBQ2YsS0FBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7NEJBQ2xDLEtBQUssRUFBRSxLQUFJLENBQUMsS0FBSzs0QkFDakIsTUFBTSxFQUFFLEdBQUc7eUJBQ2QsQ0FBQyxDQUFDO29CQUNQLENBQUMsQ0FBQyxDQUFDO2dCQUNQLENBQUM7WUFDTCxDQUFDO1lBRUQsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDbkQsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFFbkQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO2dCQUMvQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDeEIsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUNyQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEdBQWEsSUFBSSxDQUFDLFFBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7Z0JBQy9FLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBYSxJQUFJLENBQUMsUUFBUyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQztZQUNsRixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDO1lBQzNELENBQUM7WUFFRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRXJDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLGdCQUFnQixFQUFFO2dCQUN6QyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUc7Z0JBQ1gsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHO2dCQUNYLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRztnQkFDWixFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsT0FBTyxFQUFFLElBQUksQ0FBQyxRQUFRO2dCQUN0QixJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUs7Z0JBQ2hCLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDZixVQUFVLEVBQUUsSUFBSSxDQUFDLFdBQVc7YUFDL0IsQ0FBQyxDQUFDO1lBRUgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztnQkFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ2YsS0FBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ2hDLEtBQUssRUFBRSxLQUFJLENBQUMsS0FBSzt3QkFDakIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFHO3FCQUNoQyxDQUFDLENBQUM7Z0JBQ1AsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVPLDhCQUFTLEdBQWpCLFVBQWtCLEdBQUc7WUFBckIsaUJBOEJDO1lBN0JHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztnQkFDbkIsTUFBTSxDQUFDO1lBQ1gsR0FBRyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRTtnQkFDeEMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHO2dCQUNYLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRztnQkFDWCxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUc7Z0JBQ1osRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxHQUFHO2dCQUNWLE9BQU8sRUFBRSxJQUFJLENBQUMsUUFBUTtnQkFDdEIsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLO2dCQUNoQixRQUFRLEVBQUUsSUFBSSxDQUFDLGNBQWM7Z0JBQzdCLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSzthQUNsQixDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUMxQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQzdFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDeEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ2YsS0FBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ2pDLEtBQUssRUFBRSxLQUFJLENBQUMsS0FBSzt3QkFDakIsTUFBTSxFQUFFLEdBQUc7cUJBQ2QsQ0FBQyxDQUFDO2dCQUNQLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUVELElBQUksQ0FBQywyQkFBMkIsRUFBRSxDQUFDO1FBQ3ZDLENBQUM7UUFFTyxtQ0FBYyxHQUF0QixVQUF1QixHQUFHO1lBQTFCLGlCQVNDO1lBUkcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBRXhDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO2dCQUNmLEtBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFJLENBQUMsTUFBTSxFQUFFO29CQUNwQyxLQUFLLEVBQUUsS0FBSSxDQUFDLEtBQUs7b0JBQ2pCLE1BQU0sRUFBRSxHQUFHO2lCQUNkLENBQUMsQ0FBQztZQUNQLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUVPLDBCQUFLLEdBQWI7WUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztvQkFDZCxTQUFTLEVBQUUsRUFBRTtvQkFDYixTQUFTLEVBQUUsRUFBRTtvQkFDYixtQkFBbUIsRUFBRSxFQUFFO29CQUN2QixlQUFlLEVBQUUsRUFBRTtpQkFDdEIsQ0FBQyxDQUFDO1lBQ1AsSUFBSSxDQUFDLENBQUM7Z0JBQ0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7b0JBQ2QsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUTtvQkFDckMsR0FBRyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRztvQkFDM0IsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSTtvQkFDN0IsU0FBUyxFQUFFLEVBQUU7b0JBQ2IsS0FBSyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSztpQkFDbEMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFFTyxnQ0FBVyxHQUFuQixVQUFvQixDQUFDLEVBQUUsQ0FBQztZQUNwQixJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMxQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7b0JBQ2QsU0FBUyxFQUFFLCtDQUErQyxHQUFHLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLFNBQVM7b0JBQ3JGLFNBQVMsRUFBRSxLQUFLO29CQUNoQixtQkFBbUIsRUFBRSwrQ0FBK0MsR0FBRyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxTQUFTO29CQUMvRixlQUFlLEVBQUUscUJBQXFCLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsR0FBRztpQkFDOUQsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDO29CQUNkLE1BQU0sRUFBRSxDQUFDLEdBQUcsSUFBSTtvQkFDaEIsS0FBSyxFQUFFLENBQUMsR0FBRyxJQUFJO29CQUNmLFVBQVUsRUFBRSxPQUFPO29CQUNuQixTQUFTLEVBQUUsR0FBRztvQkFDZCxLQUFLLEVBQUUsTUFBTTtpQkFDaEIsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFFTyxpQ0FBWSxHQUFwQjtZQUNJLElBQUksT0FBTyxHQUFHLENBQUMsRUFDWCxPQUFPLEdBQUcsQ0FBQyxFQUNYLE1BQU0sR0FBRyxVQUFDLE9BQU87Z0JBQ2IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsSUFBSTtvQkFDdkIsSUFBSSxFQUFFLENBQUM7b0JBQ1AsR0FBRyxFQUFFLENBQUM7aUJBQ1QsQ0FBQztZQUNOLENBQUMsQ0FBQztZQUVOLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLElBQ0ksYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxFQUNqRCxjQUFjLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEVBQUUsRUFDbEQsY0FBYyxHQUFHLGFBQWEsR0FBRyxjQUFjLENBQUM7Z0JBRXBELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO29CQUN2RCxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUNuQyxDQUFDO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztvQkFDL0QsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7Z0JBQ2xDLENBQUM7WUFDTCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLElBQ0ksWUFBWSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxFQUMvQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEVBQUUsRUFDcEQsZUFBZSxHQUFHLFlBQVksR0FBRyxlQUFlLENBQUM7Z0JBRXJELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO29CQUN0RCxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztnQkFDeEMsQ0FBQztnQkFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7b0JBQ2hFLE9BQU8sR0FBRyxJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztnQkFDdkMsQ0FBQztZQUNMLENBQUM7WUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxJQUNJLG1CQUFtQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxFQUFFLEVBQ3ZELGtCQUFrQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFLENBQUM7Z0JBRTFELElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyxDQUFDO2dCQUMvRCxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLENBQUMsQ0FBQztZQUNqRSxDQUFDO1FBRUwsQ0FBQztRQUVMLGlCQUFDO0lBQUQsQ0EzYkEsQUEyYkMsSUFBQTtJQUVELElBQU0sSUFBSSxHQUFHLFVBQ1QsVUFBZ0MsRUFDaEMsTUFBd0IsRUFDeEIsU0FBOEIsRUFDOUIsT0FBMEIsRUFDMUIsWUFBK0I7UUFFL0IsTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixJQUFJLEVBQUUsVUFDRixNQUFzQixFQUN0QixRQUFnQixFQUNoQixNQUEyQjtnQkFFM0IsSUFBSSxVQUFRLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ2pHLENBQUM7U0FDSixDQUFBO0lBQ0wsQ0FBQyxDQUFBO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxjQUFjLENBQUM7U0FDdEIsU0FBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNwQyxDQUFDOzs7O0FDeGVEO0lBQUE7SUFXQSxDQUFDO0lBVlUscUNBQVUsR0FBakIsVUFBa0IsS0FBSztRQUNuQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUIsQ0FBQztRQUVELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hHLE1BQU0sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQyxDQUFDO1FBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBQUEsQ0FBQztJQUNOLHVCQUFDO0FBQUQsQ0FYQSxBQVdDLElBQUE7QUFFRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLGNBQWMsQ0FBQztLQUN0QixPQUFPLENBQUMsY0FBYyxFQUFFLGdCQUFnQixDQUFDLENBQUM7Ozs7QUNmL0MsQ0FBQztJQWlCRztRQWNJLG9CQUNZLE1BQXdCLEVBQ3hCLFNBQThCLEVBQzlCLFFBQTRCLEVBQzVCLFlBQStCLEVBQy9CLE1BQXNCLEVBQ3RCLFFBQWdCLEVBQ2hCLE1BQTJCO1lBTjNCLFdBQU0sR0FBTixNQUFNLENBQWtCO1lBQ3hCLGNBQVMsR0FBVCxTQUFTLENBQXFCO1lBQzlCLGFBQVEsR0FBUixRQUFRLENBQW9CO1lBQzVCLGlCQUFZLEdBQVosWUFBWSxDQUFtQjtZQUMvQixXQUFNLEdBQU4sTUFBTSxDQUFnQjtZQUN0QixhQUFRLEdBQVIsUUFBUSxDQUFRO1lBQ2hCLFdBQU0sR0FBTixNQUFNLENBQXFCO1lBRW5DLE1BQU0sQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztZQUM5QixNQUFNLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztZQUUxQixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUM7WUFDeEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3JELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3JELElBQUksQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMvQyxJQUFJLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDL0MsSUFBSSxDQUFDLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFckQsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFTywrQkFBVSxHQUFsQjtZQUNJLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsQ0FBQztRQUVPLG9DQUFlLEdBQXZCLFVBQXdCLE1BQU07WUFBOUIsaUJBbUJDO1lBakJHLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUVwQixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFDLE1BQU0sRUFBRSxNQUFNO2dCQUNuRCxLQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztZQUN4QyxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFDLEtBQUs7Z0JBQzlCLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxVQUFDLEdBQUcsRUFBRSxHQUFHO2dCQUN4QyxLQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLFVBQUMsR0FBRyxFQUFFLEdBQUc7Z0JBQ3ZDLEtBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLFVBQUMsR0FBRyxFQUFFLEdBQUc7Z0JBQ3RDLEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUVPLDhCQUFTLEdBQWpCLFVBQWtCLE1BQU07WUFDcEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoQyxDQUFDO1FBRU8sbUNBQWMsR0FBdEIsVUFBdUIsTUFBTSxFQUFFLE1BQU07WUFDakMsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUM7UUFDL0IsQ0FBQztRQUVPLGdDQUFXLEdBQW5CLFVBQW9CLEdBQUcsRUFBRSxHQUFHO1lBQTVCLGlCQVlDO1lBWEcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUVyRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ1YsS0FBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ2xDLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSTt3QkFDZixNQUFNLEVBQUUsR0FBRztxQkFDZCxDQUFDLENBQUM7Z0JBQ1AsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVPLCtCQUFVLEdBQWxCLFVBQW1CLEdBQUcsRUFBRSxHQUFHO1lBQTNCLGlCQVlDO1lBWEcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUVyRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQzFCLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ1YsS0FBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ2pDLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSTt3QkFDZixNQUFNLEVBQUUsR0FBRztxQkFDZCxDQUFDLENBQUM7Z0JBQ1AsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVPLDhCQUFTLEdBQWpCLFVBQWtCLEdBQUcsRUFBRSxHQUFHO1lBQTFCLGlCQTZDQztZQTFDRyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUNyQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDMUMsTUFBTSxDQUFDO1lBQ1gsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFFdkQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7b0JBQ2YsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDdEIsQ0FBQztnQkFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7b0JBQzdCLElBQUksQ0FBQyxRQUFRLENBQUM7d0JBQ1YsS0FBSSxDQUFDLGNBQWMsQ0FBQyxLQUFJLENBQUMsTUFBTSxFQUFFOzRCQUM3QixLQUFLLEVBQUUsR0FBRyxDQUFDLElBQUk7NEJBQ2YsTUFBTSxFQUFFLEdBQUc7NEJBQ1gsT0FBTyxFQUFFLEtBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO3lCQUNoRCxDQUFDLENBQUM7b0JBQ1AsQ0FBQyxDQUFDLENBQUM7Z0JBQ1AsQ0FBQztnQkFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7b0JBQzFCLElBQUksQ0FBQyxRQUFRLENBQUM7d0JBQ1YsS0FBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7NEJBQ2pDLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSTs0QkFDZixNQUFNLEVBQUUsR0FBRzs0QkFDWCxPQUFPLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7eUJBQ2hELENBQUMsQ0FBQztvQkFDUCxDQUFDLENBQUMsQ0FBQztnQkFDUCxDQUFDO1lBQ0wsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDVixLQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSSxDQUFDLE1BQU0sRUFBRTt3QkFDakMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJO3dCQUNmLE1BQU0sRUFBRSxHQUFHO3FCQUNkLENBQUMsQ0FBQztnQkFDUCxDQUFDLENBQUMsQ0FBQztZQUNQLENBQUM7WUFFRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5QyxDQUFDO1FBRU8sK0JBQVUsR0FBbEIsVUFBbUIsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLEdBQUc7WUFDcEQsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDOUMsRUFBRSxDQUFDLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDdEMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDWCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQzlCLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSTt3QkFDZixNQUFNLEVBQUUsR0FBRzt3QkFDWCxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7cUJBQ2hELENBQUMsQ0FBQztnQkFDUCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTt3QkFDOUIsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJO3dCQUNmLE1BQU0sRUFBRSxHQUFHO3dCQUNYLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztxQkFDaEQsQ0FBQyxDQUFDO2dCQUNQLENBQUM7WUFDTCxDQUFDO1lBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1lBQ2xDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ1gsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3hDLENBQUM7WUFDRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQzdDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDcEIsQ0FBQztRQUVPLHFDQUFnQixHQUF4QixVQUF5QixRQUFRLEVBQUUsV0FBVztZQUMxQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNYLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQ3pDLFdBQVcsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDMUMsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUM5QyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztnQkFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztnQkFDNUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUM3QyxDQUFDO1FBQ0wsQ0FBQztRQUFBLENBQUM7UUFFTSw0QkFBTyxHQUFmLFVBQWdCLENBQUMsRUFBRSxDQUFDO1lBQ2hCLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMscUJBQXFCLEVBQUUsQ0FBQztZQUN4RCxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQztZQUN0RixDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQztZQUNwRixNQUFNLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJO2dCQUNuQixDQUFDLElBQUksTUFBTSxDQUFDLEtBQUs7Z0JBQ2pCLENBQUMsSUFBSSxNQUFNLENBQUMsTUFBTTtnQkFDbEIsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDeEIsQ0FBQztRQUNMLGlCQUFDO0lBQUQsQ0FoTUEsQUFnTUMsSUFBQTtJQUVELElBQU0sSUFBSSxHQUFHLFVBQ1QsTUFBd0IsRUFDeEIsU0FBOEIsRUFDOUIsUUFBNEIsRUFDNUIsWUFBK0I7UUFFL0IsTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixJQUFJLEVBQUUsVUFDRixNQUFzQixFQUN0QixRQUFnQixFQUNoQixNQUEyQjtnQkFFM0IsSUFBSSxVQUFRLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDdEYsQ0FBQztTQUNKLENBQUE7SUFDTCxDQUFDLENBQUE7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUN0QixTQUFTLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3BDLENBQUM7O0FDNU9ELENBQUM7SUFFRztRQUNJLDJCQUNZLFFBQWdCO1lBQWhCLGFBQVEsR0FBUixRQUFRLENBQVE7WUFFeEIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFTyxzQ0FBVSxHQUFsQjtZQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUM3QyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9CLENBQUM7UUFFTywyQ0FBZSxHQUF2QixVQUF3QixNQUFNO1lBQTlCLGlCQUtDO1lBSEcsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBRXBCLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLHFEQUFxRCxFQUFFLFVBQUMsS0FBSyxJQUFPLEtBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0SCxDQUFDO1FBRU8sd0NBQVksR0FBcEIsVUFBcUIsS0FBSztZQUN0QixJQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO1lBQzlCLENBQUMsQ0FBQyxjQUFjLElBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3ZDLENBQUMsQ0FBQyxlQUFlLElBQUksQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3pDLENBQUMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQ3RCLENBQUMsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3RCLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDakIsQ0FBQztRQUVMLHdCQUFDO0lBQUQsQ0E1QkEsQUE0QkMsSUFBQTtJQUVELElBQU0sV0FBVyxHQUFHO1FBQ2hCLE1BQU0sQ0FBQztZQUNILFFBQVEsRUFBRSxHQUFHO1lBQ2IsSUFBSSxFQUFFLFVBQ0YsTUFBaUIsRUFDakIsUUFBZ0IsRUFDaEIsTUFBc0I7Z0JBRXRCLElBQUksaUJBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNsQyxDQUFDO1NBQ0osQ0FBQTtJQUNMLENBQUMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUNsRCxDQUFDOzs7O0FDaERELE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBRW5DLDhCQUE0QjtBQUM1QixrQkFBZ0I7QUFDaEIsa0JBQWdCO0FBQ2hCLHlCQUF1QjtBQUN2Qix3QkFBc0I7O0FDTnRCLENBQUM7SUFpQkc7UUFTSSx1QkFDWSxNQUFvQixFQUNwQixRQUFnQixFQUN4QixNQUF5QixFQUNqQixRQUE0QixFQUM1QixXQUFnQixFQUNoQixPQUEwQjtZQU50QyxpQkE0QkM7WUEzQlcsV0FBTSxHQUFOLE1BQU0sQ0FBYztZQUNwQixhQUFRLEdBQVIsUUFBUSxDQUFRO1lBRWhCLGFBQVEsR0FBUixRQUFRLENBQW9CO1lBQzVCLGdCQUFXLEdBQVgsV0FBVyxDQUFLO1lBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQW1CO1lBWDlCLGlCQUFZLEdBQVcsR0FBRyxDQUFDO1lBQzNCLGlCQUFZLEdBQVcsR0FBRyxDQUFDO1lBYS9CLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLFVBQUMsQ0FBQztnQkFDckIsS0FBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1QixDQUFDLENBQUMsQ0FBQztZQUVILFFBQVEsQ0FBQztnQkFDTCxLQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDaEIsQ0FBQyxDQUFDLENBQUM7WUFFSCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDakIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUU7b0JBQ3JCLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3hCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNiLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztnQkFDeEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRTtvQkFDNUIsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDeEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2IsQ0FBQztRQUNMLENBQUM7UUFFTyw0QkFBSSxHQUFaO1lBQUEsaUJBeUNDO1lBeENHLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCLENBQUM7WUFDeEgsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxHQUFHLEVBQUUsQ0FBQztZQUNyRixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7WUFDM0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFbEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQUMsS0FBSztnQkFDNUIsSUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztnQkFDbkMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ25DLE1BQU0sQ0FBQztnQkFDWCxDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUNuRCxLQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ2hCLENBQUM7Z0JBQ0QsS0FBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsQ0FBQztnQkFDaEQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ3RDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLEtBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBRXJFLEtBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO29CQUM5QyxLQUFJLENBQUMsa0JBQWtCLEdBQUcsS0FBSSxDQUFDLEtBQUssQ0FBQztvQkFDckMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxLQUFJLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUN4RCxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUNyQyxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsK0JBQStCLENBQUMsQ0FBQztnQkFDeEQsQ0FBQztZQUVMLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsVUFBQyxLQUFLO2dCQUNwQixJQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO2dCQUNuQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNwQyxNQUFNLENBQUM7Z0JBQ1gsQ0FBQztnQkFDRCxLQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO2dCQUNuRCxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDekMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixJQUFJLENBQUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDckUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxLQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztvQkFDMUQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO2dCQUMzRCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ3hDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFFTyw0QkFBSSxHQUFaLFVBQWEsS0FBSztZQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUMvRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUN6QyxDQUFDO1lBRUQsSUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRXpELEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDekIsTUFBTSxDQUFDLEVBQUUsQ0FBQTtZQUNiLENBQUM7WUFFRCxJQUFJLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQztZQUU5QixPQUFPLEdBQUcsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuRCxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2IsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNkLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFZixFQUFFLENBQUMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLE9BQU8sSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ2pDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixPQUFPLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQztZQUNqQyxDQUFDO1lBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLEdBQUcsSUFBSSxHQUFHLElBQUksR0FBRyxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQzdFLENBQUM7UUFFTyxtQ0FBVyxHQUFuQixVQUFvQixPQUFPLEVBQUUsS0FBSztZQUM5QixPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNwQyxDQUFDO1FBRU8scUNBQWEsR0FBckIsVUFBc0IsUUFBUTtZQUMxQixJQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxVQUFDLENBQUM7Z0JBQ2xDLE1BQU0sQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDOUIsQ0FBQyxDQUFDLENBQUM7WUFFSCxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZFLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixFQUFFLENBQUMsQ0FBQztZQUNyRixDQUFDO1FBQ0wsQ0FBQztRQUVPLHVDQUFlLEdBQXZCLFVBQXdCLENBQUM7WUFDckIsSUFBTSxPQUFPLEdBQUcsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDO1lBRXJDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxVQUFVO2dCQUMvQyxPQUFPLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsUUFBUTtnQkFDN0MsT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLFdBQVc7Z0JBQ2hELE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxVQUN6QyxDQUFDLENBQUMsQ0FBQztnQkFDQyxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBRW5CLElBQ0ksU0FBUyxHQUFHLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLFdBQVcsSUFBSSxPQUFPLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUMxSCxhQUFhLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUM7Z0JBRXpGLEVBQUUsQ0FBQyxDQUFDLGFBQWEsSUFBSSxDQUFDLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO29CQUM1RCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUN6QyxDQUFDO1lBQ0wsQ0FBQztRQUNMLENBQUM7UUFDTCxvQkFBQztJQUFELENBOUlBLEFBOElDLElBQUE7SUFFRCxJQUFNLE9BQU8sR0FBRyxVQUFVLFFBQTRCLEVBQ2xELFdBQWdCLEVBQ2hCLE9BQTBCO1FBRTFCLE1BQU0sQ0FBQztZQUNILEtBQUssRUFBRTtnQkFDSCxlQUFlLEVBQUUsSUFBSTtnQkFDckIsZUFBZSxFQUFFLElBQUk7Z0JBQ3JCLGdCQUFnQixFQUFFLElBQUk7Z0JBQ3RCLGtCQUFrQixFQUFFLElBQUk7Z0JBQ3hCLGlCQUFpQixFQUFFLElBQUk7Z0JBQ3ZCLGNBQWMsRUFBRSxJQUFJO2dCQUNwQixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsU0FBUyxFQUFFLElBQUk7YUFDbEI7WUFDRCxJQUFJLEVBQUUsVUFBUyxNQUFvQixFQUFFLFFBQWdCLEVBQUUsTUFBeUI7Z0JBQzVFLElBQUksYUFBVyxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDOUUsQ0FBQztTQUNKLENBQUE7SUFDTCxDQUFDLENBQUE7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUM7U0FDeEIsU0FBUyxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQztBQUMxQyxDQUFDOzs7Ozs7O0FDekxBLDRDQUEwQztBQUMzQyw2QkFBMkI7QUFDM0IsNkJBQTJCO0FBQzNCLDZCQUEyQjtBQUMzQiwrQkFBNkI7QUFDN0IsNENBQTBDO0FBRTFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFO0lBQzNCLFlBQVk7SUFDWixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsY0FBYztDQUNqQixDQUFDLENBQUM7QUFFSCx1Q0FBa0M7O0FDaEJsQyxDQUFDO0lBZUc7UUFZSSw4QkFDWSxVQUFnQyxFQUNoQyxPQUEwQixFQUMxQixTQUE4QixFQUM5QixNQUEyQixFQUMzQixRQUFnQixFQUNoQixNQUFnQztZQU41QyxpQkFnRUM7WUEvRFcsZUFBVSxHQUFWLFVBQVUsQ0FBc0I7WUFDaEMsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7WUFDMUIsY0FBUyxHQUFULFNBQVMsQ0FBcUI7WUFDOUIsV0FBTSxHQUFOLE1BQU0sQ0FBcUI7WUFDM0IsYUFBUSxHQUFSLFFBQVEsQ0FBUTtZQUNoQixXQUFNLEdBQU4sTUFBTSxDQUEwQjtZQWpCcEMsMEJBQXFCLEdBQVcsR0FBRyxDQUFDO1lBQ3BDLHFCQUFnQixHQUFHLElBQUksQ0FBQztZQUN4QixvQkFBZSxHQUFHLElBQUksQ0FBQztZQUN2QixtQkFBYyxHQUFHLElBQUksQ0FBQztZQUN0QixtQkFBYyxHQUFHLElBQUksQ0FBQztZQUN0QixrQkFBYSxHQUFHLElBQUksQ0FBQztZQUNyQiw0QkFBdUIsR0FBRyxJQUFJLENBQUM7WUFDL0Isc0JBQWlCLEdBQUcsS0FBSyxDQUFDO1lBQzFCLGtCQUFhLEdBQUcsSUFBSSxDQUFDO1lBV3pCLElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUU5QyxJQUFJLENBQUMseUJBQXlCLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFDeEMsS0FBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFDN0IsQ0FBQyxFQUFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1lBRS9CLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFO2dCQUNuQixLQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7b0JBQ2xDLEtBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO2dCQUNyQyxDQUFDLENBQUMsQ0FBQztnQkFDSCxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsdUJBQXVCLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDeEMsS0FBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7b0JBQy9CLE1BQU0sQ0FBQyxLQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDO2dCQUMvQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFFSCxNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLFVBQUMsQ0FBQztnQkFDakMsS0FBSSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBRXBELE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsVUFBQyxDQUFDO2dCQUNqQyxLQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakMsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFFcEQsTUFBTSxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRSxVQUFDLENBQUM7Z0JBQzFDLEtBQUksQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxQyxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxNQUFNLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV0RSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUN6QyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsdUJBQXVCLEVBQUU7b0JBQzFFLEtBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO2dCQUNyQyxDQUFDLENBQUMsQ0FBQztZQUNQLENBQUM7WUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLG9CQUFvQixFQUFFLFVBQUMsWUFBWTtnQkFDN0MsRUFBRSxDQUFDLENBQUMsWUFBWSxJQUFJLEtBQUksQ0FBQyxlQUFlLENBQUM7b0JBQ3JDLEtBQUksQ0FBQyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNqRCxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDLENBQUM7WUFFNUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNsQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM3RCxDQUFDO1lBQ0QsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLHNCQUFzQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3pDLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FBQztZQUN0RSxDQUFDO1lBRUQsU0FBUyxDQUFDLENBQUM7Z0JBQ1AsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7b0JBQ3RCLE1BQU0sQ0FBQyxJQUFJLENBQUMseUJBQXlCLEVBQUUsQ0FBQztnQkFDNUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNkLENBQUM7UUFFTyxxQ0FBTSxHQUFkLFVBQWUsT0FBTztZQUNsQixPQUFPLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLE9BQU8sQ0FBQztZQUNoQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDOUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQztZQUN6RCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7WUFDaEMsQ0FBQztRQUNMLENBQUM7UUFFTyx3Q0FBUyxHQUFqQixVQUFrQixPQUFPO1lBQ3JCLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMzRCxNQUFNLENBQUM7WUFDWCxDQUFDO1lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzlFLENBQUM7UUFFTywwQ0FBVyxHQUFuQixVQUFvQixPQUFPO1lBQ3ZCLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksT0FBTyxDQUFDO1lBQ2hDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM1QixNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDO1lBQ3RELENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDO1lBQ3pELENBQUM7UUFDTCxDQUFDO1FBRU8sZ0RBQWlCLEdBQXpCO1lBQUEsaUJBd0NDO1lBdkNHLElBQUksZUFBZSxFQUNmLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsU0FBUyxFQUNULFlBQVksQ0FBQztZQUVqQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxLQUFLLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUM5QyxlQUFlLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDekgsYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQy9FLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixlQUFlLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7Z0JBQ3BELGtCQUFrQixHQUFHLENBQUMsQ0FBQztnQkFDdkIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNsRCxrQkFBa0IsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDOUQsQ0FBQztnQkFDRCxhQUFhLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEcsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLElBQWMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUMxSCxDQUFDO1lBRUQsU0FBUyxHQUFHLGFBQWEsR0FBRyxlQUFlLENBQUM7WUFDNUMsWUFBWSxHQUFHLFNBQVMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQztZQUV4RixFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUNmLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7Z0JBQzdCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO29CQUNyQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7d0JBQ2pELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLENBQUM7b0JBQzNDLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDOzRCQUN0QixLQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLENBQUM7d0JBQ3BDLENBQUMsQ0FBQyxDQUFDO29CQUNQLENBQUM7Z0JBQ0wsQ0FBQztZQUNMLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztZQUN6QyxDQUFDO1FBQ0wsQ0FBQztRQUVPLG1EQUFvQixHQUE1QixVQUE2QixDQUFDO1lBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDcEQsQ0FBQztRQUVPLG1EQUFvQixHQUE1QixVQUE2QixDQUFDO1lBQzFCLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDeEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO2dCQUM5QyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO2dCQUM5QixJQUFJLENBQUMseUJBQXlCLEVBQUUsQ0FBQztZQUNyQyxDQUFDO1FBQ0wsQ0FBQztRQUVPLDREQUE2QixHQUFyQyxVQUFzQyxDQUFDO1lBQ25DLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO1FBQ3RDLENBQUM7UUFFTyw4Q0FBZSxHQUF2QixVQUF3QixZQUFZO1lBQXBDLGlCQWFDO1lBWkcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtvQkFDbEMsS0FBSSxDQUFDLHlCQUF5QixFQUFFLENBQUM7Z0JBQ3JDLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUVELElBQUksQ0FBQyxlQUFlLEdBQUcsWUFBWSxDQUFDO1lBQ3BDLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7Z0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtvQkFDdkMsS0FBSSxDQUFDLHlCQUF5QixFQUFFLENBQUM7Z0JBQ3JDLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFFTyxvREFBcUIsR0FBN0IsVUFBOEIsWUFBWTtZQUN0QyxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsSUFBSSxZQUFZLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RELE1BQU0sQ0FBQztZQUNYLENBQUM7WUFDRCxFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDdEMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDakQsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLFlBQVksQ0FBQyxNQUFNLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDbkQsWUFBWSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxRSxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sWUFBWSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQzFDLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUM5RCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsWUFBWSxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7Z0JBQ2pELENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoRSxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUM5QyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO1lBQy9ELENBQUM7UUFDTCxDQUFDO1FBRUwsMkJBQUM7SUFBRCxDQXBNQSxBQW9NQyxJQUFBO0lBRUQsSUFBTSxjQUFjLEdBQUcsVUFDbkIsVUFBZ0MsRUFDaEMsT0FBMEIsRUFDMUIsU0FBOEI7UUFFOUIsTUFBTSxDQUFDO1lBQ0gsS0FBSyxFQUFFO2dCQUNILGlCQUFpQixFQUFFLEdBQUc7Z0JBQ3RCLGtCQUFrQixFQUFFLEdBQUc7Z0JBQ3ZCLGlCQUFpQixFQUFFLEdBQUc7Z0JBQ3RCLGlCQUFpQixFQUFFLEdBQUc7Z0JBQ3RCLDBCQUEwQixFQUFFLEdBQUc7Z0JBQy9CLHVCQUF1QixFQUFFLEdBQUc7YUFDL0I7WUFDRCxJQUFJLEVBQUUsVUFDRixNQUEyQixFQUMzQixRQUFnQixFQUNoQixNQUFnQztnQkFFaEMsSUFBSSxvQkFBa0IsQ0FBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ3JGLENBQUM7U0FDSixDQUFBO0lBQ0wsQ0FBQyxDQUFBO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUM7U0FDL0IsU0FBUyxDQUFDLG1CQUFtQixFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ3hELENBQUM7O0FDaFBELENBQUM7SUFZRztRQTJCSSx3QkFDSSxNQUF3QixFQUNoQixXQUFnQixFQUNoQixRQUE0QixFQUM1QixNQUFpQixFQUNqQixRQUFnQixFQUNoQixNQUEwQjtZQU50QyxpQkFzRkM7WUFwRlcsZ0JBQVcsR0FBWCxXQUFXLENBQUs7WUFDaEIsYUFBUSxHQUFSLFFBQVEsQ0FBb0I7WUFDNUIsV0FBTSxHQUFOLE1BQU0sQ0FBVztZQUNqQixhQUFRLEdBQVIsUUFBUSxDQUFRO1lBQ2hCLFdBQU0sR0FBTixNQUFNLENBQW9CO1lBVjlCLGtCQUFhLEdBQVcsRUFBRSxDQUFDO1lBQzNCLGFBQVEsR0FBVyxHQUFHLENBQUM7WUFDdkIsZUFBVSxHQUFXLEdBQUcsQ0FBQztZQVc3QixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDMUUsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUNyRSxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDM0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUM1RCxJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDdkUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQzdGLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQztZQUNuQyxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxhQUFhLEdBQUcsVUFBVSxHQUFHLEVBQUUsQ0FBQztZQUN2RCxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxXQUFXLEdBQUcsc0JBQXNCLEdBQUcsaUJBQWlCLENBQUM7WUFDakYsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7WUFDaEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFFeEIsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixJQUFJLENBQUMsQ0FBQyxDQUFDO1lBRTNELFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBQyxLQUFLO2dCQUN2QyxLQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFDLEtBQUs7Z0JBQzVDLEtBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQUMsS0FBSztnQkFDM0MsS0FBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM1QixDQUFDLENBQUMsQ0FBQztZQUNILFFBQVEsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBQyxLQUFLO2dCQUMxQyxLQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFDLEtBQUs7Z0JBQzdDLEtBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDOUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFDLEtBQUs7Z0JBQ3pCLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFDLEtBQUs7Z0JBQ3pCLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxVQUFDLEtBQUs7Z0JBQzFCLEtBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDM0IsQ0FBQyxDQUFDLENBQUM7WUFHSCxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsVUFBQyxnQkFBZ0I7b0JBQzdDLEtBQUksQ0FBQyxVQUFVLENBQUM7d0JBQ1osU0FBUyxFQUFFLGdCQUFnQjtxQkFDOUIsQ0FBQyxDQUFDO2dCQUNQLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFDLGFBQWE7b0JBQ3ZDLFFBQVEsQ0FBQzt3QkFDTCxLQUFJLENBQUMsVUFBVSxDQUFDOzRCQUNaLE1BQU0sRUFBRSxhQUFhOzRCQUNyQixVQUFVLEVBQUUsSUFBSTt5QkFDbkIsQ0FBQyxDQUFDO29CQUNQLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDVixDQUFDLENBQUMsQ0FBQztZQUNQLENBQUM7WUFHRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtvQkFFakMsUUFBUSxDQUFDO3dCQUNMLEtBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDOUMsS0FBSSxDQUFDLFVBQVUsQ0FBQzs0QkFDWixTQUFTLEVBQUUsS0FBSSxDQUFDLGFBQWE7eUJBQ2hDLENBQUMsQ0FBQztvQkFDUCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ1osQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1lBR0QsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFDWixTQUFTLEVBQUUsSUFBSSxDQUFDLGFBQWE7Z0JBQzdCLEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7YUFDdkMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUVPLG1DQUFVLEdBQWxCLFVBQW1CLFVBQVU7WUFDekIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFDNUIsSUFBSSxTQUFTLEdBQUcsVUFBVSxDQUFDLFNBQVMsRUFDaEMsTUFBTSxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQzFCLEtBQUssR0FBRyxVQUFVLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUM5RSxXQUFXLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFDMUIsSUFBSSxHQUFHO2dCQUNILEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7b0JBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7Z0JBQzVDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsS0FBSyxTQUFTLElBQUksU0FBUyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDOUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JFLENBQUM7Z0JBQ0QsRUFBRSxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxTQUFTLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztvQkFDNUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQTtnQkFDM0IsQ0FBQztnQkFFRCxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUMsRUFDRCxVQUFVLEdBQUcsVUFBVSxDQUFDLFVBQVUsQ0FBQztZQUNuQyxJQUFJLEdBQUcsSUFBSSxFQUFFLENBQUM7WUFDbEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDUCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsV0FBVyxDQUFDLHFCQUFxQixDQUFDLENBQUM7Z0JBQ3RFLElBQUksR0FBUSxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztxQkFDNUIsUUFBUSxDQUFDLHFCQUFxQixDQUFDO3FCQUMvQixLQUFLLEVBQUUsQ0FBQztnQkFDYixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDNUMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDO29CQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwRCxDQUFDO1FBQ0wsQ0FBQztRQUFBLENBQUM7UUFFTSw0Q0FBbUIsR0FBM0IsVUFBNEIsS0FBSztZQUFqQyxpQkE0Q0M7WUEzQ0csSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1lBQzVDLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDeEIsR0FBRyxDQUFDLENBQUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUM7Z0JBQ2hELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN2QyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztvQkFFM0IsS0FBSyxDQUFDO2dCQUNWLENBQUM7WUFDTCxDQUFDO1lBRUQsSUFBTSxXQUFXLEdBQUc7Z0JBQ2hCLElBQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUMzRCxVQUFVLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFFN0MsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQztvQkFBQyxLQUFJLENBQUMsV0FBVyxDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dCQUN4RSxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsUUFBUSxDQUFDO29CQUFDLEtBQUksQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztnQkFDMUQsUUFBUSxFQUFFLENBQUM7WUFDZixDQUFDLENBQUM7WUFFRixJQUFNLFFBQVEsR0FBRztnQkFDYixJQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsRUFDM0QsVUFBVSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBRTdDLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUNwQixLQUFJLENBQUMsWUFBWSxDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQzNCLE1BQU0sRUFBRTs0QkFDSixNQUFNLEVBQUUsS0FBSSxDQUFDLFFBQVE7NEJBQ3JCLElBQUksRUFBRSxZQUFZOzRCQUNsQixLQUFLLEVBQUUsS0FBSSxDQUFDLGFBQWE7NEJBQ3pCLEVBQUUsRUFBRSxVQUFVOzRCQUNkLFFBQVEsRUFBRSxLQUFJLENBQUMsYUFBYTs0QkFDNUIsUUFBUSxFQUFFLGdCQUFnQjt5QkFDN0I7cUJBQ0osQ0FBQyxDQUFDO2dCQUNQLENBQUM7WUFDTCxDQUFDLENBQUE7WUFHRCxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0RSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxjQUFRLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakQsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLGNBQVEsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QyxDQUFDO1FBQ0wsQ0FBQztRQUFBLENBQUM7UUFFTSxxQ0FBWSxHQUFwQixVQUFxQixLQUFLO1lBQTFCLGlCQXNCQztZQXJCRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUU3QyxJQUNJLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsRUFDekMsZUFBZSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQ3hDLGVBQWUsR0FBRyxZQUFZLEdBQUcsZUFBZSxFQUNoRCxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsRUFDNUIsVUFBVSxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQ3BDLFVBQVUsR0FBRyxPQUFPLEdBQUcsVUFBVSxFQUNqQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBRW5ELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsS0FBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFDNUIsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBRVIsRUFBRSxDQUFDLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLGtCQUFrQixHQUFHLE9BQU8sR0FBRyxZQUFZLENBQUMsQ0FBQztZQUN6RSxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLGVBQWUsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsR0FBRyxVQUFVLEdBQUcsZUFBZSxDQUFDLENBQUM7WUFDL0UsQ0FBQztRQUNMLENBQUM7UUFBQSxDQUFDO1FBRU0sd0RBQStCLEdBQXZDLFVBQXdDLFdBQVc7WUFFL0MsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDMUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUM7WUFDbEMsQ0FBQztZQUVELE1BQU0sQ0FBQyxXQUFXLENBQUM7UUFDdkIsQ0FBQztRQUFBLENBQUM7UUFFTSxzQ0FBYSxHQUFyQixVQUFzQixLQUFLO1lBQ3ZCLElBQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQ2pDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1lBRWxDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsUUFBUSxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDN0csTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNqQixDQUFDO1FBQUEsQ0FBQztRQUVNLHFDQUFZLEdBQXBCLFVBQXFCLEtBQUs7WUFDdEIsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFDWixJQUFJLEVBQUUsS0FBSyxDQUFDLGFBQWE7Z0JBQ3pCLFVBQVUsRUFBRSxJQUFJO2FBQ25CLENBQUMsQ0FBQztRQUNQLENBQUM7UUFFTyxxQ0FBWSxHQUFwQixVQUFxQixLQUFLO1lBQ3RCLElBQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUM7WUFDL0IsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7WUFDRCxJQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsK0JBQStCLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUNqRSxLQUFLLEdBQUcsRUFBRSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRW5DLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBQzFCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1lBRW5DLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUMvQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFNL0IsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNoQixDQUFDO1FBRU8sb0NBQVcsR0FBbkIsVUFBb0IsS0FBSztZQUNyQixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7WUFDRCxJQUFNLEVBQUUsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO1lBRS9CLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEtBQUssSUFBSSxDQUFDLCtCQUErQixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbkcsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBQzlCLENBQUM7WUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hCLENBQUM7UUFFTyxtQ0FBVSxHQUFsQixVQUFtQixLQUFLO1lBQ3BCLElBQUksVUFBVSxFQUFFLHFCQUFxQixFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7WUFFakgsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztnQkFDdEIsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1lBQ0QsSUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztZQUUvQixFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUN0RCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztnQkFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUM3RCxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7WUFHRCxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztZQUU3QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUM7WUFFckMscUJBQXFCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1lBQ2hELElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1lBQzNCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxDQUFDLENBQUM7WUFFNUIsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFDWixJQUFJLEVBQUUsS0FBSyxDQUFDLGFBQWE7Z0JBQ3pCLFVBQVUsRUFBRSxJQUFJO2FBQ25CLENBQUMsQ0FBQztZQUVILE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDakIsQ0FBQztRQUVPLHNDQUFhLEdBQXJCLFVBQXNCLEtBQUs7WUFDdkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7WUFDM0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7UUFDOUIsQ0FBQztRQUVPLGtDQUFTLEdBQWpCLFVBQWtCLEtBQUs7WUFDbkIsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDO1lBRzNDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQzNGLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO2dCQUV4QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO29CQUN4QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTt3QkFDL0IsTUFBTSxFQUFFOzRCQUNKLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUTs0QkFDckIsS0FBSyxFQUFFLElBQUksQ0FBQyxhQUFhOzRCQUN6QixJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO3lCQUN4QztxQkFDSixDQUFDLENBQUM7Z0JBQ1AsQ0FBQztZQUVMLENBQUM7WUFBQyxJQUFJLENBQ04sRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLFVBQVUsSUFBSSxPQUFPLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsV0FBVztnQkFDbkcsT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLFFBQVEsSUFBSSxPQUFPLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsVUFDMUYsQ0FBQyxDQUFDLENBQUM7Z0JBQ0MsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7Z0JBR3hCLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUM1RCxHQUFHLEdBQUcsQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsV0FBVyxJQUFJLE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQ3BILGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsR0FBRyxDQUFDO2dCQUdoRCxJQUFJLENBQUMsVUFBVSxDQUFDO29CQUNaLFNBQVMsRUFBRSxnQkFBZ0I7b0JBQzNCLEtBQUssRUFBRSxLQUFLO29CQUNaLFVBQVUsRUFBRSxJQUFJO2lCQUNuQixDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVPLGtDQUFTLEdBQWpCLFVBQWtCLEtBQUs7WUFFbkIsSUFBSSxLQUFLLEVBQ0wsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsV0FBVyxDQUFDLENBQUM7WUFFcEUsWUFBWSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUdwQyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ25ELEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDM0QsSUFBSSxDQUFDLFVBQVUsQ0FBQztvQkFDWixTQUFTLEVBQUUsSUFBSSxDQUFDLGFBQWEsSUFBSSxDQUFDO29CQUNsQyxLQUFLLEVBQUUsS0FBSztvQkFDWixVQUFVLEVBQUUsSUFBSTtpQkFDbkIsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFFTyxtQ0FBVSxHQUFsQixVQUFtQixLQUFLO1lBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsYUFBYSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDakcsQ0FBQztRQUNMLHFCQUFDO0lBQUQsQ0F6WEEsQUF5WEMsSUFBQTtJQUVELElBQU0sUUFBUSxHQUFHLFVBQ2IsTUFBd0IsRUFDeEIsV0FBZ0IsRUFDaEIsUUFBNEI7UUFFNUIsTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixLQUFLLEVBQUUsS0FBSztZQUNaLElBQUksRUFBRSxVQUNGLE1BQWlCLEVBQ2pCLFFBQWdCLEVBQ2hCLE1BQTBCO2dCQUUxQixJQUFJLGNBQVksQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQzlFLENBQUM7U0FDSixDQUFBO0lBQ0wsQ0FBQyxDQUFBO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDO1NBQ3pCLFNBQVMsQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDNUMsQ0FBQzs7OztBQzFaRDtJQUFBO0lBeUJBLENBQUM7SUFBRCxtQkFBQztBQUFELENBekJBLEFBeUJDLElBQUE7QUF6Qlksb0NBQVk7QUErQnpCO0lBQUE7UUFFVyxvQkFBZSxHQUFtQixFQUFFLENBQUM7UUFFckMsbUJBQWMsR0FBbUIsRUFBRSxDQUFDO1FBRXBDLG1CQUFjLEdBQW9CLElBQUksQ0FBQztJQUNsRCxDQUFDO0lBQUQsc0JBQUM7QUFBRCxDQVBBLEFBT0MsSUFBQTtBQVBZLDBDQUFlOzs7O0FDakM1QjtJQUFBO0lBSUEsQ0FBQztJQUFELG9CQUFDO0FBQUQsQ0FKQSxBQUlDO0FBSFUscUJBQU8sR0FBVyxTQUFTLENBQUM7QUFDNUIsbUJBQUssR0FBVyxPQUFPLENBQUM7QUFDeEIsc0JBQVEsR0FBVyxVQUFVLENBQUM7QUFINUIsc0NBQWE7QUFNMUI7SUFBQTtJQU1BLENBQUM7SUFBRCxzQkFBQztBQUFELENBTkEsQUFNQyxJQUFBO0FBTlksMENBQWU7QUFRNUI7SUEyRkksa0JBQ0ksT0FBWSxFQUNaLGtCQUEwQixFQUMxQixNQUF1QixFQUN2QixRQUF5QztRQUV6QyxVQUFVLENBQUM7UUFOZixpQkFrSEM7UUE1TU8sZUFBVSxHQUFHO1lBQ2pCLEdBQUcsRUFBRSxHQUFHO1lBQ1IsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsR0FBRztZQUNSLEdBQUcsRUFBRSxHQUFHO1lBQ1IsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsR0FBRztZQUNSLEdBQUcsRUFBRSxHQUFHO1lBQ1IsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsR0FBRztZQUNSLEdBQUcsRUFBRSxHQUFHO1lBQ1IsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsR0FBRztZQUNSLEdBQUcsRUFBRSxHQUFHO1lBQ1IsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsSUFBSTtZQUNULEdBQUcsRUFBRSxHQUFHO1lBQ1IsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsR0FBRztZQUNSLElBQUksRUFBRSxHQUFHO1NBQ1osQ0FBQztRQUVNLGlCQUFZLEdBQUc7WUFDbkIsS0FBSyxFQUFFLEVBQUU7WUFDVCxRQUFRLEVBQUUsRUFBRTtZQUNaLEtBQUssRUFBRSxDQUFDO1lBQ1IsT0FBTyxFQUFFLEVBQUU7WUFDWCxRQUFRLEVBQUUsRUFBRTtZQUNaLE9BQU8sRUFBRSxFQUFFO1lBQ1gsV0FBVyxFQUFFLENBQUM7WUFFZCxZQUFZLEVBQUUsR0FBRztZQUNqQixhQUFhLEVBQUUsR0FBRztZQUNsQixRQUFRLEVBQUUsR0FBRztZQUNiLFVBQVUsRUFBRSxFQUFFO1lBQ2QsV0FBVyxFQUFFLEVBQUU7WUFDZixNQUFNLEVBQUUsRUFBRTtZQUNWLFNBQVMsRUFBRSxHQUFHO1lBQ2QsVUFBVSxFQUFFLEdBQUc7WUFDZixLQUFLLEVBQUUsR0FBRztZQUVWLE9BQU8sRUFBRSxFQUFFO1lBQ1gsT0FBTyxFQUFFLEVBQUU7WUFFWCxRQUFRLEVBQUUsRUFBRTtZQUNaLE1BQU0sRUFBRSxFQUFFO1lBQ1YsUUFBUSxFQUFFLEVBQUU7WUFDWixLQUFLLEVBQUUsRUFBRTtZQUVULFFBQVEsRUFBRSxFQUFFO1lBQ1osU0FBUyxFQUFFLEVBQUU7WUFDYixJQUFJLEVBQUUsRUFBRTtZQUVSLFVBQVUsRUFBRSxFQUFFO1lBQ2QsV0FBVyxFQUFFLEVBQUU7WUFDZixJQUFJLEVBQUUsRUFBRTtZQUVSLE1BQU0sRUFBRSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUU7WUFDUixPQUFPLEVBQUUsRUFBRTtZQUNYLE1BQU0sRUFBRSxFQUFFO1lBRVYsSUFBSSxFQUFFLEdBQUc7WUFDVCxJQUFJLEVBQUUsR0FBRztZQUNULElBQUksRUFBRSxHQUFHO1lBQ1QsSUFBSSxFQUFFLEdBQUc7WUFDVCxJQUFJLEVBQUUsR0FBRztZQUNULElBQUksRUFBRSxHQUFHO1lBQ1QsSUFBSSxFQUFFLEdBQUc7WUFDVCxJQUFJLEVBQUUsR0FBRztZQUNULElBQUksRUFBRSxHQUFHO1lBQ1QsS0FBSyxFQUFFLEdBQUc7WUFDVixLQUFLLEVBQUUsR0FBRztZQUNWLEtBQUssRUFBRSxHQUFHO1NBQ2IsQ0FBQztRQUVNLGNBQVMsR0FBRztZQUNoQixLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUU7WUFDeEMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFO1lBQ3ZDLEdBQUcsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRTtZQUN0QyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUU7U0FDMUMsQ0FBQztRQWlCRSxJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQztRQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLGtCQUFrQixDQUFDO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUV6QixJQUFJLENBQUMsYUFBYSxHQUFHLFVBQUMsS0FBd0I7WUFDMUMsSUFBSSxDQUFDLEdBQXNCLEtBQUssSUFBdUIsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNwRSxJQUFJLElBQVksQ0FBQztZQUVqQixFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdCLElBQUksU0FBTyxDQUFDO2dCQUNaLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO29CQUNYLFNBQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUN2QixDQUFDO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztvQkFDdEIsU0FBTyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUM7Z0JBQzNCLENBQUM7Z0JBRUQsRUFBRSxDQUFDLENBQUMsU0FBTyxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN4QixTQUFPLEdBQUcsU0FBTyxDQUFDLFVBQVUsQ0FBQztnQkFDakMsQ0FBQztnQkFDRCxFQUFFLENBQUMsQ0FBQyxTQUFPLENBQUMsT0FBTyxJQUFJLE9BQU8sSUFBSSxTQUFPLENBQUMsT0FBTyxJQUFJLFVBQVUsQ0FBQztvQkFBQyxNQUFNLENBQUM7WUFDNUUsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNaLElBQUksR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDO1lBQ3JCLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLElBQUksR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ25CLENBQUM7WUFFRCxJQUFJLFNBQVMsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBRXhELEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUM7Z0JBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztZQUNqQyxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksR0FBRyxDQUFDO2dCQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7WUFFakMsSUFBSSxJQUFJLEdBQWEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFN0MsSUFBSSxFQUFFLEdBQVcsQ0FBQyxDQUFDO1lBRW5CLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7Z0JBQUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFDdkQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFBQyxLQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztZQUMxRCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUFDLEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQ3BELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7Z0JBQUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFFdkQsSUFBSSxDQUFDLEdBQVcsQ0FBQyxDQUFDO1lBQ2xCLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQkFDL0IsSUFBSSxDQUFDLEdBQVcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUV4QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDO29CQUNoQyxFQUFFLEVBQUUsQ0FBQztvQkFDTCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUN0QyxDQUFDO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztvQkFDdEIsRUFBRSxFQUFFLENBQUM7b0JBQ0wsS0FBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztnQkFDdkMsQ0FBQztnQkFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ3BCLEVBQUUsRUFBRSxDQUFDO29CQUNMLEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7Z0JBQ3JDLENBQUM7Z0JBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO29CQUNyQixFQUFFLEVBQUUsQ0FBQztvQkFDTCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUN0QyxDQUFDO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3RCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFDL0IsRUFBRSxFQUFFLENBQUM7b0JBQ1QsQ0FBQztnQkFDTCxDQUFDO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7b0JBQzdCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQzt3QkFBQyxFQUFFLEVBQUUsQ0FBQztnQkFDMUMsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDSixFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDO3dCQUFDLEVBQUUsRUFBRSxDQUFDO29CQUN6QixJQUFJLENBQUMsQ0FBQzt3QkFDRixFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDOzRCQUMzQyxTQUFTLEdBQUcsS0FBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQzs0QkFDdkMsRUFBRSxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0NBQ2pCLEVBQUUsRUFBRSxDQUFDOzRCQUNULENBQUM7d0JBQ0wsQ0FBQztvQkFDTCxDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNO2dCQUNqQixLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTTtnQkFDekQsS0FBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLE1BQU07Z0JBQzNELEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sSUFBSSxLQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNO2dCQUN2RCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFFNUQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFFakIsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7b0JBRXpCLENBQUMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO29CQUN0QixDQUFDLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztvQkFHdEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7d0JBQ3BCLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQzt3QkFDcEIsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixDQUFDO29CQUVELE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQ2pCLENBQUM7WUFDTCxDQUFDO1lBQ0QsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNwQyxLQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ3JDLEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDbkMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUN4QyxDQUFDLENBQUM7SUFDTixDQUFDO0lBQ0wsZUFBQztBQUFELENBOU1BLEFBOE1DLElBQUE7QUE5TVksNEJBQVE7Ozs7QUNkckIsdUNBQXNFO0FBR3RFLENBQUM7SUFDRztRQUtJLGtDQUNJLElBQW9CLEVBQ3BCLE1BQXVCO1lBRXZCLFVBQVUsQ0FBQztZQU5QLGVBQVUsR0FBdUIsRUFBRSxDQUFDO1lBT3hDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDekcsQ0FBQztRQUVPLG1EQUFnQixHQUF4QjtZQUNJLElBQUksYUFBYSxHQUFvQjtnQkFDakMsSUFBSSxFQUFFLHdCQUFhLENBQUMsT0FBTztnQkFDM0IsU0FBUyxFQUFFLEtBQUs7Z0JBQ2hCLGNBQWMsRUFBRSxLQUFLO2dCQUNyQixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsT0FBTyxFQUFFLElBQUk7YUFDaEIsQ0FBQztZQUVGLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDekIsQ0FBQztRQUVELHNCQUFXLCtDQUFTO2lCQUFwQjtnQkFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUMzQixDQUFDOzs7V0FBQTtRQUVNLHNDQUFHLEdBQVYsVUFBVyxRQUFnQixFQUFFLFFBQXdDLEVBQUUsTUFBdUI7WUFDMUYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN0QixJQUFJLGNBQWMsR0FBb0IsTUFBTSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1lBQzdHLElBQUksbUJBQW1CLEdBQVcsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3pELElBQUksT0FBTyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUM7WUFFcEMsRUFBRSxDQUFDLENBQUMsT0FBTyxjQUFjLENBQUMsTUFBTSxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQzNDLE9BQU8sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM3RCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osT0FBTyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUM7WUFDcEMsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDWCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO2dCQUMzRCxNQUFNLENBQUM7WUFDWCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLHNEQUFzRCxDQUFDLENBQUM7Z0JBQ3hFLE1BQU0sQ0FBQztZQUNYLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQztnQkFDcEUsTUFBTSxDQUFDO1lBQ1gsQ0FBQztZQUVELElBQUksbUJBQW1CLEdBQUcsSUFBSSxtQkFBUSxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFFL0YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLG1CQUFtQixDQUFDO1lBRzNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLG1CQUFtQixDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUM1RixDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO2dCQUM3QixPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxjQUFjLENBQUMsSUFBSSxFQUFFLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3ZGLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixPQUFPLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDdkUsQ0FBQztRQUNMLENBQUM7UUFFTSx5Q0FBTSxHQUFiLFVBQWMsT0FBZTtZQUN6QixJQUFJLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNoRCxJQUFJLE9BQU8sR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUM7WUFFN0QsT0FBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFBO1lBQzVDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUVyQixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO1lBQ3pCLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7WUFDN0IsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztZQUVyQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQy9DLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztnQkFDckMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDdkQsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUVKLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ2hDLENBQUM7UUFDTCxDQUFDO1FBQ0wsK0JBQUM7SUFBRCxDQTNGQSxBQTJGQyxJQUFBO0lBRUQ7UUFBQTtRQXNCQSxDQUFDO1FBbEJHLHNCQUFXLDJDQUFNO2lCQUFqQjtnQkFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUN4QixDQUFDO2lCQUVELFVBQWtCLEtBQXNCO2dCQUNwQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssSUFBSSxJQUFJLDBCQUFlLEVBQUUsQ0FBQztZQUNsRCxDQUFDOzs7V0FKQTtRQU1NLHNDQUFJLEdBQVgsVUFDSSxJQUFvQjtZQUVwQixVQUFVLENBQUM7WUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztnQkFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLHdCQUFzQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFbkUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDekIsQ0FBQztRQUNMLDhCQUFDO0lBQUQsQ0F0QkEsQUFzQkMsSUFBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO0FBQ2pFLENBQUM7Ozs7QUNuSEQ7SUFLSSw0QkFDSSxRQUFnQixFQUNoQixNQUEwQixFQUMxQixNQUFpQixFQUNqQixJQUFvQixFQUNwQixNQUF3QixFQUN4QixrQkFBMkM7UUFFM0MsVUFBVSxDQUFDO1FBUmYsaUJBa0NDO1FBeEJHLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7WUFDM0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFFNUQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osSUFBSSxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBRTVDLE1BQU0sQ0FBQTtRQUNWLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvRCxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUM7UUFDaEQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osSUFBSSxDQUFDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1lBRTFDLE1BQU0sQ0FBQTtRQUNWLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsR0FBb0IsTUFBTSxDQUFDLGlCQUFpQixHQUFvQixFQUFFLENBQUM7UUFDMUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDO1FBRy9CLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFVBQUMsQ0FBTztZQUMvQyxLQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxFQUFDLE1BQU0sRUFBRSxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUMsRUFBQyxDQUFDLENBQUM7UUFDckQsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBRU8sNkNBQWdCLEdBQXhCLFVBQXlCLE1BQU07UUFDM0IsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxvQ0FBTyxHQUFkLGNBQWtCLENBQUM7SUFDdkIseUJBQUM7QUFBRCxDQTlDQSxBQThDQyxJQUFBO0FBR0QsQ0FBQztJQUNHLElBQU0sa0JBQWtCLEdBQUc7UUFDdkIsTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixLQUFLLEVBQUUsS0FBSztZQUNaLFVBQVUsRUFBRSxrQkFBa0I7U0FDakMsQ0FBQztJQUNOLENBQUMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFNBQVMsQ0FBQyxhQUFhLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztBQUN0RCxDQUFDOzs7O0FDcEVELHlEQUEyRztBQUVoRyxRQUFBLHFCQUFxQixHQUFHLHFCQUFxQixDQUFDO0FBRXpEO0lBSUksMEJBQ0ksTUFBdUIsRUFDZixVQUFnQyxFQUNoQyxPQUEwQixFQUMxQixTQUE4QixFQUM5QixTQUFtQyxFQUNuQyxrQkFBMkM7UUFFbkQsVUFBVSxDQUFDO1FBTkgsZUFBVSxHQUFWLFVBQVUsQ0FBc0I7UUFDaEMsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7UUFDMUIsY0FBUyxHQUFULFNBQVMsQ0FBcUI7UUFDOUIsY0FBUyxHQUFULFNBQVMsQ0FBMEI7UUFDbkMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUF5QjtRQUduRCxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRzVDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUdPLDBDQUFlLEdBQXZCO1FBRUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUdyRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRTlDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLDZCQUFxQixFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUcxRCxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFTywwQ0FBZSxHQUF2QixVQUF3QixVQUEwQjtRQUFsRCxpQkFJQztRQUhHLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLFVBQUMsQ0FBQztZQUNqQixLQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMvQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTywyQ0FBZ0IsR0FBeEIsVUFBeUIsSUFBa0IsRUFBRSxLQUF3QjtRQUNqRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixNQUFNLENBQUM7WUFDWCxDQUFDO1FBQ0wsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDdkMsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ1gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzdCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNiLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0IsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUMvQyxDQUFDO1lBQ0QsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUVKLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyRSxDQUFDO0lBQ0wsQ0FBQztJQUVPLHVDQUFZLEdBQXBCLFVBQXFCLFVBQTBCO1FBQS9DLGlCQWdCQztRQWZHLElBQUksY0FBYyxHQUFvQixJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsR0FBb0IsRUFBRSxDQUFDO1FBRXBILENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLFVBQUMsQ0FBQztZQUNqQixJQUFJLE1BQU0sR0FBb0IsQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsT0FBTyxHQUFHLGNBQWMsQ0FBQztZQUNyRSxJQUFJLE1BQVcsQ0FBQztZQUVoQixNQUFNLEdBQUcsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUM7WUFDMUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDVCxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUMzQixDQUFDO1lBRUQsS0FBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLFVBQUMsQ0FBTztnQkFDNUMsS0FBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDZixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFHRCxzQkFBVyxvQ0FBTTthQUFqQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsNENBQWM7YUFBekI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUM7UUFDdkMsQ0FBQzthQUVELFVBQTBCLEtBQXNCO1lBQzVDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUM7WUFDNUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsNkNBQWU7YUFBMUI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUM7UUFDeEMsQ0FBQzthQUVELFVBQTJCLEtBQXFCO1lBQzVDLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDM0MsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsNENBQWM7YUFBekI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUM7UUFDdkMsQ0FBQzthQUVELFVBQTBCLEtBQXFCO1lBQzNDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDMUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBTUwsdUJBQUM7QUFBRCxDQWxJQSxBQWtJQyxJQUFBO0FBRUQ7SUFBQTtRQUNZLFlBQU8sR0FBb0IsSUFBSSxtQ0FBZSxFQUFFLENBQUM7SUF5QzdELENBQUM7SUF0Q0csc0JBQVcscUNBQU07YUFBakI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDO2FBRUQsVUFBa0IsS0FBc0I7WUFDcEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLElBQUksSUFBSSxtQ0FBZSxFQUFFLENBQUM7UUFDbEQsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyw2Q0FBYzthQUF6QjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQztRQUN2QyxDQUFDO2FBRUQsVUFBMEIsS0FBc0I7WUFDNUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQztRQUNoRCxDQUFDOzs7T0FKQTtJQU1ELHNCQUFXLDhDQUFlO2FBQTFCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQ3hDLENBQUM7YUFFRCxVQUEyQixLQUFxQjtZQUM1QyxJQUFJLENBQUMsT0FBTyxDQUFDLGVBQWUsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQy9DLENBQUM7OztPQUpBO0lBTU0sZ0NBQUksR0FBWCxVQUNJLFVBQWdDLEVBQ2hDLE9BQTBCLEVBQzFCLFNBQThCLEVBQzlCLFNBQW1DLEVBQ25DLGtCQUEyQztRQUUzQyxVQUFVLENBQUM7UUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztRQUV0SCxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQTFDQSxBQTBDQyxJQUFBO0FBRUQsT0FBTztLQUNGLE1BQU0sQ0FBQyxjQUFjLENBQUM7S0FDdEIsUUFBUSxDQUFDLGNBQWMsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDOzs7Ozs7O0FDeExqRCxPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRTVELG9DQUFrQztBQUNsQyw4QkFBNEI7QUFDNUIsK0JBQTZCO0FBRTdCLHlDQUFvQztBQUVwQyx3Q0FBbUM7O0FDUm5DLENBQUM7SUFRRztRQUNJLDhCQUNJLE1BQTJCLEVBQzNCLE9BQTBCO1lBRTFCLE9BQU8sQ0FBQyxjQUFjLEdBQUc7Z0JBQ3JCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDbkMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQztnQkFDeEMsQ0FBQztZQUNMLENBQUMsQ0FBQztZQUVGLElBQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsVUFBQyxLQUFLO2dCQUNyRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNyRixDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7b0JBQ3pELEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDM0IsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDSixDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUM7Z0JBQzNELENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUVILE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFO2dCQUNuQixPQUFPLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztnQkFDOUIsVUFBVSxFQUFFLENBQUM7WUFDakIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO1FBQ0wsMkJBQUM7SUFBRCxDQXpCQSxBQXlCQyxJQUFBO0lBRUQsSUFBTSxjQUFjLEdBQUcsVUFBVSxPQUEwQjtRQUN2RCxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsSUFBSTtZQUNkLEtBQUssRUFBRTtnQkFDSCx1QkFBdUIsRUFBRSw2QkFBNkI7Z0JBQ3RELHFCQUFxQixFQUFFLDJCQUEyQjtnQkFDbEQsVUFBVSxFQUFFLDhCQUE4QjtnQkFDMUMsV0FBVyxFQUFFLCtCQUErQjthQUMvQztZQUNELElBQUksRUFBRSxVQUFVLE1BQTJCO2dCQUN2QyxJQUFJLG9CQUFrQixDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztZQUM1QyxDQUFDO1NBQ0osQ0FBQztJQUNOLENBQUMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxDQUFDO1NBQy9CLFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxjQUFjLENBQUMsQ0FBQztBQUN4RCxDQUFDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIntcclxuICAgIGNsYXNzIENhbmNlbERyYWdMaW5rIHtcclxuICAgICAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAgICAgJGVsZW1lbnQ6IEpRdWVyeVxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgICAkZWxlbWVudC5maW5kKCcqJykuYXR0cigncGlwLWNhbmNlbC1kcmFnJywgJ3BpcC1jYW5jZWwtZHJhZycpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBDYW5jZWxEcmFnID0gZnVuY3Rpb24gKCk6IG5nLklEaXJlY3RpdmUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChcclxuICAgICAgICAgICAgICAgICRzY29wZTogbmcuSVNjb3BlLFxyXG4gICAgICAgICAgICAgICAgJGVsZW1lbnQ6IEpRdWVyeSxcclxuICAgICAgICAgICAgICAgICRhdHRyczogbmcuSUF0dHJpYnV0ZXNcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBuZXcgQ2FuY2VsRHJhZ0xpbmsoJGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKFwicGlwRHJhZ2dhYmxlXCIpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwQ2FuY2VsRHJhZycsIENhbmNlbERyYWcpO1xyXG59IiwiaW1wb3J0IHtcclxuICAgIElEcmFnZ2FibGVTZXJ2aWNlXHJcbn0gZnJvbSAnLi9EcmFnZ2FibGVTZXJ2aWNlJztcclxuXHJcbntcclxuICAgIGludGVyZmFjZSBJRHJhZ0xpbmtTY29wZSBleHRlbmRzIG5nLklTY29wZSB7XHJcbiAgICAgICAgdmFsdWU6IGFueTtcclxuICAgIH1cclxuXHJcbiAgICBpbnRlcmZhY2UgSURyYWdMaW5rQXR0cmlidXRlcyBleHRlbmRzIG5nLklBdHRyaWJ1dGVzIHtcclxuICAgICAgICBuZ0RyYWc6IGFueTtcclxuICAgICAgICBwaXBEcmFnU3RhcnQ6IGFueTtcclxuICAgICAgICBwaXBEcmFnTW92ZTogYW55O1xyXG4gICAgICAgIHBpcERyYWdTdG9wOiBhbnk7XHJcbiAgICAgICAgcGlwRHJhZ1N1Y2Nlc3M6IGFueTtcclxuICAgICAgICBhbGxvd1RyYW5zZm9ybTogYW55O1xyXG4gICAgICAgIHBpcERyYWdEYXRhOiBhbnk7XHJcbiAgICAgICAgcGlwVmVydGljYWxTY3JvbGw6IGFueTtcclxuICAgICAgICBwaXBIb3Jpem9udGFsU2Nyb2xsOiBhbnk7XHJcbiAgICAgICAgcGlwQWN0aXZhdGlvbkRpc3RhbmNlOiBhbnk7XHJcbiAgICAgICAgcGlwU2Nyb2xsQ29udGFpbmVyOiBhbnk7XHJcbiAgICAgICAgcGlwRHJhZzogYW55O1xyXG4gICAgICAgIHBpcENlbnRlckFuY2hvcjogYW55O1xyXG4gICAgfVxyXG5cclxuICAgIGNsYXNzIERyYWdMaW5rIHtcclxuICAgICAgICBwcml2YXRlIExPTkdfUFJFU1M6IG51bWJlciA9IDUwOyAvLyA1MG1zIGZvciBsb25ncHJlc3NcclxuICAgICAgICBwcml2YXRlIG9mZnNldDogYW55O1xyXG4gICAgICAgIHByaXZhdGUgX2NlbnRlckFuY2hvcjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgICAgIHByaXZhdGUgX214OiBudW1iZXI7XHJcbiAgICAgICAgcHJpdmF0ZSBfbXk6IG51bWJlcjtcclxuICAgICAgICBwcml2YXRlIF90eDogbnVtYmVyO1xyXG4gICAgICAgIHByaXZhdGUgX3R5OiBudW1iZXI7XHJcbiAgICAgICAgcHJpdmF0ZSBfbXJ4OiBudW1iZXI7XHJcbiAgICAgICAgcHJpdmF0ZSBfbXJ5OiBudW1iZXI7XHJcbiAgICAgICAgcHJpdmF0ZSBfaGFzVG91Y2g6IGJvb2xlYW4gPSAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KSB8fCAoIDwgYW55ID4gd2luZG93KS5Eb2N1bWVudFRvdWNoOyAvLyAmJiBkb2N1bWVudCBpbnN0YW5jZW9mIERvY3VtZW50VG91Y2g7IC8vIERvY3VtZW50VG91Y2ggaXMgbm90IGRlZmluZWQhXHJcbiAgICAgICAgcHJpdmF0ZSBfcHJlc3NFdmVudHM6IHN0cmluZyA9ICd0b3VjaHN0YXJ0IG1vdXNlZG93bic7XHJcbiAgICAgICAgcHJpdmF0ZSBfbW92ZUV2ZW50czogc3RyaW5nID0gJ3RvdWNobW92ZSBtb3VzZW1vdmUnO1xyXG4gICAgICAgIHByaXZhdGUgX3JlbGVhc2VFdmVudHM6IHN0cmluZyA9ICd0b3VjaGVuZCBtb3VzZXVwJztcclxuICAgICAgICBwcml2YXRlIF9kcmFnSGFuZGxlOiBhbnk7XHJcblxyXG4gICAgICAgIC8vIHRvIGlkZW50aWZ5IHRoZSBlbGVtZW50IGluIG9yZGVyIHRvIHByZXZlbnQgZ2V0dGluZyBzdXBlcmZsb3VzIGV2ZW50cyB3aGVuIGEgc2luZ2xlIGVsZW1lbnQgaGFzIGJvdGggZHJhZyBhbmQgZHJvcCBkaXJlY3RpdmVzIG9uIGl0LlxyXG4gICAgICAgIHByaXZhdGUgX215aWQ6IHN0cmluZyB8IG51bWJlcjtcclxuICAgICAgICBwcml2YXRlIF9kYXRhOiBhbnkgPSBudWxsO1xyXG5cclxuICAgICAgICBwcml2YXRlIF9kcmFnT2Zmc2V0OiBhbnkgPSBudWxsO1xyXG5cclxuICAgICAgICBwcml2YXRlIF9kcmFnRW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgICAgICBwcml2YXRlIF9wcmVzc1RpbWVyOiBhbnkgPSBudWxsO1xyXG5cclxuICAgICAgICBwcml2YXRlIF9lbGVtZW50U3R5bGU6IGFueSA9IHt9O1xyXG5cclxuICAgICAgICBwcml2YXRlIG9uRHJhZ1N0YXJ0Q2FsbGJhY2s6IEZ1bmN0aW9uO1xyXG4gICAgICAgIHByaXZhdGUgb25EcmFnTW92ZUNhbGxiYWs6IEZ1bmN0aW9uO1xyXG4gICAgICAgIHByaXZhdGUgb25EcmFnU3RvcENhbGxiYWNrOiBGdW5jdGlvbjtcclxuICAgICAgICBwcml2YXRlIG9uRHJhZ1N1Y2Nlc3NDYWxsYmFjazogRnVuY3Rpb247XHJcbiAgICAgICAgcHJpdmF0ZSBhbGxvd1RyYW5zZm9ybTogYm9vbGVhbjtcclxuXHJcbiAgICAgICAgcHJpdmF0ZSBnZXREcmFnRGF0YTogYW55O1xyXG4gICAgICAgIHByaXZhdGUgdmVydGljYWxTY3JvbGw6IGJvb2xlYW47XHJcbiAgICAgICAgcHJpdmF0ZSBob3Jpem9udGFsU2Nyb2xsOiBib29sZWFuO1xyXG4gICAgICAgIHByaXZhdGUgYWN0aXZhdGlvbkRpc3RhbmNlOiBudW1iZXI7XHJcbiAgICAgICAgcHJpdmF0ZSBzY3JvbGxEaXN0YW5jZTogbnVtYmVyO1xyXG4gICAgICAgIHByaXZhdGUgc2Nyb2xsUGFyZW50OiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gICAgICAgIHByaXZhdGUgc2Nyb2xsQ29udGFpbmVyOiBKUXVlcnkgPSBhbmd1bGFyLmVsZW1lbnQod2luZG93KTtcclxuICAgICAgICBwcml2YXRlIHNjcm9sbENvbnRhaW5lckdldHRlcjogYW55O1xyXG5cclxuICAgICAgICAvLyBkZXJlZ2lzdHJhdGlvbiBmdW5jdGlvbiBmb3IgbW91c2UgbW92ZSBldmVudHMgaW4gJHJvb3RTY29wZSB0cmlnZ2VyZWQgYnkganFMaXRlIHRyaWdnZXIgaGFuZGxlclxyXG4gICAgICAgIHByaXZhdGUgX2RlcmVnaXN0ZXJSb290TW92ZUxpc3RlbmVyOiBGdW5jdGlvbiA9IGFuZ3VsYXIubm9vcDtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgIHByaXZhdGUgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgICAgIHByaXZhdGUgJHBhcnNlOiBuZy5JUGFyc2VTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwcml2YXRlICRkb2N1bWVudDogbmcuSURvY3VtZW50U2VydmljZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkd2luZG93OiBuZy5JV2luZG93U2VydmljZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSBwaXBEcmFnZ2FibGU6IElEcmFnZ2FibGVTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwcml2YXRlICRzY29wZTogSURyYWdMaW5rU2NvcGUsXHJcbiAgICAgICAgICAgIHByaXZhdGUgJGVsZW1lbnQ6IEpRdWVyeSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkYXR0cnM6IElEcmFnTGlua0F0dHJpYnV0ZXNcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgJHNjb3BlLnZhbHVlID0gJGF0dHJzLm5nRHJhZztcclxuICAgICAgICAgICAgdGhpcy5fbXlpZCA9ICRzY29wZS4kaWQ7XHJcbiAgICAgICAgICAgIHRoaXMub25EcmFnU3RhcnRDYWxsYmFjayA9ICRwYXJzZSgkYXR0cnMucGlwRHJhZ1N0YXJ0KSB8fCBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLm9uRHJhZ01vdmVDYWxsYmFrID0gJHBhcnNlKCRhdHRycy5waXBEcmFnTW92ZSkgfHwgbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5vbkRyYWdTdG9wQ2FsbGJhY2sgPSAkcGFyc2UoJGF0dHJzLnBpcERyYWdTdG9wKSB8fCBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLm9uRHJhZ1N1Y2Nlc3NDYWxsYmFjayA9ICRwYXJzZSgkYXR0cnMucGlwRHJhZ1N1Y2Nlc3MpIHx8IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuYWxsb3dUcmFuc2Zvcm0gPSBhbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMuYWxsb3dUcmFuc2Zvcm0pID8gJHNjb3BlLiRldmFsKCRhdHRycy5hbGxvd1RyYW5zZm9ybSkgOiBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2V0RHJhZ0RhdGEgPSAkcGFyc2UoJGF0dHJzLnBpcERyYWdEYXRhKTtcclxuICAgICAgICAgICAgdGhpcy52ZXJ0aWNhbFNjcm9sbCA9ICRhdHRycy5waXBWZXJ0aWNhbFNjcm9sbCB8fCB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmhvcml6b250YWxTY3JvbGwgPSAkYXR0cnMucGlwSG9yaXpvbnRhbFNjcm9sbCB8fCB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2YXRpb25EaXN0YW5jZSA9IHBhcnNlRmxvYXQoJGF0dHJzLnBpcEFjdGl2YXRpb25EaXN0YW5jZSkgfHwgNzU7XHJcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsRGlzdGFuY2UgPSBwYXJzZUZsb2F0KCRhdHRycy5waXBBY3RpdmF0aW9uRGlzdGFuY2UpIHx8IDUwO1xyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbENvbnRhaW5lckdldHRlciA9ICRwYXJzZSgkYXR0cnMucGlwU2Nyb2xsQ29udGFpbmVyKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQuY3NzKCdjdXJzb3InLCAnbW92ZScpO1xyXG4gICAgICAgICAgICB0aGlzLmluaXRpYWxpemUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaW5pdGlhbGl6ZSgpIHtcclxuICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5hdHRyKCdwaXAtZHJhZ2dhYmxlJywgJ2ZhbHNlJyk7IC8vIHByZXZlbnQgbmF0aXZlIGRyYWdcclxuICAgICAgICAgICAgLy8gY2hlY2sgdG8gc2VlIGlmIGRyYWcgaGFuZGxlKHMpIHdhcyBzcGVjaWZpZWRcclxuICAgICAgICAgICAgLy8gaWYgcXVlcnlTZWxlY3RvckFsbCBpcyBhdmFpbGFibGUsIHdlIHVzZSB0aGlzIGluc3RlYWQgb2YgZmluZFxyXG4gICAgICAgICAgICAvLyBhcyBKUUxpdGUgZmluZCBpcyBsaW1pdGVkIHRvIHRhZ25hbWVzXHJcbiAgICAgICAgICAgIGxldCBkcmFnSGFuZGxlczogYW55O1xyXG4gICAgICAgICAgICBpZiAodGhpcy4kZWxlbWVudFswXS5xdWVyeVNlbGVjdG9yQWxsKSB7XHJcbiAgICAgICAgICAgICAgICBkcmFnSGFuZGxlcyA9IGFuZ3VsYXIuZWxlbWVudCh0aGlzLiRlbGVtZW50WzBdLnF1ZXJ5U2VsZWN0b3JBbGwoJ1twaXAtZHJhZy1oYW5kbGVdJykpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZHJhZ0hhbmRsZXMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ1twaXAtZHJhZy1oYW5kbGVdJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGRyYWdIYW5kbGVzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZHJhZ0hhbmRsZSA9IGRyYWdIYW5kbGVzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMudG9nZ2xlTGlzdGVuZXJzKHRydWUpO1xyXG5cclxuICAgICAgICAgICAgLy8gSW5pdGlhbGl6ZSBzY3JvbGwgY29udGFpbmVyXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNjcm9sbFBhcmVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxDb250YWluZXIgPSBhbmd1bGFyLmVsZW1lbnQodGhpcy4kZWxlbWVudC5wYXJlbnQoKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy4kYXR0cnMucGlwU2Nyb2xsQ29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbENvbnRhaW5lciA9IGFuZ3VsYXIuZWxlbWVudCh0aGlzLnNjcm9sbENvbnRhaW5lckdldHRlcih0aGlzLiRzY29wZSkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxDb250YWluZXIgPSBhbmd1bGFyLmVsZW1lbnQod2luZG93KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSB0b2dnbGVMaXN0ZW5lcnMoZW5hYmxlKSB7XHJcbiAgICAgICAgICAgIGlmICghZW5hYmxlKSByZXR1cm47XHJcbiAgICAgICAgICAgIC8vIGFkZCBsaXN0ZW5lcnMuXHJcblxyXG4gICAgICAgICAgICB0aGlzLiRzY29wZS4kb24oJyRkZXN0cm95JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkRlc3Ryb3koZW5hYmxlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLiR3YXRjaCh0aGlzLiRhdHRycy5waXBEcmFnLCAobmV3VmFsLCBvbGRWYWwpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25FbmFibGVDaGFuZ2UobmV3VmFsLCBvbGRWYWwpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy4kc2NvcGUuJHdhdGNoKHRoaXMuJGF0dHJzLnBpcENlbnRlckFuY2hvciwgKG5ld1ZhbCwgb2xkVmFsKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uQ2VudGVyQW5jaG9yKG5ld1ZhbCwgb2xkVmFsKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIC8vIHdpcmUgdXAgdG91Y2ggZXZlbnRzXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9kcmFnSGFuZGxlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBoYW5kbGUocykgc3BlY2lmaWVkLCB1c2UgdGhvc2UgdG8gaW5pdGlhdGUgZHJhZ1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZHJhZ0hhbmRsZS5vbih0aGlzLl9wcmVzc0V2ZW50cywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbnByZXNzKGV2ZW50KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gbm8gaGFuZGxlKHMpIHNwZWNpZmllZCwgdXNlIHRoZSBlbGVtZW50IGFzIHRoZSBoYW5kbGVcclxuICAgICAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQub24odGhpcy5fcHJlc3NFdmVudHMsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25wcmVzcyhldmVudCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIXRoaXMuX2hhc1RvdWNoICYmIHRoaXMuJGVsZW1lbnRbMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PSBcImltZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbGVtZW50Lm9uKCdtb3VzZWRvd24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSk7IC8vIHByZXZlbnQgbmF0aXZlIGRyYWcgZm9yIGltYWdlc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIG9uRGVzdHJveShlbmFibGUpIHtcclxuICAgICAgICAgICAgdGhpcy50b2dnbGVMaXN0ZW5lcnMoZmFsc2UpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkVuYWJsZUNoYW5nZShuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLl9kcmFnRW5hYmxlZCA9IChuZXdWYWwpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkNlbnRlckFuY2hvcihuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICBpZiAoYW5ndWxhci5pc0RlZmluZWQobmV3VmFsKSlcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NlbnRlckFuY2hvciA9IChuZXdWYWwgfHwgJ3RydWUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaXNDbGlja2FibGVFbGVtZW50KGV2dCkge1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgYW5ndWxhci5pc0RlZmluZWQoYW5ndWxhci5lbGVtZW50KGV2dC50YXJnZXQpLmF0dHIoXCJwaXAtY2FuY2VsLWRyYWdcIikpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKlxyXG4gICAgICAgICAqIFdoZW4gdGhlIGVsZW1lbnQgaXMgY2xpY2tlZCBzdGFydCB0aGUgZHJhZyBiZWhhdmlvdXJcclxuICAgICAgICAgKiBPbiB0b3VjaCBkZXZpY2VzIGFzIGEgc21hbGwgZGVsYXkgc28gYXMgbm90IHRvIHByZXZlbnQgbmF0aXZlIHdpbmRvdyBzY3JvbGxpbmdcclxuICAgICAgICAgKi9cclxuICAgICAgICBwcml2YXRlIG9ucHJlc3MoZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5fZHJhZ0VuYWJsZWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzQ2xpY2thYmxlRWxlbWVudChldnQpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChldnQudHlwZSA9PSBcIm1vdXNlZG93blwiICYmIGV2dC5idXR0b24gIT0gMCkge1xyXG4gICAgICAgICAgICAgICAgLy8gRG8gbm90IHN0YXJ0IGRyYWdnaW5nIG9uIHJpZ2h0LWNsaWNrXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2F2ZUVsZW1lbnRTdHlsZXMoKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9oYXNUb3VjaCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5jZWxQcmVzcygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcHJlc3NUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsUHJlc3MoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9ubG9uZ3ByZXNzKGV2dCk7XHJcbiAgICAgICAgICAgICAgICB9LCB0aGlzLkxPTkdfUFJFU1MpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZG9jdW1lbnQub24odGhpcy5fbW92ZUV2ZW50cywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsUHJlc3MoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZG9jdW1lbnQub24odGhpcy5fcmVsZWFzZUV2ZW50cywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsUHJlc3MoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbmxvbmdwcmVzcyhldnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIHNhdmVFbGVtZW50U3R5bGVzKCkge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50U3R5bGUubGVmdCA9IHRoaXMuJGVsZW1lbnQuY3NzKCdsZWZ0JykgfHwgMDtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudFN0eWxlLnRvcCA9IHRoaXMuJGVsZW1lbnQuY3NzKCd0b3AnKSB8fCAwO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50U3R5bGUucG9zaXRpb24gPSB0aGlzLiRlbGVtZW50LmNzcygncG9zaXRpb24nKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudFN0eWxlLndpZHRoID0gdGhpcy4kZWxlbWVudC5jc3MoJ3dpZHRoJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIGNhbmNlbFByZXNzKCkge1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fcHJlc3NUaW1lcik7XHJcbiAgICAgICAgICAgIHRoaXMuJGRvY3VtZW50Lm9mZih0aGlzLl9tb3ZlRXZlbnRzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbmNlbFByZXNzKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLiRkb2N1bWVudC5vZmYodGhpcy5fcmVsZWFzZUV2ZW50cywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5jZWxQcmVzcygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25sb25ncHJlc3MoZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5fZHJhZ0VuYWJsZWQpIHJldHVybjtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLm9mZnNldCA9IHRoaXMuJGVsZW1lbnRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmFsbG93VHJhbnNmb3JtKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fZHJhZ09mZnNldCA9IHRoaXMub2Zmc2V0O1xyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RyYWdPZmZzZXQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0LFxyXG4gICAgICAgICAgICAgICAgICAgIHRvcDogZG9jdW1lbnQuYm9keS5zY3JvbGxUb3BcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAgICAoIDwgYW55ID4gdGhpcy4kZWxlbWVudCkuY2VudGVyWCA9IHRoaXMuJGVsZW1lbnRbMF0ub2Zmc2V0V2lkdGggLyAyO1xyXG4gICAgICAgICAgICAoIDwgYW55ID4gdGhpcy4kZWxlbWVudCkuY2VudGVyWSA9IHRoaXMuJGVsZW1lbnRbMF0ub2Zmc2V0SGVpZ2h0IC8gMjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX214ID0gdGhpcy5waXBEcmFnZ2FibGUuaW5wdXRFdmVudChldnQpLnBhZ2VYO1xyXG4gICAgICAgICAgICB0aGlzLl9teSA9IHRoaXMucGlwRHJhZ2dhYmxlLmlucHV0RXZlbnQoZXZ0KS5wYWdlWTtcclxuICAgICAgICAgICAgdGhpcy5fbXJ4ID0gdGhpcy5fbXggLSB0aGlzLm9mZnNldC5sZWZ0O1xyXG4gICAgICAgICAgICB0aGlzLl9tcnkgPSB0aGlzLl9teSAtIHRoaXMub2Zmc2V0LnRvcDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NlbnRlckFuY2hvcikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdHggPSB0aGlzLl9teCAtICggPCBhbnkgPiB0aGlzLiRlbGVtZW50KS5jZW50ZXJYIC0gdGhpcy4kd2luZG93LnBhZ2VYT2Zmc2V0O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdHkgPSB0aGlzLl9teSAtICggPCBhbnkgPiB0aGlzLiRlbGVtZW50KS5jZW50ZXJZIC0gdGhpcy4kd2luZG93LnBhZ2VZT2Zmc2V0O1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdHggPSB0aGlzLl9teCAtIHRoaXMuX21yeCAtIHRoaXMuJHdpbmRvdy5wYWdlWE9mZnNldDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3R5ID0gdGhpcy5fbXkgLSB0aGlzLl9tcnkgLSB0aGlzLiR3aW5kb3cucGFnZVlPZmZzZXQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuJGRvY3VtZW50Lm9uKHRoaXMuX21vdmVFdmVudHMsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbm1vdmUoZXZlbnQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy4kZG9jdW1lbnQub24odGhpcy5fcmVsZWFzZUV2ZW50cywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9ucmVsZWFzZShldmVudCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyBUaGlzIGV2ZW50IGlzIHVzZWQgdG8gcmVjZWl2ZSBtYW51YWxseSB0cmlnZ2VyZWQgbW91c2UgbW92ZSBldmVudHNcclxuICAgICAgICAgICAgLy8ganFMaXRlIHVuZm9ydHVuYXRlbHkgb25seSBzdXBwb3J0cyB0cmlnZ2VySGFuZGxlciguLi4pXHJcbiAgICAgICAgICAgIC8vIFNlZSBodHRwOi8vYXBpLmpxdWVyeS5jb20vdHJpZ2dlckhhbmRsZXIvXHJcbiAgICAgICAgICAgIC8vIF9kZXJlZ2lzdGVyUm9vdE1vdmVMaXN0ZW5lciA9ICRyb290U2NvcGUuJG9uKCdkcmFnZ2FibGU6X3RyaWdnZXJIYW5kbGVyTW92ZScsIG9ubW92ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2RlcmVnaXN0ZXJSb290TW92ZUxpc3RlbmVyID0gdGhpcy4kcm9vdFNjb3BlLiRvbignZHJhZ2dhYmxlOl90cmlnZ2VySGFuZGxlck1vdmUnLCAoZXZlbnQsIG9yaWdFdmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbm1vdmUob3JpZ0V2ZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIG9ubW92ZShldnQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9kcmFnRW5hYmxlZCkgcmV0dXJuO1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdwaXAtZHJhZ2dpbmcnKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YSA9IHRoaXMuZ2V0RHJhZ0RhdGEodGhpcy4kc2NvcGUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5hZGRDbGFzcygncGlwLWRyYWdnaW5nJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRyb290U2NvcGUuJGJyb2FkY2FzdCgnZHJhZ2dhYmxlOnN0YXJ0Jywge1xyXG4gICAgICAgICAgICAgICAgICAgIHg6IHRoaXMuX214LFxyXG4gICAgICAgICAgICAgICAgICAgIHk6IHRoaXMuX215LFxyXG4gICAgICAgICAgICAgICAgICAgIHR4OiB0aGlzLl90eCxcclxuICAgICAgICAgICAgICAgICAgICB0eTogdGhpcy5fdHksXHJcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IGV2dCxcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50OiB0aGlzLiRlbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuX2RhdGFcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9uRHJhZ1N0YXJ0Q2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS4kYXBwbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRHJhZ1N0YXJ0Q2FsbGJhY2sodGhpcy4kc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkYXRhOiB0aGlzLl9kYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50OiBldnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuX214ID0gdGhpcy5waXBEcmFnZ2FibGUuaW5wdXRFdmVudChldnQpLnBhZ2VYO1xyXG4gICAgICAgICAgICB0aGlzLl9teSA9IHRoaXMucGlwRHJhZ2dhYmxlLmlucHV0RXZlbnQoZXZ0KS5wYWdlWTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmhvcml6b250YWxTY3JvbGwgfHwgdGhpcy52ZXJ0aWNhbFNjcm9sbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kcmFnVG9TY3JvbGwoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NlbnRlckFuY2hvcikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdHggPSB0aGlzLl9teCAtICggPCBhbnkgPiB0aGlzLiRlbGVtZW50KS5jZW50ZXJYIC0gdGhpcy5fZHJhZ09mZnNldC5sZWZ0O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdHkgPSB0aGlzLl9teSAtICggPCBhbnkgPiB0aGlzLiRlbGVtZW50KS5jZW50ZXJZIC0gdGhpcy5fZHJhZ09mZnNldC50b3A7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90eCA9IHRoaXMuX214IC0gdGhpcy5fbXJ4IC0gdGhpcy5fZHJhZ09mZnNldC5sZWZ0O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdHkgPSB0aGlzLl9teSAtIHRoaXMuX21yeSAtIHRoaXMuX2RyYWdPZmZzZXQudG9wO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLm1vdmVFbGVtZW50KHRoaXMuX3R4LCB0aGlzLl90eSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLiRyb290U2NvcGUuJGJyb2FkY2FzdCgnZHJhZ2dhYmxlOm1vdmUnLCB7XHJcbiAgICAgICAgICAgICAgICB4OiB0aGlzLl9teCxcclxuICAgICAgICAgICAgICAgIHk6IHRoaXMuX215LFxyXG4gICAgICAgICAgICAgICAgdHg6IHRoaXMuX3R4LFxyXG4gICAgICAgICAgICAgICAgdHk6IHRoaXMuX3R5LFxyXG4gICAgICAgICAgICAgICAgZXZlbnQ6IGV2dCxcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQ6IHRoaXMuJGVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLl9kYXRhLFxyXG4gICAgICAgICAgICAgICAgdWlkOiB0aGlzLl9teWlkLFxyXG4gICAgICAgICAgICAgICAgZHJhZ09mZnNldDogdGhpcy5fZHJhZ09mZnNldFxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLm9uRHJhZ01vdmVDYWxsYmFrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS4kYXBwbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25EcmFnTW92ZUNhbGxiYWsodGhpcy4kc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGRhdGE6IHRoaXMuX2RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRldmVudDogYW5ndWxhci5leHRlbmQoZXZ0LCApLFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25yZWxlYXNlKGV2dCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuX2RyYWdFbmFibGVkKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy4kcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2RyYWdnYWJsZTplbmQnLCB7XHJcbiAgICAgICAgICAgICAgICB4OiB0aGlzLl9teCxcclxuICAgICAgICAgICAgICAgIHk6IHRoaXMuX215LFxyXG4gICAgICAgICAgICAgICAgdHg6IHRoaXMuX3R4LFxyXG4gICAgICAgICAgICAgICAgdHk6IHRoaXMuX3R5LFxyXG4gICAgICAgICAgICAgICAgZXZlbnQ6IGV2dCxcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQ6IHRoaXMuJGVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLl9kYXRhLFxyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2s6IHRoaXMub25EcmFnQ29tcGxldGUsXHJcbiAgICAgICAgICAgICAgICB1aWQ6IHRoaXMuX215aWRcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ3BpcC1kcmFnZ2luZycpO1xyXG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50LnBhcmVudCgpLmZpbmQoJy5waXAtZHJhZy1lbnRlcicpLnJlbW92ZUNsYXNzKCdwaXAtZHJhZy1lbnRlcicpO1xyXG4gICAgICAgICAgICB0aGlzLnJlc2V0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuJGRvY3VtZW50Lm9mZih0aGlzLl9tb3ZlRXZlbnRzKTtcclxuICAgICAgICAgICAgdGhpcy4kZG9jdW1lbnQub2ZmKHRoaXMuX3JlbGVhc2VFdmVudHMpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5vbkRyYWdTdG9wQ2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRhcHBseSgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRyYWdTdG9wQ2FsbGJhY2sodGhpcy4kc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGRhdGE6IHRoaXMuX2RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRldmVudDogZXZ0XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5fZGVyZWdpc3RlclJvb3RNb3ZlTGlzdGVuZXIoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25EcmFnQ29tcGxldGUoZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5vbkRyYWdTdWNjZXNzQ2FsbGJhY2spIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRhcHBseSgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRHJhZ1N1Y2Nlc3NDYWxsYmFjayh0aGlzLiRzY29wZSwge1xyXG4gICAgICAgICAgICAgICAgICAgICRkYXRhOiB0aGlzLl9kYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgICRldmVudDogZXZ0XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIHJlc2V0KCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5hbGxvd1RyYW5zZm9ybSlcclxuICAgICAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICd6LWluZGV4JzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgJy13ZWJraXQtdHJhbnNmb3JtJzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgJy1tcy10cmFuc2Zvcm0nOiAnJ1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLl9lbGVtZW50U3R5bGUucG9zaXRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOiB0aGlzLl9lbGVtZW50U3R5bGUudG9wLFxyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IHRoaXMuX2VsZW1lbnRTdHlsZS5sZWZ0LFxyXG4gICAgICAgICAgICAgICAgICAgICd6LWluZGV4JzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHRoaXMuX2VsZW1lbnRTdHlsZS53aWR0aFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgbW92ZUVsZW1lbnQoeCwgeSkge1xyXG4gICAgICAgICAgICBjb25zdCBlV2lkdGggPSB0aGlzLiRlbGVtZW50LmNzcygnd2lkdGgnKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuYWxsb3dUcmFuc2Zvcm0pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICdtYXRyaXgzZCgxLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAxLCAwLCAnICsgeCArICcsICcgKyB5ICsgJywgMCwgMSknLFxyXG4gICAgICAgICAgICAgICAgICAgICd6LWluZGV4JzogOTk5OTksXHJcbiAgICAgICAgICAgICAgICAgICAgJy13ZWJraXQtdHJhbnNmb3JtJzogJ21hdHJpeDNkKDEsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDAsIDEsIDAsICcgKyB4ICsgJywgJyArIHkgKyAnLCAwLCAxKScsXHJcbiAgICAgICAgICAgICAgICAgICAgJy1tcy10cmFuc2Zvcm0nOiAnbWF0cml4KDEsIDAsIDAsIDEsICcgKyB4ICsgJywgJyArIHkgKyAnKSdcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgICdsZWZ0JzogeCArICdweCcsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3RvcCc6IHkgKyAncHgnLFxyXG4gICAgICAgICAgICAgICAgICAgICdwb3NpdGlvbic6ICdmaXhlZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3otaW5kZXgnOiAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGVXaWR0aFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgZHJhZ1RvU2Nyb2xsKCkge1xyXG4gICAgICAgICAgICBsZXQgc2Nyb2xsWCA9IDAsXHJcbiAgICAgICAgICAgICAgICBzY3JvbGxZID0gMCxcclxuICAgICAgICAgICAgICAgIG9mZnNldCA9IChlbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQub2Zmc2V0KCkgfHwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDBcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmhvcml6b250YWxTY3JvbGwpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyTGVmdCA9IG9mZnNldCh0aGlzLnNjcm9sbENvbnRhaW5lcikubGVmdCxcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXJXaWR0aCA9IHRoaXMuc2Nyb2xsQ29udGFpbmVyLmlubmVyV2lkdGgoKSxcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXJSaWdodCA9IGNvbnRhaW5lckxlZnQgKyBjb250YWluZXJXaWR0aDtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoKHRoaXMuX214IC0gY29udGFpbmVyTGVmdCkgPCB0aGlzLmFjdGl2YXRpb25EaXN0YW5jZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbFggPSAtdGhpcy5zY3JvbGxEaXN0YW5jZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKGNvbnRhaW5lclJpZ2h0IC0gdGhpcy5fbXgpIDwgdGhpcy5hY3RpdmF0aW9uRGlzdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxYID0gdGhpcy5zY3JvbGxEaXN0YW5jZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMudmVydGljYWxTY3JvbGwpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVG9wID0gb2Zmc2V0KHRoaXMuc2Nyb2xsQ29udGFpbmVyKS50b3AsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVySGVpZ2h0ID0gdGhpcy5zY3JvbGxDb250YWluZXIuaW5uZXJIZWlnaHQoKSxcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXJCb3R0b20gPSBjb250YWluZXJUb3AgKyBjb250YWluZXJIZWlnaHQ7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCh0aGlzLl9teSAtIGNvbnRhaW5lclRvcCkgPCB0aGlzLmFjdGl2YXRpb25EaXN0YW5jZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbFkgPSAtdGhpcy5zY3JvbGxEaXN0YW5jZSArIDMwO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoY29udGFpbmVyQm90dG9tIC0gdGhpcy5fbXkpIDwgdGhpcy5hY3RpdmF0aW9uRGlzdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxZID0gdGhpcy5zY3JvbGxEaXN0YW5jZSAtIDMwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzY3JvbGxYICE9PSAwIHx8IHNjcm9sbFkgIT09IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyU2Nyb2xsTGVmdCA9IHRoaXMuc2Nyb2xsQ29udGFpbmVyLnNjcm9sbExlZnQoKSxcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXJTY3JvbGxUb3AgPSB0aGlzLnNjcm9sbENvbnRhaW5lci5zY3JvbGxUb3AoKTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbENvbnRhaW5lci5zY3JvbGxMZWZ0KGNvbnRhaW5lclNjcm9sbExlZnQgKyBzY3JvbGxYKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsQ29udGFpbmVyLnNjcm9sbFRvcChjb250YWluZXJTY3JvbGxUb3AgKyBzY3JvbGxZKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IERyYWcgPSBmdW5jdGlvbiAoXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgJHBhcnNlOiBuZy5JUGFyc2VTZXJ2aWNlLFxyXG4gICAgICAgICRkb2N1bWVudDogbmcuSURvY3VtZW50U2VydmljZSxcclxuICAgICAgICAkd2luZG93OiBuZy5JV2luZG93U2VydmljZSxcclxuICAgICAgICBwaXBEcmFnZ2FibGU6IElEcmFnZ2FibGVTZXJ2aWNlLFxyXG4gICAgKTogbmcuSURpcmVjdGl2ZSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKFxyXG4gICAgICAgICAgICAgICAgJHNjb3BlOiBJRHJhZ0xpbmtTY29wZSxcclxuICAgICAgICAgICAgICAgICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgICAgICAgICAgICAkYXR0cnM6IElEcmFnTGlua0F0dHJpYnV0ZXNcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBuZXcgRHJhZ0xpbmsoJHJvb3RTY29wZSwgJHBhcnNlLCAkZG9jdW1lbnQsICR3aW5kb3csIHBpcERyYWdnYWJsZSwgJHNjb3BlLCAkZWxlbWVudCwgJGF0dHJzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZShcInBpcERyYWdnYWJsZVwiKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcERyYWcnLCBEcmFnKTtcclxufSIsImV4cG9ydCBpbnRlcmZhY2UgSURyYWdnYWJsZVNlcnZpY2Uge1xyXG4gICAgaW5wdXRFdmVudChldmVudDogYW55KTtcclxufVxyXG5cclxuY2xhc3MgRHJhZ2dhYmxlU2VydmljZSBpbXBsZW1lbnRzIElEcmFnZ2FibGVTZXJ2aWNlIHtcclxuICAgIHB1YmxpYyBpbnB1dEV2ZW50KGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKGFuZ3VsYXIuaXNEZWZpbmVkKGV2ZW50LnRvdWNoZXMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBldmVudC50b3VjaGVzWzBdO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL0NoZWNraW5nIGJvdGggaXMgbm90IHJlZHVuZGVudC4gSWYgb25seSBjaGVjayBpZiB0b3VjaGVzIGlzRGVmaW5lZCwgYW5ndWxhcmpzIGlzRGVmbmllZCB3aWxsIHJldHVybiBlcnJvciBhbmQgc3RvcCB0aGUgcmVtYWluaW5nIHNjcmlwdHkgaWYgZXZlbnQub3JpZ2luYWxFdmVudCBpcyBub3QgZGVmaW5lZC5cclxuICAgICAgICBlbHNlIGlmIChhbmd1bGFyLmlzRGVmaW5lZChldmVudC5vcmlnaW5hbEV2ZW50KSAmJiBhbmd1bGFyLmlzRGVmaW5lZChldmVudC5vcmlnaW5hbEV2ZW50LnRvdWNoZXMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBldmVudC5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBldmVudDtcclxuICAgIH07XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoXCJwaXBEcmFnZ2FibGVcIilcclxuICAgIC5zZXJ2aWNlKCdwaXBEcmFnZ2FibGUnLCBEcmFnZ2FibGVTZXJ2aWNlKTtcclxuICAgICIsImltcG9ydCB7XHJcbiAgICBJRHJhZ2dhYmxlU2VydmljZVxyXG59IGZyb20gJy4vRHJhZ2dhYmxlU2VydmljZSc7XHJcblxyXG57XHJcbiAgICBpbnRlcmZhY2UgSURyb3BMaW5rU2NvcGUgZXh0ZW5kcyBuZy5JU2NvcGUge1xyXG4gICAgICAgIHZhbHVlOiBhbnk7XHJcbiAgICAgICAgaXNUb3VjaGluZzogYW55O1xyXG4gICAgfVxyXG5cclxuICAgIGludGVyZmFjZSBJRHJvcExpbmtBdHRyaWJ1dGVzIGV4dGVuZHMgbmcuSUF0dHJpYnV0ZXMge1xyXG4gICAgICAgIHBpcERyb3A6IGFueTtcclxuICAgICAgICBwaXBEcm9wU3VjY2VzczogYW55O1xyXG4gICAgICAgIHBpcERyYWdTdGFydDogYW55O1xyXG4gICAgICAgIHBpcERyYWdTdG9wOiBhbnk7XHJcbiAgICAgICAgcGlwRHJhZ01vdmU6IGFueTtcclxuICAgICAgICBwaXBFbnRlcjogYW55O1xyXG4gICAgICAgIHBpcExlYXZlOiBhbnk7XHJcbiAgICAgICAgcGlwRGlhY3RpdmU6IGFueTtcclxuICAgIH1cclxuXHJcbiAgICBjbGFzcyBEcm9wTGluayB7XHJcblxyXG4gICAgICAgIHByaXZhdGUgX2xhc3REcm9wVG91Y2g6IGFueTtcclxuICAgICAgICBwcml2YXRlIF9teWlkOiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICAgICAgcHJpdmF0ZSBfZHJvcEVuYWJsZWQ6IGJvb2xlYW47XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25Ecm9wQ2FsbGJhY2s6IEZ1bmN0aW9uOyAvLyB8fCBmdW5jdGlvbigpe307XHJcbiAgICAgICAgcHJpdmF0ZSBvbkRyYWdTdGFydENhbGxiYWNrOiBGdW5jdGlvbjtcclxuICAgICAgICBwcml2YXRlIG9uRHJhZ1N0b3BDYWxsYmFjazogRnVuY3Rpb247XHJcbiAgICAgICAgcHJpdmF0ZSBvbkRyYWdNb3ZlQ2FsbGJhY2s6IEZ1bmN0aW9uO1xyXG4gICAgICAgIHByaXZhdGUgb25FbnRlckNhbGxiYWNrOiBGdW5jdGlvbjtcclxuICAgICAgICBwcml2YXRlIG9uTGVhdmVDYWxsYmFjazogRnVuY3Rpb247XHJcbiAgICAgICAgcHJpdmF0ZSBvbkRpYWN0aXZlQ2FsbGJhY2s6IEZ1bmN0aW9uO1xyXG5cclxuICAgICAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAgICAgcHJpdmF0ZSAkcGFyc2U6IG5nLklQYXJzZVNlcnZpY2UsXHJcbiAgICAgICAgICAgIHByaXZhdGUgJGRvY3VtZW50OiBuZy5JRG9jdW1lbnRTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwcml2YXRlICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2UsXHJcbiAgICAgICAgICAgIHByaXZhdGUgcGlwRHJhZ2dhYmxlOiBJRHJhZ2dhYmxlU2VydmljZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkc2NvcGU6IElEcm9wTGlua1Njb3BlLFxyXG4gICAgICAgICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgICAgICAgIHByaXZhdGUgJGF0dHJzOiBJRHJvcExpbmtBdHRyaWJ1dGVzXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICRzY29wZS52YWx1ZSA9ICRhdHRycy5waXBEcm9wO1xyXG4gICAgICAgICAgICAkc2NvcGUuaXNUb3VjaGluZyA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fbXlpZCA9ICRzY29wZS4kaWQ7XHJcbiAgICAgICAgICAgIHRoaXMub25Ecm9wQ2FsbGJhY2sgPSAkcGFyc2UoJGF0dHJzLnBpcERyb3BTdWNjZXNzKTsgLy8gfHwgZnVuY3Rpb24oKXt9O1xyXG4gICAgICAgICAgICB0aGlzLm9uRHJhZ1N0YXJ0Q2FsbGJhY2sgPSAkcGFyc2UoJGF0dHJzLnBpcERyYWdTdGFydCk7XHJcbiAgICAgICAgICAgIHRoaXMub25EcmFnU3RvcENhbGxiYWNrID0gJHBhcnNlKCRhdHRycy5waXBEcmFnU3RvcCk7XHJcbiAgICAgICAgICAgIHRoaXMub25EcmFnTW92ZUNhbGxiYWNrID0gJHBhcnNlKCRhdHRycy5waXBEcmFnTW92ZSk7XHJcbiAgICAgICAgICAgIHRoaXMub25FbnRlckNhbGxiYWNrID0gJHBhcnNlKCRhdHRycy5waXBFbnRlcik7XHJcbiAgICAgICAgICAgIHRoaXMub25MZWF2ZUNhbGxiYWNrID0gJHBhcnNlKCRhdHRycy5waXBMZWF2ZSk7XHJcbiAgICAgICAgICAgIHRoaXMub25EaWFjdGl2ZUNhbGxiYWNrID0gJHBhcnNlKCRhdHRycy5waXBEaWFjdGl2ZSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmluaXRpYWxpemUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaW5pdGlhbGl6ZSgpIHtcclxuICAgICAgICAgICAgdGhpcy50b2dnbGVMaXN0ZW5lcnModHJ1ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIHRvZ2dsZUxpc3RlbmVycyhlbmFibGUpIHtcclxuICAgICAgICAgICAgLy8gcmVtb3ZlIGxpc3RlbmVyc1xyXG4gICAgICAgICAgICBpZiAoIWVuYWJsZSkgcmV0dXJuO1xyXG4gICAgICAgICAgICAvLyBhZGQgbGlzdGVuZXJzLlxyXG4gICAgICAgICAgICB0aGlzLiRzY29wZS4kd2F0Y2godGhpcy4kYXR0cnMucGlwRHJvcCwgKG5ld1ZhbCwgb2xkVmFsKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRW5hYmxlQ2hhbmdlKG5ld1ZhbCwgb2xkVmFsKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRvbignJGRlc3Ryb3knLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25EZXN0cm95KGV2ZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRvbignZHJhZ2dhYmxlOnN0YXJ0JywgKGV2dCwgb2JqKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRHJhZ1N0YXJ0KGV2dCwgb2JqKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRvbignZHJhZ2dhYmxlOm1vdmUnLCAoZXZ0LCBvYmopID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25EcmFnTW92ZShldnQsIG9iaik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLiRzY29wZS4kb24oJ2RyYWdnYWJsZTplbmQnLCAoZXZ0LCBvYmopID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25EcmFnRW5kKGV2dCwgb2JqKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIG9uRGVzdHJveShlbmFibGUpIHtcclxuICAgICAgICAgICAgdGhpcy50b2dnbGVMaXN0ZW5lcnMoZmFsc2UpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkVuYWJsZUNoYW5nZShuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLl9kcm9wRW5hYmxlZCA9IG5ld1ZhbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25EcmFnU3RhcnQoZXZ0LCBvYmopIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9kcm9wRW5hYmxlZCkgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLmlzVG91Y2hpbmcob2JqLngsIG9iai55LCBvYmouZWxlbWVudCwgZXZ0LCBvYmopO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuJGF0dHJzLnBpcERyYWdTdGFydCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRyYWdTdGFydENhbGxiYWNrKHRoaXMuJHNjb3BlLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRkYXRhOiBvYmouZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50OiBvYmpcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIG9uRHJhZ01vdmUoZXZ0LCBvYmopIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9kcm9wRW5hYmxlZCkgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLmlzVG91Y2hpbmcob2JqLngsIG9iai55LCBvYmouZWxlbWVudCwgZXZ0LCBvYmopO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuJGF0dHJzLnBpcERyYWdNb3ZlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRHJhZ01vdmVDYWxsYmFjayh0aGlzLiRzY29wZSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkZGF0YTogb2JqLmRhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRldmVudDogb2JqXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkRyYWdFbmQoZXZ0LCBvYmopIHtcclxuICAgICAgICAgICAgLy8gZG9uJ3QgbGlzdGVuIHRvIGRyb3AgZXZlbnRzIGlmIHRoaXMgaXMgdGhlIGVsZW1lbnQgYmVpbmcgZHJhZ2dlZFxyXG4gICAgICAgICAgICAvLyBvbmx5IHVwZGF0ZSB0aGUgc3R5bGVzIGFuZCByZXR1cm5cclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9kcm9wRW5hYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVEcmFnU3R5bGVzKGZhbHNlLCBvYmouZWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzVG91Y2hpbmcob2JqLngsIG9iai55LCBvYmouZWxlbWVudCwgZXZ0LCBvYmopKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBjYWxsIHRoZSBwaXBEcmFnZ2FibGUgcGlwRHJhZ1N1Y2Nlc3MgZWxlbWVudCBjYWxsYmFja1xyXG4gICAgICAgICAgICAgICAgaWYgKG9iai5jYWxsYmFjaykge1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai5jYWxsYmFjayhvYmopO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLiRhdHRycy5waXBEcm9wU3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRHJvcENhbGxiYWNrKHRoaXMuJHNjb3BlLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZGF0YTogb2JqLmRhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQ6IG9iaixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0YXJnZXQ6IHRoaXMuJHNjb3BlLiRldmFsKHRoaXMuJHNjb3BlLnZhbHVlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy4kYXR0cnMucGlwRGlhY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRpYWN0aXZlQ2FsbGJhY2sodGhpcy4kc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkYXRhOiBvYmouZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudDogb2JqLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRhcmdldDogdGhpcy4kc2NvcGUuJGV2YWwodGhpcy4kc2NvcGUudmFsdWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy4kYXR0cnMucGlwRHJhZ1N0b3ApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25EcmFnU3RvcENhbGxiYWNrKHRoaXMuJHNjb3BlLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRkYXRhOiBvYmouZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50OiBvYmpcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZURyYWdTdHlsZXMoZmFsc2UsIG9iai5lbGVtZW50KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaXNUb3VjaGluZyhtb3VzZVgsIG1vdXNlWSwgZHJhZ0VsZW1lbnQsIGV2dCwgb2JqKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRvdWNoaW5nID0gdGhpcy5oaXRUZXN0KG1vdXNlWCwgbW91c2VZKTtcclxuICAgICAgICAgICAgaWYgKHRvdWNoaW5nICE9PSB0aGlzLiRzY29wZS5pc1RvdWNoaW5nKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodG91Y2hpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRW50ZXJDYWxsYmFjayh0aGlzLiRzY29wZSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkZGF0YTogb2JqLmRhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRldmVudDogb2JqLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkdGFyZ2V0OiB0aGlzLiRzY29wZS4kZXZhbCh0aGlzLiRzY29wZS52YWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkxlYXZlQ2FsbGJhY2sodGhpcy4kc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGRhdGE6IG9iai5kYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQ6IG9iaixcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHRhcmdldDogdGhpcy4kc2NvcGUuJGV2YWwodGhpcy4kc2NvcGUudmFsdWUpXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmlzVG91Y2hpbmcgPSB0b3VjaGluZztcclxuICAgICAgICAgICAgaWYgKHRvdWNoaW5nKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sYXN0RHJvcFRvdWNoID0gdGhpcy4kZWxlbWVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZURyYWdTdHlsZXModG91Y2hpbmcsIGRyYWdFbGVtZW50KTtcclxuICAgICAgICAgICAgcmV0dXJuIHRvdWNoaW5nO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSB1cGRhdGVEcmFnU3R5bGVzKHRvdWNoaW5nLCBkcmFnRWxlbWVudCkge1xyXG4gICAgICAgICAgICBpZiAodG91Y2hpbmcpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1kcmFnLWVudGVyJyk7XHJcbiAgICAgICAgICAgICAgICBkcmFnRWxlbWVudC5hZGRDbGFzcygncGlwLWRyYWctb3ZlcicpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX2xhc3REcm9wVG91Y2ggPT0gdGhpcy4kZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbGFzdERyb3BUb3VjaCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKCdwaXAtZHJhZy1lbnRlcicpO1xyXG4gICAgICAgICAgICAgICAgZHJhZ0VsZW1lbnQucmVtb3ZlQ2xhc3MoJ3BpcC1kcmFnLW92ZXInKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHByaXZhdGUgaGl0VGVzdCh4LCB5KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kcyA9IHRoaXMuJGVsZW1lbnRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgIHggLT0gdGhpcy4kZG9jdW1lbnRbMF0uYm9keS5zY3JvbGxMZWZ0ICsgdGhpcy4kZG9jdW1lbnRbMF0uZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQ7XHJcbiAgICAgICAgICAgIHkgLT0gdGhpcy4kZG9jdW1lbnRbMF0uYm9keS5zY3JvbGxUb3AgKyB0aGlzLiRkb2N1bWVudFswXS5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gICAgICAgICAgICByZXR1cm4geCA+PSBib3VuZHMubGVmdCAmJlxyXG4gICAgICAgICAgICAgICAgeCA8PSBib3VuZHMucmlnaHQgJiZcclxuICAgICAgICAgICAgICAgIHkgPD0gYm91bmRzLmJvdHRvbSAmJlxyXG4gICAgICAgICAgICAgICAgeSA+PSBib3VuZHMudG9wO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBEcm9wID0gZnVuY3Rpb24gKFxyXG4gICAgICAgICRwYXJzZTogbmcuSVBhcnNlU2VydmljZSxcclxuICAgICAgICAkZG9jdW1lbnQ6IG5nLklEb2N1bWVudFNlcnZpY2UsXHJcbiAgICAgICAgJHRpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZSxcclxuICAgICAgICBwaXBEcmFnZ2FibGU6IElEcmFnZ2FibGVTZXJ2aWNlLFxyXG4gICAgKTogbmcuSURpcmVjdGl2ZSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKFxyXG4gICAgICAgICAgICAgICAgJHNjb3BlOiBJRHJvcExpbmtTY29wZSxcclxuICAgICAgICAgICAgICAgICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgICAgICAgICAgICAkYXR0cnM6IElEcm9wTGlua0F0dHJpYnV0ZXNcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBuZXcgRHJvcExpbmsoJHBhcnNlLCAkZG9jdW1lbnQsICR0aW1lb3V0LCBwaXBEcmFnZ2FibGUsICRzY29wZSwgJGVsZW1lbnQsICRhdHRycyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoXCJwaXBEcmFnZ2FibGVcIilcclxuICAgICAgICAuZGlyZWN0aXZlKCdwaXBEcm9wJywgRHJvcCk7XHJcbn0iLCJ7XHJcblxyXG4gICAgY2xhc3MgUHJldmVudERyYWdMaW5rIHtcclxuICAgICAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5XHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBpbml0aWFsaXplKCkge1xyXG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50LmF0dHIoJ3BpcC1kcmFnZ2FibGUnLCAnZmFsc2UnKTtcclxuICAgICAgICAgICAgdGhpcy50b2dnbGVMaXN0ZW5lcnModHJ1ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIHRvZ2dsZUxpc3RlbmVycyhlbmFibGUpIHtcclxuICAgICAgICAgICAgLy8gcmVtb3ZlIGxpc3RlbmVyc1xyXG4gICAgICAgICAgICBpZiAoIWVuYWJsZSkgcmV0dXJuO1xyXG4gICAgICAgICAgICAvLyBhZGQgbGlzdGVuZXJzLlxyXG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50Lm9uKCdtb3VzZWRvd24gdG91Y2hzdGFydCB0b3VjaG1vdmUgdG91Y2hlbmQgdG91Y2hjYW5jZWwnLCAoZXZlbnQpID0+IHsgdGhpcy5hYnNvcmJFdmVudF8oZXZlbnQpOyB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgYWJzb3JiRXZlbnRfKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGUgPSBldmVudC5vcmlnaW5hbEV2ZW50O1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0ICYmIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24gJiYgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICBlLnJldHVyblZhbHVlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IFByZXZlbnREcmFnID0gZnVuY3Rpb24gKCk6IG5nLklEaXJlY3RpdmUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChcclxuICAgICAgICAgICAgICAgICRzY29wZTogbmcuSVNjb3BlLFxyXG4gICAgICAgICAgICAgICAgJGVsZW1lbnQ6IEpRdWVyeSxcclxuICAgICAgICAgICAgICAgICRhdHRyczogbmcuSUF0dHJpYnV0ZXNcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBuZXcgUHJldmVudERyYWdMaW5rKCRlbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZShcInBpcERyYWdnYWJsZVwiKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcFByZXZlbnREcmFnJywgUHJldmVudERyYWcpO1xyXG59IiwiYW5ndWxhci5tb2R1bGUoXCJwaXBEcmFnZ2FibGVcIiwgW10pO1xyXG5cclxuaW1wb3J0ICcuL0RyYWdnYWJsZVNlcnZpY2UnO1xyXG5pbXBvcnQgJy4vRHJhZyc7XHJcbmltcG9ydCAnLi9Ecm9wJztcclxuaW1wb3J0ICcuL1ByZXZlbnREcmFnJztcclxuaW1wb3J0ICcuL0NhbmNlbERyYWcnO1xyXG4iLCJ7XG4gICAgaW50ZXJmYWNlIEZvY3VzZWRTY29wZSBleHRlbmRzIG5nLklTY29wZSB7XG4gICAgICAgIHBpcEZvY3VzZWRDb2xvcjogRnVuY3Rpb247XG4gICAgICAgIHBpcEZvY3VzZWRDbGFzczogRnVuY3Rpb247XG4gICAgICAgIHBpcEZvY3VzZWRSZWJpbmQ6IEZ1bmN0aW9uO1xuICAgICAgICBwaXBGb2N1c2VkVGFiaW5kZXg6IEZ1bmN0aW9uO1xuICAgICAgICBwaXBGb2N1c2VkT3BhY2l0eTogRnVuY3Rpb247XG4gICAgICAgIHBpcEZvY3VzZWREYXRhOiBGdW5jdGlvbjtcbiAgICAgICAgcGlwV2l0aEhpZGRlbjogRnVuY3Rpb247XG4gICAgICAgIHBpcFJlYmluZDogRnVuY3Rpb247XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIEZvY3VzZWRBdHRyaWJ1dGVzIGV4dGVuZHMgbmcuSUF0dHJpYnV0ZXMge1xuICAgICAgICBuZ01vZGVsOiBhbnk7XG4gICAgICAgIHBpcEZvY3VzZWREYXRhOiBhbnk7XG4gICAgfVxuXG4gICAgY2xhc3MgRm9jdXNlZExpbmsgaW1wbGVtZW50cyBuZy5JRGlyZWN0aXZlIHtcbiAgICAgICAgcHJpdmF0ZSBjb250cm9sczogSlF1ZXJ5O1xuICAgICAgICBwcml2YXRlIGNvbnRyb2xzTGVuZ3RoOiBudW1iZXI7XG4gICAgICAgIHByaXZhdGUgY29sb3I6IHN0cmluZztcbiAgICAgICAgcHJpdmF0ZSBvcGFjaXR5RGVsdGE6IG51bWJlciA9IDAuNDtcbiAgICAgICAgcHJpdmF0ZSBvcGFjaXR5TGltaXQ6IG51bWJlciA9IDAuNTtcbiAgICAgICAgcHJpdmF0ZSBvbGRCYWNrZ3JvdW5kQ29sb3I6IHN0cmluZztcbiAgICAgICAgcHJpdmF0ZSBvbkZvY3VzQ2xhc3M6IHN0cmluZztcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgIHByaXZhdGUgJHNjb3BlOiBGb2N1c2VkU2NvcGUsXG4gICAgICAgICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnksXG4gICAgICAgICAgICAkYXR0cnM6IEZvY3VzZWRBdHRyaWJ1dGVzLFxuICAgICAgICAgICAgcHJpdmF0ZSAkdGltZW91dDogbmcuSVRpbWVvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgcHJpdmF0ZSAkbWRDb25zdGFudDogYW55LFxuICAgICAgICAgICAgcHJpdmF0ZSAkd2luZG93OiBuZy5JV2luZG93U2VydmljZVxuICAgICAgICApIHtcblxuICAgICAgICAgICAgJGVsZW1lbnQub24oJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMua2V5ZG93bkxpc3RlbmVyKGUpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoJGF0dHJzLm5nTW9kZWwpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuJHdhdGNoKCduZ01vZGVsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkdGltZW91dCh0aGlzLmluaXQpO1xuICAgICAgICAgICAgICAgIH0sIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoJGF0dHJzLnBpcEZvY3VzZWREYXRhKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLiR3YXRjaCgncGlwRm9jdXNlZERhdGEnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KHRoaXMuaW5pdCk7XG4gICAgICAgICAgICAgICAgfSwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGluaXQoKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxlY3RvciA9IHRoaXMuJHNjb3BlLnBpcFdpdGhIaWRkZW4gJiYgdGhpcy4kc2NvcGUucGlwV2l0aEhpZGRlbigpID8gJy5waXAtZm9jdXNhYmxlJyA6ICcucGlwLWZvY3VzYWJsZTp2aXNpYmxlJztcbiAgICAgICAgICAgIHRoaXMub25Gb2N1c0NsYXNzID0gdGhpcy4kc2NvcGUucGlwRm9jdXNlZENsYXNzID8gdGhpcy4kc2NvcGUucGlwRm9jdXNlZENsYXNzKCkgOiAnJztcbiAgICAgICAgICAgIHRoaXMuY29udHJvbHMgPSB0aGlzLiRlbGVtZW50LmZpbmQoc2VsZWN0b3IpO1xuICAgICAgICAgICAgdGhpcy5jb250cm9sc0xlbmd0aCA9IHRoaXMuY29udHJvbHMubGVuZ3RoO1xuICAgICAgICAgICAgdGhpcy5jaGVja1RhYmluZGV4KHRoaXMuY29udHJvbHMpO1xuICAgICAgICAgICAgLy8gQWRkIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgICAgICAgdGhpcy5jb250cm9scy5vbignZm9jdXMnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0O1xuICAgICAgICAgICAgICAgIGlmICgkKHRhcmdldCkuaGFzQ2xhc3MoJ21kLWZvY3VzZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLiRzY29wZS5waXBSZWJpbmQgJiYgdGhpcy4kc2NvcGUucGlwUmViaW5kKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1mb2N1c2VkLWNvbnRhaW5lcicpO1xuICAgICAgICAgICAgICAgICQodGFyZ2V0KS5hZGRDbGFzcyh0aGlzLm9uRm9jdXNDbGFzcyk7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLiRzY29wZS5waXBGb2N1c2VkT3BhY2l0eSB8fCAhdGhpcy4kc2NvcGUucGlwRm9jdXNlZE9wYWNpdHkoKSkge1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3IgPSAkKHRhcmdldCkuY3NzKCdiYWNrZ3JvdW5kQ29sb3InKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbGRCYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmNvbG9yO1xuICAgICAgICAgICAgICAgICAgICAkKHRhcmdldCkuY3NzKCdiYWNrZ3JvdW5kQ29sb3InLCB0aGlzLnJnYmEodGhpcy5jb2xvcikpO1xuICAgICAgICAgICAgICAgICAgICAkKHRhcmdldCkuYWRkQ2xhc3MoJ21kLWZvY3VzZWQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkKHRhcmdldCkuYWRkQ2xhc3MoJ21kLWZvY3VzZWQgbWQtZm9jdXNlZC1vcGFjaXR5Jyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KS5vbignZm9jdXNvdXQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0O1xuICAgICAgICAgICAgICAgIGlmICghJCh0YXJnZXQpLmhhc0NsYXNzKCdtZC1mb2N1c2VkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKCdwaXAtZm9jdXNlZC1jb250YWluZXInKTtcbiAgICAgICAgICAgICAgICAkKHRhcmdldCkucmVtb3ZlQ2xhc3ModGhpcy5vbkZvY3VzQ2xhc3MpO1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy4kc2NvcGUucGlwRm9jdXNlZE9wYWNpdHkgfHwgIXRoaXMuJHNjb3BlLnBpcEZvY3VzZWRPcGFjaXR5KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0YXJnZXQpLmNzcygnYmFja2dyb3VuZENvbG9yJywgdGhpcy5vbGRCYWNrZ3JvdW5kQ29sb3IpO1xuICAgICAgICAgICAgICAgICAgICAkKHRhcmdldCkucmVtb3ZlQ2xhc3MoJ21kLWZvY3VzZWQgbWQtZm9jdXNlZC1vcGFjaXR5Jyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0YXJnZXQpLnJlbW92ZUNsYXNzKCdtZC1mb2N1c2VkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIHJnYmEoY29sb3IpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLiRzY29wZS5waXBGb2N1c2VkQ29sb3IgJiYgdGhpcy4kc2NvcGUucGlwRm9jdXNlZENvbG9yKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc2NvcGUucGlwRm9jdXNlZENvbG9yKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGFyciA9IGNvbG9yLnNwbGl0KFwiKFwiKVsxXS5zcGxpdChcIilcIilbMF0uc3BsaXQoXCIsXCIpO1xuXG4gICAgICAgICAgICBpZiAoIWFyciB8fCBhcnIubGVuZ3RoIDwgMykge1xuICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgcmVkLCBibHVlLCBncmVlbiwgb3BhY2l0eTtcblxuICAgICAgICAgICAgb3BhY2l0eSA9IGFyci5sZW5ndGggPT0gMyA/IDEgOiBwYXJzZUZsb2F0KGFyclszXSk7XG4gICAgICAgICAgICByZWQgPSBhcnJbMF07XG4gICAgICAgICAgICBibHVlID0gYXJyWzFdO1xuICAgICAgICAgICAgZ3JlZW4gPSBhcnJbMl07XG5cbiAgICAgICAgICAgIGlmIChvcGFjaXR5IDwgdGhpcy5vcGFjaXR5TGltaXQpIHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5ICs9IHRoaXMub3BhY2l0eURlbHRhO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5IC09IHRoaXMub3BhY2l0eURlbHRhO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gJ3JnYmEoJyArIHJlZCArICcsICcgKyBibHVlICsgJywgJyArIGdyZWVuICsgJywgJyArIG9wYWNpdHkgKyAnKSc7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIHNldFRhYmluZGV4KGVsZW1lbnQsIHZhbHVlKSB7XG4gICAgICAgICAgICBlbGVtZW50LmF0dHIoJ3RhYmluZGV4JywgdmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjaGVja1RhYmluZGV4KGNvbnRyb2xzKSB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IF8uZmluZEluZGV4KGNvbnRyb2xzLCAoYykgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBjWyd0YWJpbmRleCddID4gLTE7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGluZGV4ID09IC0xICYmIGNvbnRyb2xzLmxlbmd0aCA+IDAgJiYgdGhpcy4kc2NvcGUucGlwRm9jdXNlZFRhYmluZGV4KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRUYWJpbmRleChhbmd1bGFyLmVsZW1lbnQoY29udHJvbHNbMF0pLCB0aGlzLiRzY29wZS5waXBGb2N1c2VkVGFiaW5kZXgoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGtleWRvd25MaXN0ZW5lcihlKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlDb2RlID0gZS53aGljaCB8fCBlLmtleUNvZGU7XG4gICAgICAgICAgICAvLyBDaGVjayBjb250cm9sIGtleUNvZGVcbiAgICAgICAgICAgIGlmIChrZXlDb2RlID09IHRoaXMuJG1kQ29uc3RhbnQuS0VZX0NPREUuTEVGVF9BUlJPVyB8fFxuICAgICAgICAgICAgICAgIGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5VUF9BUlJPVyB8fFxuICAgICAgICAgICAgICAgIGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5SSUdIVF9BUlJPVyB8fFxuICAgICAgICAgICAgICAgIGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5ET1dOX0FSUk9XXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBjb25zdFxuICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnQgPSAoa2V5Q29kZSA9PSB0aGlzLiRtZENvbnN0YW50LktFWV9DT0RFLlJJR0hUX0FSUk9XIHx8IGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5ET1dOX0FSUk9XKSA/IDEgOiAtMSxcbiAgICAgICAgICAgICAgICAgICAgbW92ZVRvQ29udHJvbCA9IHRoaXMuY29udHJvbHMuaW5kZXgodGhpcy5jb250cm9scy5maWx0ZXIoXCIubWQtZm9jdXNlZFwiKSkgKyBpbmNyZW1lbnQ7XG4gICAgICAgICAgICAgICAgLy8gTW92ZSBmb2N1cyB0byBuZXh0IGNvbnRyb2xcbiAgICAgICAgICAgICAgICBpZiAobW92ZVRvQ29udHJvbCA+PSAwICYmIG1vdmVUb0NvbnRyb2wgPCB0aGlzLmNvbnRyb2xzTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbHNbbW92ZVRvQ29udHJvbF0uZm9jdXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBGb2N1c2VkID0gZnVuY3Rpb24gKCR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2UsIFxuICAgICAgICAkbWRDb25zdGFudDogYW55LCBcbiAgICAgICAgJHdpbmRvdzogbmcuSVdpbmRvd1NlcnZpY2VcbiAgICApOiBuZy5JRGlyZWN0aXZlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICAgICAgcGlwRm9jdXNlZENvbG9yOiAnJj8nLFxuICAgICAgICAgICAgICAgIHBpcEZvY3VzZWRDbGFzczogJyY/JyxcbiAgICAgICAgICAgICAgICBwaXBGb2N1c2VkUmViaW5kOiAnJj8nLFxuICAgICAgICAgICAgICAgIHBpcEZvY3VzZWRUYWJpbmRleDogJyY/JyxcbiAgICAgICAgICAgICAgICBwaXBGb2N1c2VkT3BhY2l0eTogJyY/JyxcbiAgICAgICAgICAgICAgICBwaXBGb2N1c2VkRGF0YTogJyY/JyxcbiAgICAgICAgICAgICAgICBwaXBXaXRoSGlkZGVuOiAnJj8nLFxuICAgICAgICAgICAgICAgIHBpcFJlYmluZDogJyY/J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uKCRzY29wZTogRm9jdXNlZFNjb3BlLCAkZWxlbWVudDogSlF1ZXJ5LCAkYXR0cnM6IEZvY3VzZWRBdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICAgICAgbmV3IEZvY3VzZWRMaW5rKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycywgJHRpbWVvdXQsICRtZENvbnN0YW50LCAkd2luZG93KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZShcInBpcEZvY3VzZWRcIiwgW10pXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcEZvY3VzZWQnLCBGb2N1c2VkKTtcbn0iLCLvu79pbXBvcnQgJy4vdW5zYXZlZF9jaGFuZ2VzL1Vuc2F2ZWRDaGFuZ2VzJztcclxuaW1wb3J0ICcuL3Nob3J0Y3V0cy9pbmRleCc7XHJcbmltcG9ydCAnLi9mb2N1c2VkL0ZvY3VzZWQnO1xyXG5pbXBvcnQgJy4vZHJhZ2dhYmxlL2luZGV4JztcclxuaW1wb3J0ICcuL3NlbGVjdGVkL1NlbGVjdGVkJztcclxuaW1wb3J0ICcuL2luZmluaXRlX3Njcm9sbC9JbmZpbml0ZVNjcm9sbCc7XHJcblxyXG5hbmd1bGFyLm1vZHVsZSgncGlwQmVoYXZpb3JzJywgW1xyXG4gICAgJ3BpcEZvY3VzZWQnLFxyXG4gICAgJ3BpcFNlbGVjdGVkJyxcclxuICAgICdwaXBJbmZpbml0ZVNjcm9sbCcsXHJcbiAgICAncGlwVW5zYXZlZENoYW5nZXMnLFxyXG4gICAgJ3BpcERyYWdnYWJsZScsXHJcbiAgICAncGlwU2hvcnRjdXRzJ1xyXG5dKTtcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vc2hvcnRjdXRzL2luZGV4JztcclxuIiwie1xyXG4gICAgaW50ZXJmYWNlIEluZmluaXRlU2Nyb2xsU2NvcGUgZXh0ZW5kcyBuZy5JU2NvcGUge1xyXG4gICAgICAgIHBpcEluZmluaXRlU2Nyb2xsOiBGdW5jdGlvbjtcclxuICAgICAgICBwaXBTY3JvbGxDb250YWluZXI6IEpRdWVyeTtcclxuICAgICAgICBwaXBTY3JvbGxEaXN0YW5jZTogbnVtYmVyIHwgc3RyaW5nO1xyXG4gICAgICAgIHBpcFNjcm9sbERpc2FibGVkOiBib29sZWFuO1xyXG4gICAgICAgIHBpcFNjcm9sbFVzZURvY3VtZW50Qm90dG9tOiBib29sZWFuO1xyXG4gICAgICAgIHBpcFNjcm9sbExpc3RlbkZvckV2ZW50OiBzdHJpbmc7XHJcbiAgICB9XHJcblxyXG4gICAgaW50ZXJmYWNlIEluZmluaXRlU2Nyb2xsQXR0cmlidXRlcyBleHRlbmRzIG5nLklBdHRyaWJ1dGVzIHtcclxuICAgICAgICBwaXBTY3JvbGxQYXJlbnQ6IGFueTtcclxuICAgICAgICBwaXBTY3JvbEltbWVkaWF0ZUNoZWNrOiBhbnk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xhc3MgSW5maW5pdGVTY3JvbGxMaW5rIHtcclxuICAgICAgICBwcml2YXRlIFRIUk9UVExFX01JTExJU0VDT05EUzogbnVtYmVyID0gNTAwO1xyXG4gICAgICAgIHByaXZhdGUgY2hlY2tXaGVuRW5hYmxlZCA9IG51bGw7XHJcbiAgICAgICAgcHJpdmF0ZSBzY3JvbGxDb250YWluZXIgPSBudWxsO1xyXG4gICAgICAgIHByaXZhdGUgaW1tZWRpYXRlQ2hlY2sgPSB0cnVlO1xyXG4gICAgICAgIHByaXZhdGUgc2Nyb2xsRGlzdGFuY2UgPSBudWxsO1xyXG4gICAgICAgIHByaXZhdGUgc2Nyb2xsRW5hYmxlZCA9IG51bGw7XHJcbiAgICAgICAgcHJpdmF0ZSB1bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lciA9IG51bGw7XHJcbiAgICAgICAgcHJpdmF0ZSB1c2VEb2N1bWVudEJvdHRvbSA9IGZhbHNlO1xyXG4gICAgICAgIHByaXZhdGUgd2luZG93RWxlbWVudCA9IG51bGw7XHJcbiAgICAgICAgcHJpdmF0ZSBvbkNvbnRhaW5lclNjcm9sbFRocm90dGxlOiBGdW5jdGlvbjtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgIHByaXZhdGUgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgICAgIHByaXZhdGUgJHdpbmRvdzogbmcuSVdpbmRvd1NlcnZpY2UsXHJcbiAgICAgICAgICAgIHByaXZhdGUgJGludGVydmFsOiBuZy5JSW50ZXJ2YWxTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwcml2YXRlICRzY29wZTogSW5maW5pdGVTY3JvbGxTY29wZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5LFxyXG4gICAgICAgICAgICBwcml2YXRlICRhdHRyczogSW5maW5pdGVTY3JvbGxBdHRyaWJ1dGVzXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2luZG93RWxlbWVudCA9IGFuZ3VsYXIuZWxlbWVudCgkd2luZG93KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMub25Db250YWluZXJTY3JvbGxUaHJvdHRsZSA9IF8udGhyb3R0bGUoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkNvbnRhaW5lclNjcm9sbCgpO1xyXG4gICAgICAgICAgICB9LCB0aGlzLlRIUk9UVExFX01JTExJU0VDT05EUyk7XHJcblxyXG4gICAgICAgICAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsQ29udGFpbmVyLnVuYmluZCgnc2Nyb2xsJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25Db250YWluZXJTY3JvbGxUaHJvdHRsZSgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy51bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lciAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5yZWdpc3RlckV2ZW50TGlzdGVuZXIoKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy51bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lciA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJHNjb3BlLiR3YXRjaCgncGlwU2Nyb2xsRGlzdGFuY2UnLCAodikgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVTY3JvbGxEaXN0YW5jZSh2KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlU2Nyb2xsRGlzdGFuY2UoJHNjb3BlLnBpcFNjcm9sbERpc3RhbmNlKTtcclxuXHJcbiAgICAgICAgICAgICRzY29wZS4kd2F0Y2goJ3BpcFNjcm9sbERpc2FibGVkJywgKHYpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlU2Nyb2xsRGlzYWJsZWQodik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZVNjcm9sbERpc2FibGVkKCRzY29wZS5waXBTY3JvbGxEaXNhYmxlZCk7XHJcblxyXG4gICAgICAgICAgICAkc2NvcGUuJHdhdGNoKCdwaXBTY3JvbGxVc2VEb2N1bWVudEJvdHRvbScsICh2KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVNjcm9sbFVzZURvY3VtZW50Qm90dG9tKHYpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVTY3JvbGxVc2VEb2N1bWVudEJvdHRvbSgkc2NvcGUucGlwU2Nyb2xsVXNlRG9jdW1lbnRCb3R0b20pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VDb250YWluZXIodGhpcy53aW5kb3dFbGVtZW50KTtcclxuICAgICAgICAgICAgaWYgKCRzY29wZS5waXBTY3JvbGxMaXN0ZW5Gb3JFdmVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lciA9ICRyb290U2NvcGUuJG9uKCRzY29wZS5waXBTY3JvbGxMaXN0ZW5Gb3JFdmVudCwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25Db250YWluZXJTY3JvbGxUaHJvdHRsZSgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICRzY29wZS4kd2F0Y2goJ3BpcFNjcm9sbENvbnRhaW5lcicsIChuZXdDb250YWluZXIpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChuZXdDb250YWluZXIgIT0gdGhpcy5zY3JvbGxDb250YWluZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVTY3JvbGxDb250YWluZXIobmV3Q29udGFpbmVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlU2Nyb2xsQ29udGFpbmVyKCRzY29wZS5waXBTY3JvbGxDb250YWluZXIgfHwgW10pO1xyXG5cclxuICAgICAgICAgICAgaWYgKCRhdHRycy5waXBTY3JvbGxQYXJlbnQgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlQ29udGFpbmVyKGFuZ3VsYXIuZWxlbWVudCgkZWxlbWVudC5wYXJlbnQoKSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgkYXR0cnMucGlwU2Nyb2xJbW1lZGlhdGVDaGVjayAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbW1lZGlhdGVDaGVjayA9ICRzY29wZS4kZXZhbCgkYXR0cnMucGlwU2Nyb2xJbW1lZGlhdGVDaGVjayk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICRpbnRlcnZhbCgoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaW1tZWRpYXRlQ2hlY2spIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vbkNvbnRhaW5lclNjcm9sbFRocm90dGxlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pLCAwLCAxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaGVpZ2h0KGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnRbMF0gfHwgZWxlbWVudDtcclxuICAgICAgICAgICAgaWYgKGlzTmFOKGVsZW1lbnQub2Zmc2V0SGVpZ2h0KSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50Lm9mZnNldEhlaWdodDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvZmZzZXRUb3AoZWxlbWVudCkge1xyXG4gICAgICAgICAgICBpZiAoIWVsZW1lbnRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0IHx8IGVsZW1lbnQuY3NzKCdub25lJykpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyB0aGlzLnBhZ2VZT2Zmc2V0KGVsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBwYWdlWU9mZnNldChlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50WzBdIHx8IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGlmIChpc05hTih3aW5kb3cucGFnZVlPZmZzZXQpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5wYWdlWU9mZnNldDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkNvbnRhaW5lclNjcm9sbCgpIHtcclxuICAgICAgICAgICAgbGV0IGNvbnRhaW5lckJvdHRvbSxcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lclRvcE9mZnNldCxcclxuICAgICAgICAgICAgICAgIGVsZW1lbnRCb3R0b20sXHJcbiAgICAgICAgICAgICAgICByZW1haW5pbmcsXHJcbiAgICAgICAgICAgICAgICBzaG91bGRTY3JvbGw7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5zY3JvbGxDb250YWluZXIgPT09IHRoaXMud2luZG93RWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyQm90dG9tID0gdGhpcy5oZWlnaHQodGhpcy5zY3JvbGxDb250YWluZXIpICsgdGhpcy5wYWdlWU9mZnNldCh0aGlzLnNjcm9sbENvbnRhaW5lclswXS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudEJvdHRvbSA9IHRoaXMub2Zmc2V0VG9wKHRoaXMuJGVsZW1lbnQpICsgdGhpcy5oZWlnaHQodGhpcy4kZWxlbWVudCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJCb3R0b20gPSB0aGlzLmhlaWdodCh0aGlzLnNjcm9sbENvbnRhaW5lcik7XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJUb3BPZmZzZXQgPSAwO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub2Zmc2V0VG9wKHRoaXMuc2Nyb2xsQ29udGFpbmVyKSAhPT0gdm9pZCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVG9wT2Zmc2V0ID0gdGhpcy5vZmZzZXRUb3AodGhpcy5zY3JvbGxDb250YWluZXIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxlbWVudEJvdHRvbSA9IHRoaXMub2Zmc2V0VG9wKHRoaXMuJGVsZW1lbnQpIC0gY29udGFpbmVyVG9wT2Zmc2V0ICsgdGhpcy5oZWlnaHQodGhpcy4kZWxlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVzZURvY3VtZW50Qm90dG9tKSB7XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50Qm90dG9tID0gdGhpcy5oZWlnaHQoKHRoaXMuJGVsZW1lbnRbMF0ub3duZXJEb2N1bWVudCB8fCAoIDwgYW55ID4gdGhpcy4kZWxlbWVudFswXSkuZG9jdW1lbnQpLmRvY3VtZW50RWxlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJlbWFpbmluZyA9IGVsZW1lbnRCb3R0b20gLSBjb250YWluZXJCb3R0b207XHJcbiAgICAgICAgICAgIHNob3VsZFNjcm9sbCA9IHJlbWFpbmluZyA8PSB0aGlzLmhlaWdodCh0aGlzLnNjcm9sbENvbnRhaW5lcikgKiB0aGlzLnNjcm9sbERpc3RhbmNlICsgMTtcclxuXHJcbiAgICAgICAgICAgIGlmIChzaG91bGRTY3JvbGwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tXaGVuRW5hYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zY3JvbGxFbmFibGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuJHNjb3BlLiQkcGhhc2UgfHwgdGhpcy4kcm9vdFNjb3BlLiQkcGhhc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHNjb3BlLnBpcEluZmluaXRlU2Nyb2xsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHNjb3BlLiRhcHBseSgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5waXBJbmZpbml0ZVNjcm9sbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGVja1doZW5FbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaGFuZGxlU2Nyb2xsRGlzdGFuY2Uodikge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zY3JvbGxEaXN0YW5jZSA9IHBhcnNlRmxvYXQodikgfHwgMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaGFuZGxlU2Nyb2xsRGlzYWJsZWQodikge1xyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbEVuYWJsZWQgPSAhdjtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2Nyb2xsRW5hYmxlZCAmJiB0aGlzLmNoZWNrV2hlbkVuYWJsZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tXaGVuRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkNvbnRhaW5lclNjcm9sbFRocm90dGxlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaGFuZGxlU2Nyb2xsVXNlRG9jdW1lbnRCb3R0b20odikge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy51c2VEb2N1bWVudEJvdHRvbSA9IHY7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIGNoYW5nZUNvbnRhaW5lcihuZXdDb250YWluZXIpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2Nyb2xsQ29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbENvbnRhaW5lci51bmJpbmQoJ3Njcm9sbCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ29udGFpbmVyU2Nyb2xsVGhyb3R0bGUoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbENvbnRhaW5lciA9IG5ld0NvbnRhaW5lcjtcclxuICAgICAgICAgICAgaWYgKG5ld0NvbnRhaW5lcikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2Nyb2xsQ29udGFpbmVyLmJpbmQoJ3Njcm9sbCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ29udGFpbmVyU2Nyb2xsVGhyb3R0bGUoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIGhhbmRsZVNjcm9sbENvbnRhaW5lcihuZXdDb250YWluZXIpIHtcclxuICAgICAgICAgICAgaWYgKChuZXdDb250YWluZXIgPT0gbnVsbCkgfHwgbmV3Q29udGFpbmVyLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChuZXdDb250YWluZXIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgbmV3Q29udGFpbmVyID0gYW5ndWxhci5lbGVtZW50KG5ld0NvbnRhaW5lcik7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIG5ld0NvbnRhaW5lci5hcHBlbmQgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgICAgIG5ld0NvbnRhaW5lciA9IGFuZ3VsYXIuZWxlbWVudChuZXdDb250YWluZXJbbmV3Q29udGFpbmVyLmxlbmd0aCAtIDFdKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbmV3Q29udGFpbmVyID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgbmV3Q29udGFpbmVyID0gdGhpcy4kZWxlbWVudC5wYXJlbnRzKCkuZmluZChuZXdDb250YWluZXIpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAobmV3Q29udGFpbmVyICE9IG51bGwgJiYgKCFBcnJheS5pc0FycmF5KG5ld0NvbnRhaW5lcikgfHxcclxuICAgICAgICAgICAgICAgICAgICAoQXJyYXkuaXNBcnJheShuZXdDb250YWluZXIpICYmIG5ld0NvbnRhaW5lci5sZW5ndGggPiAwKSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNoYW5nZUNvbnRhaW5lcihuZXdDb250YWluZXIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBwaXAtc2Nyb2xsLWNvbnRhaW5lciBhdHRyaWJ1dGUuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBJbmZpbml0ZVNjcm9sbCA9IGZ1bmN0aW9uIChcclxuICAgICAgICAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSxcclxuICAgICAgICAkd2luZG93OiBuZy5JV2luZG93U2VydmljZSxcclxuICAgICAgICAkaW50ZXJ2YWw6IG5nLklJbnRlcnZhbFNlcnZpY2VcclxuICAgICk6IG5nLklEaXJlY3RpdmUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgICAgICAgICBwaXBJbmZpbml0ZVNjcm9sbDogJyYnLFxyXG4gICAgICAgICAgICAgICAgcGlwU2Nyb2xsQ29udGFpbmVyOiAnPScsXHJcbiAgICAgICAgICAgICAgICBwaXBTY3JvbGxEaXN0YW5jZTogJz0nLFxyXG4gICAgICAgICAgICAgICAgcGlwU2Nyb2xsRGlzYWJsZWQ6ICc9JyxcclxuICAgICAgICAgICAgICAgIHBpcFNjcm9sbFVzZURvY3VtZW50Qm90dG9tOiAnPScsXHJcbiAgICAgICAgICAgICAgICBwaXBTY3JvbGxMaXN0ZW5Gb3JFdmVudDogJ0AnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChcclxuICAgICAgICAgICAgICAgICRzY29wZTogSW5maW5pdGVTY3JvbGxTY29wZSxcclxuICAgICAgICAgICAgICAgICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgICAgICAgICAgICAkYXR0cnM6IEluZmluaXRlU2Nyb2xsQXR0cmlidXRlc1xyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIG5ldyBJbmZpbml0ZVNjcm9sbExpbmsoJHJvb3RTY29wZSwgJHdpbmRvdywgJGludGVydmFsLCAkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKFwicGlwSW5maW5pdGVTY3JvbGxcIiwgW10pXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwSW5maW5pdGVTY3JvbGwnLCBJbmZpbml0ZVNjcm9sbCk7XHJcbn0iLCJ7XHJcbiAgICBpbnRlcmZhY2UgU2VsZWN0ZWRBdHRyaWJ1dGVzIGV4dGVuZHMgbmcuSUF0dHJpYnV0ZXMge1xyXG4gICAgICAgIHBpcFNlbGVjdGVkOiBhbnk7XHJcbiAgICAgICAgcGlwU2VsZWN0ZWRJZDogYW55O1xyXG4gICAgICAgIHBpcFNlbGVjdDogYW55O1xyXG4gICAgICAgIHBpcEVudGVyU3BhY2VQcmVzczogYW55O1xyXG4gICAgICAgIHBpcE5vU2Nyb2xsOiBhbnk7XHJcbiAgICAgICAgcGlwU2tpcEhpZGRlbjogYW55O1xyXG4gICAgICAgIHBpcFRyZWVMaXN0OiBhbnk7XHJcbiAgICAgICAgcGlwU2VsZWN0ZWRXYXRjaDogYW55O1xyXG4gICAgfVxyXG5cclxuICAgIGNsYXNzIFNlbGVjdGVkTGluayB7XHJcbiAgICAgICAgcHJpdmF0ZSBpbmRleEdldHRlcjogYW55O1xyXG4gICAgICAgIHByaXZhdGUgaW5kZXhTZXR0ZXI6IGFueTtcclxuICAgICAgICBwcml2YXRlIGlkU2V0dGVyOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBpZEdldHRlcjogYW55O1xyXG4gICAgICAgIHByaXZhdGUgY2hhbmdlR2V0dGVyOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBlbnRlclNwYWNlR2V0dGVyOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBub1Njcm9sbDogYW55O1xyXG4gICAgICAgIHByaXZhdGUgbW9kaWZpZXI6IGFueTtcclxuICAgICAgICBwcml2YXRlIGNsYXNzTmFtZTogYW55O1xyXG4gICAgICAgIHByaXZhdGUgc2VsZWN0ZWRJbmRleDogYW55O1xyXG4gICAgICAgIHByaXZhdGUgY3VycmVudEVsZW1lbnRUYWJpbmV4OiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBwaXBTZWxlY3RlZFdhdGNoOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBpc1Njcm9sbGVkOiBhbnk7XHJcbiAgICAgICAgLy8gVmFyaWFibGVzIGZvciB0b3VjaCBmdW5jdGlvbnNcclxuICAgICAgICBwcml2YXRlIHRvdWNoU3RhcnRYOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSB0b3VjaFN0YXJ0WTogYW55O1xyXG4gICAgICAgIHByaXZhdGUgdHJhY2tpbmdDbGljazogYW55O1xyXG4gICAgICAgIHByaXZhdGUgdHJhY2tpbmdDbGlja1N0YXJ0OiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSB0YXJnZXRFbGVtZW50OiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBsYXN0Q2xpY2tUaW1lOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBjYW5jZWxOZXh0Q2xpY2s6IGFueTtcclxuICAgICAgICAvLyBDb25zdGFudHMgZm9yIHRvdWNoIGZ1bmN0aW9uc1xyXG4gICAgICAgIHByaXZhdGUgdG91Y2hCb3VuZGFyeTogbnVtYmVyID0gMTA7XHJcbiAgICAgICAgcHJpdmF0ZSB0YXBkZWxheTogbnVtYmVyID0gMjAwO1xyXG4gICAgICAgIHByaXZhdGUgdGFwVGltZW91dDogbnVtYmVyID0gNzAwO1xyXG5cclxuICAgICAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAgICAgJHBhcnNlOiBuZy5JUGFyc2VTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwcml2YXRlICRtZENvbnN0YW50OiBhbnksXHJcbiAgICAgICAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkc2NvcGU6IG5nLklTY29wZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5LFxyXG4gICAgICAgICAgICBwcml2YXRlICRhdHRyczogU2VsZWN0ZWRBdHRyaWJ1dGVzXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIC8vdG9kbyBhZGQgc3RvcFNlbGVjdCBwYXJhbWV0ciB0byBkaXNhYmxlIHNlbGVjdFxyXG4gICAgICAgICAgICB0aGlzLmluZGV4R2V0dGVyID0gJGF0dHJzLnBpcFNlbGVjdGVkID8gJHBhcnNlKCRhdHRycy5waXBTZWxlY3RlZCkgOiBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLmluZGV4U2V0dGVyID0gdGhpcy5pbmRleEdldHRlciA/IHRoaXMuaW5kZXhHZXR0ZXIuYXNzaWduIDogbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5pZEdldHRlciA9ICRhdHRycy5waXBTZWxlY3RlZElkID8gJHBhcnNlKCRhdHRycy5waXBTZWxlY3RlZElkKSA6IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuaWRTZXR0ZXIgPSB0aGlzLmlkR2V0dGVyID8gdGhpcy5pZEdldHRlci5hc3NpZ24gOiBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLmNoYW5nZUdldHRlciA9ICRhdHRycy5waXBTZWxlY3QgPyAkcGFyc2UoJGF0dHJzLnBpcFNlbGVjdCkgOiBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLmVudGVyU3BhY2VHZXR0ZXIgPSAkYXR0cnMucGlwRW50ZXJTcGFjZVByZXNzID8gJHBhcnNlKCRhdHRycy5waXBFbnRlclNwYWNlUHJlc3MpIDogbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5ub1Njcm9sbCA9ICRhdHRycy5waXBOb1Njcm9sbDtcclxuICAgICAgICAgICAgdGhpcy5tb2RpZmllciA9ICRhdHRycy5waXBTa2lwSGlkZGVuID8gJzp2aXNpYmxlJyA6ICcnO1xyXG4gICAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9ICRhdHRycy5waXBUcmVlTGlzdCA/ICcucGlwLXNlbGVjdGFibGUtdHJlZScgOiAnLnBpcC1zZWxlY3RhYmxlJztcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gdGhpcy5pbmRleEdldHRlcigkc2NvcGUpO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRFbGVtZW50VGFiaW5leCA9ICRlbGVtZW50LmF0dHIoJ3RhYmluZGV4Jyk7XHJcbiAgICAgICAgICAgIHRoaXMucGlwU2VsZWN0ZWRXYXRjaCA9ICRhdHRycy5waXBTZWxlY3RlZFdhdGNoO1xyXG4gICAgICAgICAgICB0aGlzLmlzU2Nyb2xsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICRlbGVtZW50LmF0dHIoJ3RhYmluZGV4JywgdGhpcy5jdXJyZW50RWxlbWVudFRhYmluZXggfHwgMCk7XHJcblxyXG4gICAgICAgICAgICAkZWxlbWVudC5vbignY2xpY2snLCB0aGlzLmNsYXNzTmFtZSwgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uQ2xpY2tFdmVudChldmVudCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkZWxlbWVudC5vbigndG91Y2hzdGFydCcsIHRoaXMuY2xhc3NOYW1lLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25Ub3VjaFN0YXJ0KGV2ZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICRlbGVtZW50Lm9uKCd0b3VjaG1vdmUnLCB0aGlzLmNsYXNzTmFtZSwgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uVG91Y2hNb3ZlKGV2ZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICRlbGVtZW50Lm9uKCd0b3VjaGVuZCcsIHRoaXMuY2xhc3NOYW1lLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25Ub3VjaEVuZChldmVudCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkZWxlbWVudC5vbigndG91Y2hjYW5jZWwnLCB0aGlzLmNsYXNzTmFtZSwgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uVG91Y2hDYW5jZWwoZXZlbnQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJGVsZW1lbnQub24oJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25LZXlEb3duKGV2ZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICRlbGVtZW50Lm9uKCdmb2N1c2luJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRm9jdXNJbihldmVudCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkZWxlbWVudC5vbignZm9jdXNvdXQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25Gb2N1c091dChldmVudCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gV2F0Y2ggc2VsZWN0ZWQgaXRlbSBpbmRleFxyXG4gICAgICAgICAgICBpZiAoISRhdHRycy5waXBUcmVlTGlzdCkge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLiR3YXRjaCh0aGlzLmluZGV4R2V0dGVyLCAobmV3U2VsZWN0ZWRJbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0SXRlbSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1JbmRleDogbmV3U2VsZWN0ZWRJbmRleFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuJHdhdGNoKHRoaXMuaWRHZXR0ZXIsIChuZXdTZWxlY3RlZElkKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdEl0ZW0oe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbUlkOiBuZXdTZWxlY3RlZElkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2VFdmVudDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBXYXRjaCByZXN5bmMgc2VsZWN0aW9uXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBpcFNlbGVjdGVkV2F0Y2gpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS4kd2F0Y2godGhpcy5waXBTZWxlY3RlZFdhdGNoLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gRGVsYXkgdXBkYXRlIHRvIGFsbG93IG5nLXJlcGVhdCB0byB1cGRhdGUgRE9NXHJcbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSB0aGlzLmluZGV4R2V0dGVyKCRzY29wZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0SXRlbSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtSW5kZXg6IHRoaXMuc2VsZWN0ZWRJbmRleFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9LCAxMDApO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIFNlbGVjdCBpdGVtIGRlZmluZWQgYnkgaW5kZXhcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RJdGVtKHtcclxuICAgICAgICAgICAgICAgIGl0ZW1JbmRleDogdGhpcy5zZWxlY3RlZEluZGV4LFxyXG4gICAgICAgICAgICAgICAgaXRlbXM6ICRlbGVtZW50LmZpbmQodGhpcy5jbGFzc05hbWUpXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBzZWxlY3RJdGVtKGl0ZW1QYXJhbXMpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNTY3JvbGxlZCkgcmV0dXJuO1xyXG4gICAgICAgICAgICBsZXQgaXRlbUluZGV4ID0gaXRlbVBhcmFtcy5pdGVtSW5kZXgsXHJcbiAgICAgICAgICAgICAgICBpdGVtSWQgPSBpdGVtUGFyYW1zLml0ZW1JZCxcclxuICAgICAgICAgICAgICAgIGl0ZW1zID0gaXRlbVBhcmFtcy5pdGVtcyB8fCB0aGlzLiRlbGVtZW50LmZpbmQodGhpcy5jbGFzc05hbWUgKyB0aGlzLm1vZGlmaWVyKSxcclxuICAgICAgICAgICAgICAgIGl0ZW1zTGVuZ3RoID0gaXRlbXMubGVuZ3RoLFxyXG4gICAgICAgICAgICAgICAgaXRlbSA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbVBhcmFtcy5pdGVtKSByZXR1cm4gaXRlbVBhcmFtcy5pdGVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtSW5kZXggPT09IHVuZGVmaW5lZCAmJiBpdGVtSW5kZXggPT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1JbmRleCA9IGl0ZW1zLmluZGV4KGl0ZW1zLmZpbHRlcignW3BpcC1pZD0nICsgaXRlbUlkICsgJ10nKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtSW5kZXggPj0gMCAmJiBpdGVtSW5kZXggPCBpdGVtc0xlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbXNbaXRlbUluZGV4XVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJhaXNlRXZlbnQgPSBpdGVtUGFyYW1zLnJhaXNlRXZlbnQ7XHJcbiAgICAgICAgICAgICAgICBpdGVtID0gaXRlbSgpO1xyXG4gICAgICAgICAgICBpZiAoaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5maW5kKHRoaXMuY2xhc3NOYW1lKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQgbWQtZm9jdXNlZCcpO1xyXG4gICAgICAgICAgICAgICAgaXRlbSA9IDxhbnk+YW5ndWxhci5lbGVtZW50KGl0ZW0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKCdzZWxlY3RlZCBtZC1mb2N1c2VkJylcclxuICAgICAgICAgICAgICAgICAgICAuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5ub1Njcm9sbCkgdGhpcy5zY3JvbGxUb0l0ZW0oaXRlbSk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmFpc2VFdmVudCkgdGhpcy5kZWZpbmVTZWxlY3RlZEluZGV4KGl0ZW1zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHByaXZhdGUgZGVmaW5lU2VsZWN0ZWRJbmRleChpdGVtcykge1xyXG4gICAgICAgICAgICBjb25zdCBvbGRTZWxlY3RlZEluZGV4ID0gdGhpcy5zZWxlY3RlZEluZGV4O1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSAtMTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGl0ZW1zLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQoaXRlbXNbaW5kZXhdKS5oYXNDbGFzcygnc2VsZWN0ZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IGluZGV4O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc3QgdXBkYXRlSW5kZXggPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZEl0ZW0gPSBhbmd1bGFyLmVsZW1lbnQoaXRlbXNbdGhpcy5zZWxlY3RlZEluZGV4XSksXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJZCA9IHNlbGVjdGVkSXRlbS5hdHRyKCdwaXAtaWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pbmRleFNldHRlcikgdGhpcy5pbmRleFNldHRlcih0aGlzLiRzY29wZSwgdGhpcy5zZWxlY3RlZEluZGV4KTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlkU2V0dGVyKSB0aGlzLmlkU2V0dGVyKHRoaXMuJHNjb3BlLCBzZWxlY3RlZElkKTtcclxuICAgICAgICAgICAgICAgIG9uU2VsZWN0KCk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBjb25zdCBvblNlbGVjdCA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkSXRlbSA9IGFuZ3VsYXIuZWxlbWVudChpdGVtc1t0aGlzLnNlbGVjdGVkSW5kZXhdKSxcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZElkID0gc2VsZWN0ZWRJdGVtLmF0dHIoJ3BpcC1pZCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoYW5nZUdldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlR2V0dGVyKHRoaXMuJHNjb3BlLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRldmVudDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLiRlbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbTogc2VsZWN0ZWRJdGVtLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg6IHRoaXMuc2VsZWN0ZWRJbmRleCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBzZWxlY3RlZElkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3SW5kZXg6IHRoaXMuc2VsZWN0ZWRJbmRleCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9sZEluZGV4OiBvbGRTZWxlY3RlZEluZGV4XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gRXhlY3V0ZSBjYWxsYmFjayB0byBub3RpZnkgYWJvdXQgaXRlbSBzZWxlY3RcclxuICAgICAgICAgICAgaWYgKG9sZFNlbGVjdGVkSW5kZXggIT0gdGhpcy5zZWxlY3RlZEluZGV4ICYmIHRoaXMuc2VsZWN0ZWRJbmRleCAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRhcHBseSgoKSA9PiB7IHVwZGF0ZUluZGV4KCk7IH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuJGFwcGx5KCgpID0+IHsgb25TZWxlY3QoKTsgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBwcml2YXRlIHNjcm9sbFRvSXRlbSgkaXRlbSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5ub1Njcm9sbCB8fCAhJGl0ZW0ub2Zmc2V0KCkpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJUb3AgPSB0aGlzLiRlbGVtZW50Lm9mZnNldCgpLnRvcCxcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lckhlaWdodCA9IHRoaXMuJGVsZW1lbnQuaGVpZ2h0KCksXHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJCb3R0b20gPSBjb250YWluZXJUb3AgKyBjb250YWluZXJIZWlnaHQsXHJcbiAgICAgICAgICAgICAgICBpdGVtVG9wID0gJGl0ZW0ub2Zmc2V0KCkudG9wLFxyXG4gICAgICAgICAgICAgICAgaXRlbUhlaWdodCA9ICRpdGVtLm91dGVySGVpZ2h0KHRydWUpLFxyXG4gICAgICAgICAgICAgICAgaXRlbUJvdHRvbSA9IGl0ZW1Ub3AgKyBpdGVtSGVpZ2h0LFxyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyU2Nyb2xsVG9wID0gdGhpcy4kZWxlbWVudC5zY3JvbGxUb3AoKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuaXNTY3JvbGxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pc1Njcm9sbGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0sIDEwMCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY29udGFpbmVyVG9wID4gaXRlbVRvcCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5zY3JvbGxUb3AoY29udGFpbmVyU2Nyb2xsVG9wICsgaXRlbVRvcCAtIGNvbnRhaW5lclRvcCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY29udGFpbmVyQm90dG9tIDwgaXRlbUJvdHRvbSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5zY3JvbGxUb3AoY29udGFpbmVyU2Nyb2xsVG9wICsgaXRlbUJvdHRvbSAtIGNvbnRhaW5lckJvdHRvbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBwcml2YXRlIGdldFRhcmdldEVsZW1lbnRGcm9tRXZlbnRUYXJnZXQoZXZlbnRUYXJnZXQpIHtcclxuICAgICAgICAgICAgLy8gT24gc29tZSBvbGRlciBicm93c2VycyB0aGUgZXZlbnQgdGFyZ2V0IG1heSBiZSBhIHRleHQgbm9kZS5cclxuICAgICAgICAgICAgaWYgKGV2ZW50VGFyZ2V0Lm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGV2ZW50VGFyZ2V0LnBhcmVudE5vZGU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBldmVudFRhcmdldDtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBwcml2YXRlIHRvdWNoSGFzTW92ZWQoZXZlbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgdG91Y2ggPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXSxcclxuICAgICAgICAgICAgICAgIGJvdW5kYXJ5ID0gdGhpcy50b3VjaEJvdW5kYXJ5OyAvLyBUb3VjaG1vdmUgYm91bmRhcnksIGJleW9uZCB3aGljaCBhIGNsaWNrIHdpbGwgYmUgY2FuY2VsbGVkLlxyXG5cclxuICAgICAgICAgICAgaWYgKE1hdGguYWJzKHRvdWNoLnBhZ2VYIC0gdGhpcy50b3VjaFN0YXJ0WCkgPiBib3VuZGFyeSB8fCBNYXRoLmFicyh0b3VjaC5wYWdlWSAtIHRoaXMudG91Y2hTdGFydFkpID4gYm91bmRhcnkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkNsaWNrRXZlbnQoZXZlbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RJdGVtKHtcclxuICAgICAgICAgICAgICAgIGl0ZW06IGV2ZW50LmN1cnJlbnRUYXJnZXQsXHJcbiAgICAgICAgICAgICAgICByYWlzZUV2ZW50OiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvblRvdWNoU3RhcnQoZXZlbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgZXYgPSBldmVudC5vcmlnaW5hbEV2ZW50O1xyXG4gICAgICAgICAgICBpZiAoZXZbJ3RhcmdldFRvdWNoZXMnXS5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gdGhpcy5nZXRUYXJnZXRFbGVtZW50RnJvbUV2ZW50VGFyZ2V0KGV2LnRhcmdldCksXHJcbiAgICAgICAgICAgICAgICB0b3VjaCA9IGV2Wyd0YXJnZXRUb3VjaGVzJ11bMF07XHJcblxyXG4gICAgICAgICAgICB0aGlzLnRyYWNraW5nQ2xpY2sgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnRyYWNraW5nQ2xpY2tTdGFydCA9IGV2LnRpbWVTdGFtcDtcclxuICAgICAgICAgICAgdGhpcy50YXJnZXRFbGVtZW50ID0gdGFyZ2V0RWxlbWVudDtcclxuXHJcbiAgICAgICAgICAgIHRoaXMudG91Y2hTdGFydFggPSB0b3VjaC5wYWdlWDtcclxuICAgICAgICAgICAgdGhpcy50b3VjaFN0YXJ0WSA9IHRvdWNoLnBhZ2VZO1xyXG5cclxuICAgICAgICAgICAgLyppZiAoKGV2LnRpbWVTdGFtcCAtIHRoaXMubGFzdENsaWNrVGltZSkgPCB0aGlzLnRhcGRlbGF5KSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgfSovXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25Ub3VjaE1vdmUoZXZlbnQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnRyYWNraW5nQ2xpY2spIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGV2ID0gZXZlbnQub3JpZ2luYWxFdmVudDtcclxuICAgICAgICAgICAgLy8gSWYgdGhlIHRvdWNoIGhhcyBtb3ZlZCwgY2FuY2VsIHRoZSBjbGljayB0cmFja2luZ1xyXG4gICAgICAgICAgICBpZiAodGhpcy50YXJnZXRFbGVtZW50ICE9PSB0aGlzLmdldFRhcmdldEVsZW1lbnRGcm9tRXZlbnRUYXJnZXQoZXYudGFyZ2V0KSB8fCB0aGlzLnRvdWNoSGFzTW92ZWQoZXYpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWNraW5nQ2xpY2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0RWxlbWVudCA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvblRvdWNoRW5kKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGxldCBmb3JFbGVtZW50LCBuZXdUcmFja2luZ0NsaWNrU3RhcnQsIHRhcmdldFRhZ05hbWUsIHNjcm9sbFBhcmVudCwgdG91Y2gsIG5ld3RhcmdldEVsZW1lbnQgPSB0aGlzLnRhcmdldEVsZW1lbnQ7XHJcblxyXG4gICAgICAgICAgICBpZiAoIXRoaXMudHJhY2tpbmdDbGljaykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgZXYgPSBldmVudC5vcmlnaW5hbEV2ZW50O1xyXG4gICAgICAgICAgICAvLyBQcmV2ZW50IHBoYW50b20gY2xpY2tzIG9uIGZhc3QgZG91YmxlLXRhcCBcclxuICAgICAgICAgICAgaWYgKChldi50aW1lU3RhbXAgLSB0aGlzLmxhc3RDbGlja1RpbWUpIDwgdGhpcy50YXBkZWxheSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5jZWxOZXh0Q2xpY2sgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICgoZXYudGltZVN0YW1wIC0gdGhpcy50cmFja2luZ0NsaWNrU3RhcnQpID4gdGhpcy50YXBUaW1lb3V0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gUmVzZXQgdG8gcHJldmVudCB3cm9uZyBjbGljayBjYW5jZWwgb24gaW5wdXQgXHJcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsTmV4dENsaWNrID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmxhc3RDbGlja1RpbWUgPSBldmVudC50aW1lU3RhbXA7XHJcblxyXG4gICAgICAgICAgICBuZXdUcmFja2luZ0NsaWNrU3RhcnQgPSB0aGlzLnRyYWNraW5nQ2xpY2tTdGFydDtcclxuICAgICAgICAgICAgdGhpcy50cmFja2luZ0NsaWNrID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMudHJhY2tpbmdDbGlja1N0YXJ0ID0gMDtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0SXRlbSh7XHJcbiAgICAgICAgICAgICAgICBpdGVtOiBldmVudC5jdXJyZW50VGFyZ2V0LFxyXG4gICAgICAgICAgICAgICAgcmFpc2VFdmVudDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25Ub3VjaENhbmNlbChldmVudCkge1xyXG4gICAgICAgICAgICB0aGlzLnRyYWNraW5nQ2xpY2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy50YXJnZXRFbGVtZW50ID0gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25LZXlEb3duKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZlbnQud2hpY2ggfHwgZXZlbnQua2V5Q29kZTtcclxuXHJcbiAgICAgICAgICAgIC8vIENoZWNrIGNvbnRyb2wga2V5Q29kZVxyXG4gICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSB0aGlzLiRtZENvbnN0YW50LktFWV9DT0RFLkVOVEVSIHx8IGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5TUEFDRSkge1xyXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmVudGVyU3BhY2VHZXR0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVudGVyU3BhY2VHZXR0ZXIodGhpcy4kc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IHRoaXMuJGVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleDogdGhpcy5zZWxlY3RlZEluZGV4LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbTogdGhpcy4kZWxlbWVudC5maW5kKCcuc2VsZWN0ZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5MRUZUX0FSUk9XIHx8IGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5SSUdIVF9BUlJPVyB8fFxyXG4gICAgICAgICAgICAgICAga2V5Q29kZSA9PSB0aGlzLiRtZENvbnN0YW50LktFWV9DT0RFLlVQX0FSUk9XIHx8IGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5ET1dOX0FSUk9XXHJcbiAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIEdldCBuZXh0IHNlbGVjdGFibGUgY29udHJvbCBpbmRleFxyXG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbXMgPSB0aGlzLiRlbGVtZW50LmZpbmQodGhpcy5jbGFzc05hbWUgKyB0aGlzLm1vZGlmaWVyKSxcclxuICAgICAgICAgICAgICAgICAgICBpbmMgPSAoa2V5Q29kZSA9PSB0aGlzLiRtZENvbnN0YW50LktFWV9DT0RFLlJJR0hUX0FSUk9XIHx8IGtleUNvZGUgPT0gdGhpcy4kbWRDb25zdGFudC5LRVlfQ09ERS5ET1dOX0FSUk9XKSA/IDEgOiAtMSxcclxuICAgICAgICAgICAgICAgICAgICBuZXdTZWxlY3RlZEluZGV4ID0gdGhpcy5zZWxlY3RlZEluZGV4ICsgaW5jO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIFNldCBuZXh0IGNvbnRyb2wgYXMgc2VsZWN0ZWRcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0SXRlbSh7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbUluZGV4OiBuZXdTZWxlY3RlZEluZGV4LFxyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBpdGVtcyxcclxuICAgICAgICAgICAgICAgICAgICByYWlzZUV2ZW50OiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkZvY3VzSW4oZXZlbnQpIHtcclxuICAgICAgICAgICAgLy8gQ2hvb3NlIHNlbGVjdGVkIGVsZW1lbnRcclxuICAgICAgICAgICAgbGV0IGl0ZW1zLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRJdGVtID0gdGhpcy4kZWxlbWVudC5maW5kKHRoaXMuY2xhc3NOYW1lICsgJy5zZWxlY3RlZCcpO1xyXG5cclxuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtLmFkZENsYXNzKCdtZC1mb2N1c2VkJyk7XHJcblxyXG4gICAgICAgICAgICAvLyBJZiB0aGVyZSBhcmUgbm90IHNlbGVjdGVkIGVsZW1lbnRzIHRoZW4gcGljayB0aGUgZmlyc3Qgb25lXHJcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZEl0ZW0ubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSB0aGlzLmluZGV4R2V0dGVyKHRoaXMuJHNjb3BlKTtcclxuICAgICAgICAgICAgICAgIGl0ZW1zID0gdGhpcy4kZWxlbWVudC5maW5kKHRoaXMuY2xhc3NOYW1lICsgdGhpcy5tb2RpZmllcik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdEl0ZW0oe1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1JbmRleDogdGhpcy5zZWxlY3RlZEluZGV4IHx8IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbXM6IGl0ZW1zLFxyXG4gICAgICAgICAgICAgICAgICAgIHJhaXNlRXZlbnQ6IHRydWVcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIG9uRm9jdXNPdXQoZXZlbnQpIHtcclxuICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5maW5kKHRoaXMuY2xhc3NOYW1lICsgJy5tZC1mb2N1c2VkJyArIHRoaXMubW9kaWZpZXIpLnJlbW92ZUNsYXNzKCdtZC1mb2N1c2VkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IFNlbGVjdGVkID0gZnVuY3Rpb24gKFxyXG4gICAgICAgICRwYXJzZTogbmcuSVBhcnNlU2VydmljZSxcclxuICAgICAgICAkbWRDb25zdGFudDogYW55LFxyXG4gICAgICAgICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2VcclxuICAgICk6IG5nLklEaXJlY3RpdmUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgICAgICAgIHNjb3BlOiBmYWxzZSxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKFxyXG4gICAgICAgICAgICAgICAgJHNjb3BlOiBuZy5JU2NvcGUsXHJcbiAgICAgICAgICAgICAgICAkZWxlbWVudDogSlF1ZXJ5LFxyXG4gICAgICAgICAgICAgICAgJGF0dHJzOiBTZWxlY3RlZEF0dHJpYnV0ZXNcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBuZXcgU2VsZWN0ZWRMaW5rKCRwYXJzZSwgJG1kQ29uc3RhbnQsICR0aW1lb3V0LCAkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKFwicGlwU2VsZWN0ZWRcIiwgW10pXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwU2VsZWN0ZWQnLCBTZWxlY3RlZCk7XHJcbn0iLCJpbXBvcnQgeyBTaG9ydGN1dE9wdGlvbnMgfSBmcm9tIFwiLi9TaG9ydGN1dFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNob3J0Y3V0SXRlbSB7XHJcbiAgICAvLyBTaG9ydGN1dCBjb21iaW5hdGlvblxyXG4gICAgcHVibGljIHNob3J0Y3V0OiBzdHJpbmc7XHJcbiAgICAvLyBUYXJnZXQgb2JqZWN0IFxyXG4gICAgcHVibGljIHRhcmdldD86IGFueTtcclxuICAgIC8vIFRhcmdldCBlbGVtZW50IGJ5IElkXHJcbiAgICBwdWJsaWMgdGFyZ2V0SWQ/OiBzdHJpbmc7XHJcbiAgICAvLyBUYXJnZXQgZWxlbWVudCBieSBjbGFzcyAoZmlyc3RlbGVtZW50Pz8pXHJcbiAgICAvLyBQdWJsaWMgdGFyZ2V0Q2xhc3M/OiBzdHJpbmc7XHJcbiAgICAvLyBBY2Nlc3MgZnVuY3Rpb25cclxuICAgIHB1YmxpYyBhY2Nlc3M/OiAoZXZlbnQ6IEpRdWVyeUV2ZW50T2JqZWN0KSA9PiBib29sZWFuO1xyXG4gICAgLy8gV2luZG93LmxvY2F0aW9uLmhyZWZcclxuICAgIHB1YmxpYyBocmVmPzogc3RyaW5nO1xyXG4gICAgLy8gJGxvY2F0aW9uLnVybFxyXG4gICAgcHVibGljIHVybD86IHN0cmluZztcclxuICAgIC8vICRzdGF0ZS5nbyhzdGF0ZSwgc3RhdGVQYXJhbXMpXHJcbiAgICBwdWJsaWMgc3RhdGU/OiBzdHJpbmc7XHJcbiAgICAvLyBQYXJhbWV0ZXJzIGZvciAkc3RhdGUuZ28oc3RhdGUsIHN0YXRlUGFyYW1zKVxyXG4gICAgcHVibGljIHN0YXRlUGFyYW1zPzogYW55O1xyXG4gICAgLy8gJHJvb3RTY29wZS5icm9hZGNhc3QoZXZlbnQpXHJcbiAgICBwdWJsaWMgZXZlbnQ/OiBzdHJpbmc7XHJcbiAgICAvLyBDbGljayBjYWxsYmFja1xyXG4gICAgcHVibGljIGtleXByZXNzPzogKGV2ZW50OiBKUXVlcnlFdmVudE9iamVjdCkgPT4gdm9pZDtcclxuICAgIC8vIERlZmF1bHQgb3B0aW9uc1xyXG4gICAgcHVibGljIG9wdGlvbnM/OiBTaG9ydGN1dE9wdGlvbnM7ICAgIFxyXG59XHJcblxyXG4vLyBleHBvcnQgY2xhc3MgU2hvcnRjdXRJdGVtIGV4dGVuZHMgU2ltcGxlU2hvcnRjdXRJdGVtIHtcclxuLy8gICAgIHB1YmxpYyBzaG9ydGN1dHM6IFNpbXBsZVNob3J0Y3V0SXRlbVtdO1xyXG4vLyB9XHJcblxyXG5leHBvcnQgY2xhc3MgU2hvcnRjdXRzQ29uZmlnIHtcclxuICAgIC8vIEdsb2JhbCBzaG9ydGN1dCBcclxuICAgIHB1YmxpYyBnbG9iYWxTaG9ydGN1dHM6IFNob3J0Y3V0SXRlbVtdID0gW107XHJcbiAgICAvLyBMb2NhbCBzaG9ydGN1dCBcclxuICAgIHB1YmxpYyBsb2NhbFNob3J0Y3V0czogU2hvcnRjdXRJdGVtW10gPSBbXTtcclxuICAgIC8vIERlZmF1bHQgb3B0aW9uc1xyXG4gICAgcHVibGljIGRlZmF1bHRPcHRpb25zOiBTaG9ydGN1dE9wdGlvbnMgPSBudWxsO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElTaG9ydGN1dHNTZXJ2aWNlIHtcclxuICAgIHJlYWRvbmx5IGNvbmZpZzogU2hvcnRjdXRzQ29uZmlnO1xyXG5cclxuICAgIGdsb2JhbFNob3J0Y3V0czogU2hvcnRjdXRJdGVtW107XHJcbiAgICBsb2NhbFNob3J0Y3V0czogU2hvcnRjdXRJdGVtW107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVNob3J0Y3V0c1Byb3ZpZGVyIGV4dGVuZHMgbmcuSVNlcnZpY2VQcm92aWRlciB7XHJcbiAgICBjb25maWc6IFNob3J0Y3V0c0NvbmZpZztcclxuICAgIFxyXG4gICAgZ2xvYmFsU2hvcnRjdXRzOiBTaG9ydGN1dEl0ZW1bXTtcclxuICAgIGRlZmF1bHRPcHRpb25zOiBTaG9ydGN1dE9wdGlvbnM7XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIEtleWJvYXJkRXZlbnQge1xyXG4gICAgc3RhdGljIEtleWRvd246IHN0cmluZyA9ICdrZXlkb3duJztcclxuICAgIHN0YXRpYyBLZXl1cDogc3RyaW5nID0gJ2tleXVwJztcclxuICAgIHN0YXRpYyBLZXlwcmVzczogc3RyaW5nID0gJ2tleXByZXNzJztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNob3J0Y3V0T3B0aW9ucyB7XHJcbiAgICBUeXBlOiBLZXlib2FyZEV2ZW50O1xyXG4gICAgUHJvcGFnYXRlOiBib29sZWFuO1xyXG4gICAgRGlzYWJsZUluSW5wdXQ6IGJvb2xlYW47XHJcbiAgICBUYXJnZXQ6IGFueTsgLy8gRXZlbnQgdGFyZ2V0IG9iamVjdFxyXG4gICAgS2V5Y29kZTogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU2hvcnRjdXQge1xyXG4gICAgcHJpdmF0ZSBzaGlmdF9udW1zID0ge1xyXG4gICAgICAgIFwiYFwiOiBcIn5cIixcclxuICAgICAgICBcIjFcIjogXCIhXCIsXHJcbiAgICAgICAgXCIyXCI6IFwiQFwiLFxyXG4gICAgICAgIFwiM1wiOiBcIiNcIixcclxuICAgICAgICBcIjRcIjogXCIkXCIsXHJcbiAgICAgICAgXCI1XCI6IFwiJVwiLFxyXG4gICAgICAgIFwiNlwiOiBcIl5cIixcclxuICAgICAgICBcIjdcIjogXCImXCIsXHJcbiAgICAgICAgXCI4XCI6IFwiKlwiLFxyXG4gICAgICAgIFwiOVwiOiBcIihcIixcclxuICAgICAgICBcIjBcIjogXCIpXCIsXHJcbiAgICAgICAgXCItXCI6IFwiX1wiLFxyXG4gICAgICAgIFwiPVwiOiBcIitcIixcclxuICAgICAgICBcIjtcIjogXCI6XCIsXHJcbiAgICAgICAgXCInXCI6IFwiXFxcIlwiLFxyXG4gICAgICAgIFwiLFwiOiBcIjxcIixcclxuICAgICAgICBcIi5cIjogXCI+XCIsXHJcbiAgICAgICAgXCIvXCI6IFwiP1wiLFxyXG4gICAgICAgIFwiXFxcXFwiOiBcInxcIlxyXG4gICAgfTtcclxuXHJcbiAgICBwcml2YXRlIHNwZWNpYWxfa2V5cyA9IHtcclxuICAgICAgICAnZXNjJzogMjcsXHJcbiAgICAgICAgJ2VzY2FwZSc6IDI3LFxyXG4gICAgICAgICd0YWInOiA5LFxyXG4gICAgICAgICdzcGFjZSc6IDMyLFxyXG4gICAgICAgICdyZXR1cm4nOiAxMyxcclxuICAgICAgICAnZW50ZXInOiAxMyxcclxuICAgICAgICAnYmFja3NwYWNlJzogOCxcclxuXHJcbiAgICAgICAgJ3Njcm9sbGxvY2snOiAxNDUsXHJcbiAgICAgICAgJ3Njcm9sbF9sb2NrJzogMTQ1LFxyXG4gICAgICAgICdzY3JvbGwnOiAxNDUsXHJcbiAgICAgICAgJ2NhcHNsb2NrJzogMjAsXHJcbiAgICAgICAgJ2NhcHNfbG9jayc6IDIwLFxyXG4gICAgICAgICdjYXBzJzogMjAsXHJcbiAgICAgICAgJ251bWxvY2snOiAxNDQsXHJcbiAgICAgICAgJ251bV9sb2NrJzogMTQ0LFxyXG4gICAgICAgICdudW0nOiAxNDQsXHJcblxyXG4gICAgICAgICdwYXVzZSc6IDE5LFxyXG4gICAgICAgICdicmVhayc6IDE5LFxyXG5cclxuICAgICAgICAnaW5zZXJ0JzogNDUsXHJcbiAgICAgICAgJ2hvbWUnOiAzNixcclxuICAgICAgICAnZGVsZXRlJzogNDYsXHJcbiAgICAgICAgJ2VuZCc6IDM1LFxyXG5cclxuICAgICAgICAncGFnZXVwJzogMzMsXHJcbiAgICAgICAgJ3BhZ2VfdXAnOiAzMyxcclxuICAgICAgICAncHUnOiAzMyxcclxuXHJcbiAgICAgICAgJ3BhZ2Vkb3duJzogMzQsXHJcbiAgICAgICAgJ3BhZ2VfZG93bic6IDM0LFxyXG4gICAgICAgICdwZCc6IDM0LFxyXG5cclxuICAgICAgICAnbGVmdCc6IDM3LFxyXG4gICAgICAgICd1cCc6IDM4LFxyXG4gICAgICAgICdyaWdodCc6IDM5LFxyXG4gICAgICAgICdkb3duJzogNDAsXHJcblxyXG4gICAgICAgICdmMSc6IDExMixcclxuICAgICAgICAnZjInOiAxMTMsXHJcbiAgICAgICAgJ2YzJzogMTE0LFxyXG4gICAgICAgICdmNCc6IDExNSxcclxuICAgICAgICAnZjUnOiAxMTYsXHJcbiAgICAgICAgJ2Y2JzogMTE3LFxyXG4gICAgICAgICdmNyc6IDExOCxcclxuICAgICAgICAnZjgnOiAxMTksXHJcbiAgICAgICAgJ2Y5JzogMTIwLFxyXG4gICAgICAgICdmMTAnOiAxMjEsXHJcbiAgICAgICAgJ2YxMSc6IDEyMixcclxuICAgICAgICAnZjEyJzogMTIzXHJcbiAgICB9O1xyXG5cclxuICAgIHByaXZhdGUgbW9kaWZpZXJzID0ge1xyXG4gICAgICAgIHNoaWZ0OiB7IHdhbnRlZDogZmFsc2UsIHByZXNzZWQ6IGZhbHNlIH0sXHJcbiAgICAgICAgY3RybDogeyB3YW50ZWQ6IGZhbHNlLCBwcmVzc2VkOiBmYWxzZSB9LFxyXG4gICAgICAgIGFsdDogeyB3YW50ZWQ6IGZhbHNlLCBwcmVzc2VkOiBmYWxzZSB9LFxyXG4gICAgICAgIG1ldGE6IHsgd2FudGVkOiBmYWxzZSwgcHJlc3NlZDogZmFsc2UgfVx0Ly8gTWV0YSBpcyBNYWMgc3BlY2lmaWNcclxuICAgIH07XHJcblxyXG4gICAgcHVibGljIGV2ZW50Q2FsbGJhY2s6IEZ1bmN0aW9uO1xyXG4gICAgcHVibGljIHRhcmdldDogYW55O1xyXG4gICAgcHVibGljIGV2ZW50OiBLZXlib2FyZEV2ZW50O1xyXG4gICAgcHVibGljIG9wdGlvbjogU2hvcnRjdXRPcHRpb25zO1xyXG4gICAgcHVibGljIHNob3JjdXQ6IHN0cmluZztcclxuICAgIHB1YmxpYyBjYWxsYmFjazogRnVuY3Rpb247XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIGVsZW1lbnQ6IGFueSxcclxuICAgICAgICBzaG9yY3V0Q29tYmluYXRpb246IHN0cmluZyxcclxuICAgICAgICBvcHRpb246IFNob3J0Y3V0T3B0aW9ucyxcclxuICAgICAgICBjYWxsYmFjazogKGU/OiBKUXVlcnlFdmVudE9iamVjdCkgPT4gdm9pZFxyXG4gICAgKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICB0aGlzLnRhcmdldCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5zaG9yY3V0ID0gc2hvcmN1dENvbWJpbmF0aW9uO1xyXG4gICAgICAgIHRoaXMuZXZlbnQgPSBvcHRpb24uVHlwZTtcclxuICAgICAgICB0aGlzLm9wdGlvbiA9IG9wdGlvbjtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcblxyXG4gICAgICAgIHRoaXMuZXZlbnRDYWxsYmFjayA9IChldmVudDogSlF1ZXJ5RXZlbnRPYmplY3QpID0+IHtcclxuICAgICAgICAgICAgbGV0IGU6IEpRdWVyeUV2ZW50T2JqZWN0ID0gZXZlbnQgfHwgPEpRdWVyeUV2ZW50T2JqZWN0PndpbmRvdy5ldmVudDtcclxuICAgICAgICAgICAgbGV0IGNvZGU6IG51bWJlcjtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbi5EaXNhYmxlSW5JbnB1dCkgeyAvLyBEaXNhYmxlIHNob3J0Y3V0IGtleXMgaW4gSW5wdXQsIFRleHRhcmVhIGZpZWxkc1xyXG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50ID0gZS50YXJnZXQ7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGUuc3JjRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlLnNyY0VsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT0gMykge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudE5vZGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC50YWdOYW1lID09ICdJTlBVVCcgfHwgZWxlbWVudC50YWdOYW1lID09ICdURVhUQVJFQScpIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBGaW5kIFdoaWNoIGtleSBpcyBwcmVzc2VkXHJcbiAgICAgICAgICAgIGlmIChlLmtleUNvZGUpIHtcclxuICAgICAgICAgICAgICAgIGNvZGUgPSBlLmtleUNvZGU7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZS53aGljaCkge1xyXG4gICAgICAgICAgICAgICAgY29kZSA9IGUud2hpY2g7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCBjaGFyYWN0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUpLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY29kZSA9PSAxODgpIGNoYXJhY3RlciA9IFwiLFwiOyAvLyBJZiB0aGUgdXNlciBwcmVzc2VzLCB3aGVuIHRoZSB0eXBlIGlzIG9ua2V5ZG93blxyXG4gICAgICAgICAgICBpZiAoY29kZSA9PSAxOTApIGNoYXJhY3RlciA9IFwiLlwiOyAvLyBJZiB0aGUgdXNlciBwcmVzc2VzLCB3aGVuIHRoZSB0eXBlIGlzIG9ua2V5ZG93blxyXG5cclxuICAgICAgICAgICAgbGV0IGtleXM6IHN0cmluZ1tdID0gdGhpcy5zaG9yY3V0LnNwbGl0KFwiK1wiKTtcclxuICAgICAgICAgICAgLy8gS2V5IFByZXNzZWQgLSBjb3VudHMgdGhlIG51bWJlciBvZiB2YWxpZCBrZXlwcmVzc2VzIC0gaWYgaXQgaXMgc2FtZSBhcyB0aGUgbnVtYmVyIG9mIGtleXMsIHRoZSBzaG9ydGN1dCBmdW5jdGlvbiBpcyBpbnZva2VkXHJcbiAgICAgICAgICAgIGxldCBrcDogbnVtYmVyID0gMDtcclxuXHJcbiAgICAgICAgICAgIGlmIChlLmN0cmxLZXkpIHRoaXMubW9kaWZpZXJzLmN0cmwucHJlc3NlZCA9IGUuY3RybEtleTtcclxuICAgICAgICAgICAgaWYgKGUuc2hpZnRLZXkpIHRoaXMubW9kaWZpZXJzLnNoaWZ0LnByZXNzZWQgPSBlLnNoaWZ0S2V5O1xyXG4gICAgICAgICAgICBpZiAoZS5hbHRLZXkpIHRoaXMubW9kaWZpZXJzLmFsdC5wcmVzc2VkID0gZS5hbHRLZXk7XHJcbiAgICAgICAgICAgIGlmIChlLm1ldGFLZXkpIHRoaXMubW9kaWZpZXJzLm1ldGEucHJlc3NlZCA9IGUubWV0YUtleTtcclxuXHJcbiAgICAgICAgICAgIGxldCBpOiBudW1iZXIgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGs6IHN0cmluZyA9IGtleXNbaV07XHJcbiAgICAgICAgICAgICAgICAvLyBNb2RpZmllcnNcclxuICAgICAgICAgICAgICAgIGlmIChrID09ICdjdHJsJyB8fCBrID09ICdjb250cm9sJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGtwKys7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2RpZmllcnMuY3RybC53YW50ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChrID09ICdzaGlmdCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBrcCsrO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9kaWZpZXJzLnNoaWZ0LndhbnRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGsgPT0gJ2FsdCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBrcCsrO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9kaWZpZXJzLmFsdC53YW50ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChrID09ICdtZXRhJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGtwKys7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2RpZmllcnMubWV0YS53YW50ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChrLmxlbmd0aCA+IDEpIHsgLy8gSWYgaXQgaXMgYSBzcGVjaWFsIGtleVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNwZWNpYWxfa2V5c1trXSA9PSBjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtwKys7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLm9wdGlvbi5LZXljb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9uLktleWNvZGUgPT0gY29kZSkga3ArKztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIFRoZSBzcGVjaWFsIGtleXMgZGlkIG5vdCBtYXRjaFxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFyYWN0ZXIgPT0gaykga3ArKztcclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2hpZnRfbnVtc1tjaGFyYWN0ZXJdICYmIGUuc2hpZnRLZXkpIHsgLy8gU3R1cGlkIFNoaWZ0IGtleSBidWcgY3JlYXRlZCBieSB1c2luZyBsb3dlcmNhc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJhY3RlciA9IHRoaXMuc2hpZnRfbnVtc1tjaGFyYWN0ZXJdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXJhY3RlciA9PSBrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga3ArKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKGtwID09IGtleXMubGVuZ3RoICYmXHJcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGlmaWVycy5jdHJsLnByZXNzZWQgPT0gdGhpcy5tb2RpZmllcnMuY3RybC53YW50ZWQgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMubW9kaWZpZXJzLnNoaWZ0LnByZXNzZWQgPT0gdGhpcy5tb2RpZmllcnMuc2hpZnQud2FudGVkICYmXHJcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGlmaWVycy5hbHQucHJlc3NlZCA9PSB0aGlzLm1vZGlmaWVycy5hbHQud2FudGVkICYmXHJcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGlmaWVycy5tZXRhLnByZXNzZWQgPT0gdGhpcy5tb2RpZmllcnMubWV0YS53YW50ZWQpIHtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrKGUpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb24uUHJvcGFnYXRlKSB7IC8vIFN0b3AgdGhlIGV2ZW50XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZS5jYW5jZWxCdWJibGUgaXMgc3VwcG9ydGVkIGJ5IElFIC0gdGhpcyB3aWxsIGtpbGwgdGhlIGJ1YmJsaW5nIHByb2Nlc3MuXHJcbiAgICAgICAgICAgICAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZS5zdG9wUHJvcGFnYXRpb24gd29ya3MgaW4gRmlyZWZveC5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoZS5zdG9wUHJvcGFnYXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubW9kaWZpZXJzLmN0cmwucHJlc3NlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLm1vZGlmaWVycy5zaGlmdC5wcmVzc2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMubW9kaWZpZXJzLmFsdC5wcmVzc2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMubW9kaWZpZXJzLm1ldGEucHJlc3NlZCA9IGZhbHNlO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU2hvcnRjdXQsIFNob3J0Y3V0T3B0aW9ucywgS2V5Ym9hcmRFdmVudCB9IGZyb20gXCIuL1Nob3J0Y3V0XCI7XHJcbmltcG9ydCB7IElLZXlib2FyZFNob3J0Y3V0cywgSVNob3J0Y3V0QmluZGluZ1NlcnZpY2UsIElTaG9ydGN1dEJpbmRpbmdQcm92aWRlciB9IGZyb20gJy4vSVNob3J0Y3V0QmluZGluZ1NlcnZpY2UnO1xyXG5cclxue1xyXG4gICAgY2xhc3MgU2hvcnRjdXRCaW5kaW5nU2VydmljZSBpbXBsZW1lbnRzIElTaG9ydGN1dEJpbmRpbmdTZXJ2aWNlIHtcclxuICAgICAgICBwcml2YXRlIF9sb2c6IG5nLklMb2dTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX2RlZmF1bHRPcHRpb246IFNob3J0Y3V0T3B0aW9ucztcclxuICAgICAgICBwcml2YXRlIF9zaG9ydGN1dHM6IElLZXlib2FyZFNob3J0Y3V0cyA9IHt9O1xyXG5cclxuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgICRsb2c6IG5nLklMb2dTZXJ2aWNlLFxyXG4gICAgICAgICAgICBvcHRpb246IFNob3J0Y3V0T3B0aW9uc1xyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgICBcIm5nSW5qZWN0XCI7XHJcbiAgICAgICAgICAgIHRoaXMuX2xvZyA9ICRsb2c7XHJcbiAgICAgICAgICAgIHRoaXMuX2RlZmF1bHRPcHRpb24gPSBvcHRpb24gPyBfLmRlZmF1bHRzKG9wdGlvbiwgdGhpcy5nZXREZWZhdWx0T3B0aW9uKCkpIDogdGhpcy5nZXREZWZhdWx0T3B0aW9uKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIGdldERlZmF1bHRPcHRpb24oKTogU2hvcnRjdXRPcHRpb25zIHtcclxuICAgICAgICAgICAgbGV0IGRlZmF1bHRPcHRpb246IFNob3J0Y3V0T3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgIFR5cGU6IEtleWJvYXJkRXZlbnQuS2V5ZG93bixcclxuICAgICAgICAgICAgICAgIFByb3BhZ2F0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBEaXNhYmxlSW5JbnB1dDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBUYXJnZXQ6IGRvY3VtZW50LFxyXG4gICAgICAgICAgICAgICAgS2V5Y29kZTogbnVsbFxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRPcHRpb247XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgZ2V0IHNob3J0Y3V0cygpOiBJS2V5Ym9hcmRTaG9ydGN1dHMge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2hvcnRjdXRzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIGFkZChzaG9ydGN1dDogc3RyaW5nLCBjYWxsYmFjazogKGU6IEpRdWVyeUV2ZW50T2JqZWN0KSA9PiB2b2lkLCBvcHRpb246IFNob3J0Y3V0T3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgICAgICB0aGlzLnJlbW92ZShzaG9ydGN1dCk7XHJcbiAgICAgICAgICAgIGxldCBzaG9ydGN1dE9wdGlvbjogU2hvcnRjdXRPcHRpb25zID0gb3B0aW9uID8gXy5kZWZhdWx0cyhvcHRpb24sIHRoaXMuX2RlZmF1bHRPcHRpb24pIDogdGhpcy5fZGVmYXVsdE9wdGlvbjtcclxuICAgICAgICAgICAgbGV0IHNob3J0Y3V0Q29tYmluYXRpb246IHN0cmluZyA9IHNob3J0Y3V0LnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgIGxldCBlbGVtZW50ID0gc2hvcnRjdXRPcHRpb24uVGFyZ2V0O1xyXG5cclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzaG9ydGN1dE9wdGlvbi5UYXJnZXQgPT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzaG9ydGN1dE9wdGlvbi5UYXJnZXQpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IHNob3J0Y3V0T3B0aW9uLlRhcmdldDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2cuZXJyb3IoJ1JlZ2lzdGVyIHNob3J0Y3V0OiBlbGVtZW50IHVuZGVudGlmaWVkIScpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoIXNob3J0Y3V0Q29tYmluYXRpb24pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xvZy5lcnJvcignUmVnaXN0ZXIgc2hvcnRjdXQ6IHNob3J0Y3V0IGNvbWJpbmF0aW9uIHVuZGVudGlmaWVkIScpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoIWNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2cuZXJyb3IoJ1JlZ2lzdGVyIHNob3J0Y3V0OiBzaG9yY3V0IGNhbGxiYWNrIHVuZGVudGlmaWVkIScpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgbmV3S2V5Ym9hcmRTaG9ydGN1dCA9IG5ldyBTaG9ydGN1dChlbGVtZW50LCBzaG9ydGN1dENvbWJpbmF0aW9uLCBzaG9ydGN1dE9wdGlvbiwgY2FsbGJhY2spO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fc2hvcnRjdXRzW3Nob3J0Y3V0Q29tYmluYXRpb25dID0gbmV3S2V5Ym9hcmRTaG9ydGN1dDtcclxuXHJcbiAgICAgICAgICAgIC8vQXR0YWNoIHRoZSBmdW5jdGlvbiB3aXRoIHRoZSBldmVudFxyXG4gICAgICAgICAgICBpZiAoZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKSB7XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoc2hvcnRjdXRPcHRpb24uVHlwZSwgbmV3S2V5Ym9hcmRTaG9ydGN1dC5ldmVudENhbGxiYWNrLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC5hdHRhY2hFdmVudCkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5hdHRhY2hFdmVudCgnb24nICsgc2hvcnRjdXRPcHRpb24uVHlwZSwgbmV3S2V5Ym9hcmRTaG9ydGN1dC5ldmVudENhbGxiYWNrKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQub24oc2hvcnRjdXRPcHRpb24uVHlwZSwgbmV3S2V5Ym9hcmRTaG9ydGN1dC5ldmVudENhbGxiYWNrKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHJlbW92ZShzaG9yY3V0OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICAgICAgbGV0IHNob3J0Y3V0Q29tYmluYXRpb24gPSBzaG9yY3V0LnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgIGxldCBiaW5kaW5nOiBTaG9ydGN1dCA9IHRoaXMuX3Nob3J0Y3V0c1tzaG9ydGN1dENvbWJpbmF0aW9uXTtcclxuXHJcbiAgICAgICAgICAgIGRlbGV0ZSh0aGlzLl9zaG9ydGN1dHNbc2hvcnRjdXRDb21iaW5hdGlvbl0pXHJcbiAgICAgICAgICAgIGlmICghYmluZGluZykgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgbGV0IHR5cGUgPSBiaW5kaW5nLmV2ZW50O1xyXG4gICAgICAgICAgICBsZXQgZWxlbWVudCA9IGJpbmRpbmcudGFyZ2V0O1xyXG4gICAgICAgICAgICBsZXQgY2FsbGJhY2sgPSBiaW5kaW5nLmV2ZW50Q2FsbGJhY2s7XHJcblxyXG4gICAgICAgICAgICBpZiAoZWxlbWVudC5kZXRhY2hFdmVudCkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5kZXRhY2hFdmVudCgnb24nICsgdHlwZSwgY2FsbGJhY2spO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGNhbGxiYWNrLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBlbGVtZW50WydvbicgKyB0eXBlXSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5vZmYodHlwZSwgY2FsbGJhY2spO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNsYXNzIFNob3J0Y3V0QmluZGluZ1Byb3ZpZGVyIGltcGxlbWVudHMgSVNob3J0Y3V0QmluZGluZ1Byb3ZpZGVyIHtcclxuICAgICAgICBwcml2YXRlIF9zZXJ2aWNlOiBTaG9ydGN1dEJpbmRpbmdTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX29wdGlvbjogU2hvcnRjdXRPcHRpb25zO1xyXG5cclxuICAgICAgICBwdWJsaWMgZ2V0IG9wdGlvbigpOiBTaG9ydGN1dE9wdGlvbnMge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fb3B0aW9uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHNldCBvcHRpb24odmFsdWU6IFNob3J0Y3V0T3B0aW9ucykge1xyXG4gICAgICAgICAgICB0aGlzLl9vcHRpb24gPSB2YWx1ZSB8fCBuZXcgU2hvcnRjdXRPcHRpb25zKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgJGdldChcclxuICAgICAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2VcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NlcnZpY2UgPSBuZXcgU2hvcnRjdXRCaW5kaW5nU2VydmljZSgkbG9nLCB0aGlzLl9vcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NlcnZpY2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCdwaXBTaG9ydGN1dHMnKVxyXG4gICAgICAgIC5wcm92aWRlcigncGlwU2hvcnRjdXRCaW5kaW5nJywgU2hvcnRjdXRCaW5kaW5nUHJvdmlkZXIpO1xyXG59IiwiaW1wb3J0IHsgU2hvcnRjdXRPcHRpb25zIH0gZnJvbSBcIi4vU2hvcnRjdXRcIjtcclxuaW1wb3J0IHsgSVNob3J0Y3V0QmluZGluZ1NlcnZpY2UgfSBmcm9tIFwiLi9JU2hvcnRjdXRCaW5kaW5nU2VydmljZVwiO1xyXG5cclxuaW50ZXJmYWNlIFNob3J0Y3V0QXR0cmlidXRlcyBleHRlbmRzIG5nLklBdHRyaWJ1dGVzIHtcclxuICAgIHBpcFNob3J0Y3V0QWN0aW9uOiBhbnk7XHJcbiAgICBwaXBTaG9ydGN1dE5hbWU6IGFueTtcclxuICAgIHBpcFNob3JjdXRPcHRpb25zOiBTaG9ydGN1dE9wdGlvbnM7XHJcbn1cclxuXHJcbmNsYXNzIFNob3J0Y3V0Q29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb250cm9sbGVyICB7XHJcbiAgICBwcml2YXRlIGFjdGlvblNob3J0Y3V0czogRnVuY3Rpb247XHJcbiAgICBwcml2YXRlIG5hbWVTaG9ydGN1dHM6IHN0cmluZztcclxuICAgIHByaXZhdGUgb3B0aW9uczogU2hvcnRjdXRPcHRpb25zO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgICAgJGF0dHJzOiBTaG9ydGN1dEF0dHJpYnV0ZXMsXHJcbiAgICAgICAgJHNjb3BlOiBuZy5JU2NvcGUsXHJcbiAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgJHBhcnNlOiBuZy5JUGFyc2VTZXJ2aWNlLFxyXG4gICAgICAgIHBpcFNob3J0Y3V0QmluZGluZzogSVNob3J0Y3V0QmluZGluZ1NlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgaWYgKCRhdHRycy5waXBTaG9ydGN1dEFjdGlvbikge1xyXG4gICAgICAgICAgICB0aGlzLmFjdGlvblNob3J0Y3V0cyA9ICRwYXJzZSgkYXR0cnMucGlwU2hvcnRjdXRBY3Rpb24pO1xyXG4gICAgICAgICAgICAvLyB0aGlzLmFjdGlvblNob3J0Y3V0cygkc2NvcGUsIHskZXZlbnQ6IHt9fSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJGxvZy5lcnJvcignU2hvcnRjdXQgYWN0aW9uIGRvZXMgbm90IHNldC4nKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCRhdHRycy5waXBTaG9ydGN1dE5hbWUgJiYgXy5pc1N0cmluZygkYXR0cnMucGlwU2hvcnRjdXROYW1lKSkge1xyXG4gICAgICAgICAgICB0aGlzLm5hbWVTaG9ydGN1dHMgPSAkYXR0cnMucGlwU2hvcnRjdXROYW1lO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRsb2cuZXJyb3IoJ1Nob3J0Y3V0IG5hbWUgZG9lcyBub3Qgc2V0LicpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSAkYXR0cnMucGlwU2hvcmN1dE9wdGlvbnMgPyA8U2hvcnRjdXRPcHRpb25zPiRhdHRycy5waXBTaG9yY3V0T3B0aW9ucyA6IDxTaG9ydGN1dE9wdGlvbnM+e307XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLlRhcmdldCA9ICRlbGVtZW50O1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFJlZ2lzdHJhdGlvbiBvZiBrZXlib3JkIHNob3J0Y3V0c1xyXG4gICAgICAgIHBpcFNob3J0Y3V0QmluZGluZy5hZGQodGhpcy5uYW1lU2hvcnRjdXRzLCAoZT86IGFueSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFjdGlvblNob3J0Y3V0cygkc2NvcGUsIHskZXZlbnQ6IHsnZSc6IGV9fSk7ICAgICAgICAgIFxyXG4gICAgICAgIH0sIHRoaXMub3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBrZXlwcmVzc1Nob3J0Y3V0KGFjdGlvbikge1xyXG4gICAgICAgIHRoaXMuYWN0aW9uU2hvcnRjdXRzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljICRvbkluaXQoKSB7fVxyXG59XHJcblxyXG4vLyBQcmV2ZW50IGp1bmsgZnJvbSBnb2luZyBpbnRvIHR5cGVzY3JpcHQgZGVmaW5pdGlvbnNcclxue1xyXG4gICAgY29uc3Qgc2hvcnRjdXRzRGlyZWN0aXZlID0gZnVuY3Rpb24oKTogbmcuSURpcmVjdGl2ZSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgICAgICAgICAgc2NvcGU6IGZhbHNlLCAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBTaG9ydGN1dENvbnRyb2xsZXJcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCdwaXBTaG9ydGN1dHMnKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcFNob3J0Y3V0Jywgc2hvcnRjdXRzRGlyZWN0aXZlKTtcclxufSIsImltcG9ydCB7IElTaG9ydGN1dEJpbmRpbmdTZXJ2aWNlIH0gZnJvbSBcIi4vSVNob3J0Y3V0QmluZGluZ1NlcnZpY2VcIlxyXG5pbXBvcnQgeyBTaG9ydGN1dCwgU2hvcnRjdXRPcHRpb25zLCBLZXlib2FyZEV2ZW50IH0gZnJvbSBcIi4vU2hvcnRjdXRcIjtcclxuaW1wb3J0IHsgU2hvcnRjdXRzQ29uZmlnLCBTaG9ydGN1dEl0ZW0sIElTaG9ydGN1dHNTZXJ2aWNlLCBJU2hvcnRjdXRzUHJvdmlkZXIgfSBmcm9tICcuL0lTaG9ydGN1dHNTZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBsZXQgU2hvcnRjdXRzQ2hhbmdlZEV2ZW50ID0gJ3BpcFNob3J0Y3V0c0NoYW5nZWQnO1xyXG5cclxuY2xhc3MgU2hvcnRjdXRzU2VydmljZSBpbXBsZW1lbnRzIElTaG9ydGN1dHNTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgX29sZENvbmZpZzogU2hvcnRjdXRzQ29uZmlnO1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBTaG9ydGN1dHNDb25maWc7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIGNvbmZpZzogU2hvcnRjdXRzQ29uZmlnLFxyXG4gICAgICAgIHByaXZhdGUgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSAkd2luZG93OiBuZy5JV2luZG93U2VydmljZSwgXHJcbiAgICAgICAgcHJpdmF0ZSAkbG9jYXRpb246IG5nLklMb2NhdGlvblNlcnZpY2UsIFxyXG4gICAgICAgIHByaXZhdGUgJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBwaXBTaG9ydGN1dEJpbmRpbmc6IElTaG9ydGN1dEJpbmRpbmdTZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuX29sZENvbmZpZyA9IF8uY2xvbmVEZWVwKHRoaXMuX2NvbmZpZyk7XHJcblxyXG4gICAgICAgIC8vIEFkZCBzaG9ydGN1dHNcclxuICAgICAgICB0aGlzLmFkZFNob3J0Y3V0cyh0aGlzLl9jb25maWcuZ2xvYmFsU2hvcnRjdXRzKTtcclxuICAgICAgICB0aGlzLmFkZFNob3J0Y3V0cyh0aGlzLl9jb25maWcubG9jYWxTaG9ydGN1dHMpOyAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgLy8gRGVzY3JpYmUgcHJpdmF0ZSBmdW5jdGlvbnNcclxuICAgIHByaXZhdGUgc2VuZENoYW5nZUV2ZW50KCkge1xyXG4gICAgICAgIC8vIFJlbW92ZSBzaG9ydGN1dHNcclxuICAgICAgICB0aGlzLnJlbW92ZVNob3J0Y3V0cyh0aGlzLl9vbGRDb25maWcuZ2xvYmFsU2hvcnRjdXRzKTtcclxuICAgICAgICB0aGlzLnJlbW92ZVNob3J0Y3V0cyh0aGlzLl9vbGRDb25maWcubG9jYWxTaG9ydGN1dHMpO1xyXG5cclxuICAgICAgICAvLyBBZGQgc2hvcnRjdXRzXHJcbiAgICAgICAgdGhpcy5hZGRTaG9ydGN1dHModGhpcy5jb25maWcuZ2xvYmFsU2hvcnRjdXRzKTtcclxuICAgICAgICB0aGlzLmFkZFNob3J0Y3V0cyh0aGlzLmNvbmZpZy5sb2NhbFNob3J0Y3V0cyk7XHJcblxyXG4gICAgICAgIHRoaXMuJHJvb3RTY29wZS4kZW1pdChTaG9ydGN1dHNDaGFuZ2VkRXZlbnQsIHRoaXMuY29uZmlnKTtcclxuXHJcbiAgICAgICAgLy8gU2F2ZSBjdXJyZW50IGNvbmZpZyB0byBvbGRDb25maWdcclxuICAgICAgICB0aGlzLl9vbGRDb25maWcgPSBfLmNsb25lRGVlcCh0aGlzLmNvbmZpZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZW1vdmVTaG9ydGN1dHMoY29sbGVjdGlvbjogU2hvcnRjdXRJdGVtW10pOiB2b2lkIHtcclxuICAgICAgICBfLmVhY2goY29sbGVjdGlvbiwgKGspID0+IHtcclxuICAgICAgICAgICAgdGhpcy5waXBTaG9ydGN1dEJpbmRpbmcucmVtb3ZlKGsuc2hvcnRjdXQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUga2V5cHJlc3NTaG9ydGN1dChpdGVtOiBTaG9ydGN1dEl0ZW0sIGV2ZW50OiBKUXVlcnlFdmVudE9iamVjdCkge1xyXG4gICAgICAgIGlmIChpdGVtLmFjY2VzcyAmJiBfLmlzRnVuY3Rpb24oaXRlbS5hY2Nlc3MpKSB7XHJcbiAgICAgICAgICAgIGlmICghaXRlbS5hY2Nlc3MoZXZlbnQpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IFxyXG5cclxuICAgICAgICBpZiAoaXRlbS5rZXlwcmVzcykge1xyXG4gICAgICAgICAgICBpdGVtLmtleXByZXNzKGV2ZW50KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGl0ZW0uaHJlZikge1xyXG4gICAgICAgICAgICB0aGlzLiR3aW5kb3cubG9jYXRpb24uaHJlZiA9IGl0ZW0uaHJlZjtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGl0ZW0udXJsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJGxvY2F0aW9uLnVybChpdGVtLnVybCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChpdGVtLnN0YXRlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLiRpbmplY3Rvci5oYXMoJyRzdGF0ZScpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgJHN0YXRlID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCckc3RhdGUnKTtcclxuICAgICAgICAgICAgICAgICRzdGF0ZVsnZ28nXShpdGVtLnN0YXRlLCBpdGVtLnN0YXRlUGFyYW1zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoaXRlbS5ldmVudCkge1xyXG4gICAgICAgICAgICB0aGlzLiRyb290U2NvcGUuJGJyb2FkY2FzdChpdGVtLmV2ZW50KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBPdGhlcndpc2UgcmFpc2Ugbm90aWZpY2F0aW9uXHJcbiAgICAgICAgICAgIHRoaXMuJHJvb3RTY29wZS4kYnJvYWRjYXN0KCdwaXBTaG9ydGN1dEtleXByZXNzJywgaXRlbS5zaG9ydGN1dCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYWRkU2hvcnRjdXRzKGNvbGxlY3Rpb246IFNob3J0Y3V0SXRlbVtdKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGdlbmVyYWxPcHRpb25zOiBTaG9ydGN1dE9wdGlvbnMgPSB0aGlzLmNvbmZpZy5kZWZhdWx0T3B0aW9ucyA/IHRoaXMuY29uZmlnLmRlZmF1bHRPcHRpb25zIDogPFNob3J0Y3V0T3B0aW9ucz57fTtcclxuICAgICAgICBcclxuICAgICAgICBfLmVhY2goY29sbGVjdGlvbiwgKGspID0+IHtcclxuICAgICAgICAgICAgbGV0IG9wdGlvbjogU2hvcnRjdXRPcHRpb25zID0gay5vcHRpb25zID8gay5vcHRpb25zIDogZ2VuZXJhbE9wdGlvbnM7XHJcbiAgICAgICAgICAgIGxldCB0YXJnZXQ6IGFueTtcclxuXHJcbiAgICAgICAgICAgIHRhcmdldCA9IGsudGFyZ2V0ID8gay50YXJnZXQgOiBrLnRhcmdldElkO1xyXG4gICAgICAgICAgICBpZiAodGFyZ2V0KSB7IFxyXG4gICAgICAgICAgICAgICAgb3B0aW9uLlRhcmdldCA9IHRhcmdldDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBSZWdpc3RyYXRpb24gb2Yga2V5Ym9hcmQgc2hvcnRjdXRcclxuICAgICAgICAgICAgdGhpcy5waXBTaG9ydGN1dEJpbmRpbmcuYWRkKGsuc2hvcnRjdXQsIChlPzogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmtleXByZXNzU2hvcnRjdXQoaywgZSk7ICAgICAgICBcclxuICAgICAgICAgICAgfSwgb3B0aW9uKTsgICAgICAgICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIERlc2NyaWJlIHB1YmxpYyBmdW5jdGlvbnMgXHJcbiAgICBwdWJsaWMgZ2V0IGNvbmZpZygpOiBTaG9ydGN1dHNDb25maWcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBkZWZhdWx0T3B0aW9ucygpOiBTaG9ydGN1dE9wdGlvbnMge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuZGVmYXVsdE9wdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBkZWZhdWx0T3B0aW9ucyh2YWx1ZTogU2hvcnRjdXRPcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmRlZmF1bHRPcHRpb25zID0gdmFsdWUgfHwgbnVsbDtcclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgZ2xvYmFsU2hvcnRjdXRzKCk6IFNob3J0Y3V0SXRlbVtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmdsb2JhbFNob3J0Y3V0cztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGdsb2JhbFNob3J0Y3V0cyh2YWx1ZTogU2hvcnRjdXRJdGVtW10pIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuZ2xvYmFsU2hvcnRjdXRzID0gdmFsdWUgfHwgW107XHJcbiAgICAgICAgdGhpcy5zZW5kQ2hhbmdlRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGxvY2FsU2hvcnRjdXRzKCk6IFNob3J0Y3V0SXRlbVtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmxvY2FsU2hvcnRjdXRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgbG9jYWxTaG9ydGN1dHModmFsdWU6IFNob3J0Y3V0SXRlbVtdKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmxvY2FsU2hvcnRjdXRzID0gdmFsdWUgfHwgW107XHJcbiAgICAgICAgdGhpcy5zZW5kQ2hhbmdlRXZlbnQoKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgU2hvcnRjdXRzUHJvdmlkZXIgaW1wbGVtZW50cyBJU2hvcnRjdXRzUHJvdmlkZXIge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBTaG9ydGN1dHNDb25maWcgPSBuZXcgU2hvcnRjdXRzQ29uZmlnKCk7XHJcbiAgICBwcml2YXRlIF9zZXJ2aWNlOiBTaG9ydGN1dHNTZXJ2aWNlO1xyXG5cclxuICAgIHB1YmxpYyBnZXQgY29uZmlnKCk6IFNob3J0Y3V0c0NvbmZpZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGNvbmZpZyh2YWx1ZTogU2hvcnRjdXRzQ29uZmlnKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gdmFsdWUgfHwgbmV3IFNob3J0Y3V0c0NvbmZpZygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgZGVmYXVsdE9wdGlvbnMoKTogU2hvcnRjdXRPcHRpb25zIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmRlZmF1bHRPcHRpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgZGVmYXVsdE9wdGlvbnModmFsdWU6IFNob3J0Y3V0T3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5kZWZhdWx0T3B0aW9ucyA9IHZhbHVlIHx8IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBnbG9iYWxTaG9ydGN1dHMoKTogU2hvcnRjdXRJdGVtW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuZ2xvYmFsU2hvcnRjdXRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgZ2xvYmFsU2hvcnRjdXRzKHZhbHVlOiBTaG9ydGN1dEl0ZW1bXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5nbG9iYWxTaG9ydGN1dHMgPSB2YWx1ZSB8fCBbXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJGdldChcclxuICAgICAgICAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSwgXHJcbiAgICAgICAgJHdpbmRvdzogbmcuSVdpbmRvd1NlcnZpY2UsIFxyXG4gICAgICAgICRsb2NhdGlvbjogbmcuSUxvY2F0aW9uU2VydmljZSwgXHJcbiAgICAgICAgJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UsXHJcbiAgICAgICAgcGlwU2hvcnRjdXRCaW5kaW5nOiBJU2hvcnRjdXRCaW5kaW5nU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5fc2VydmljZSA9PSBudWxsKVxyXG4gICAgICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IFNob3J0Y3V0c1NlcnZpY2UodGhpcy5fY29uZmlnLCAkcm9vdFNjb3BlLCAkd2luZG93LCAkbG9jYXRpb24sICRpbmplY3RvciwgcGlwU2hvcnRjdXRCaW5kaW5nKTtcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxufVxyXG5cclxuYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwU2hvcnRjdXRzJylcclxuICAgIC5wcm92aWRlcigncGlwU2hvcnRjdXRzJywgU2hvcnRjdXRzUHJvdmlkZXIpO1xyXG5cclxuIiwiYW5ndWxhci5tb2R1bGUoJ3BpcFNob3J0Y3V0cycsIFsnbmdNYXRlcmlhbCcsICd1aS5yb3V0ZXInXSk7XHJcblxyXG5pbXBvcnQgJy4vU2hvcnRjdXRCaW5kaW5nU2VydmljZSc7XHJcbmltcG9ydCAnLi9TaG9ydGN1dHNTZXJ2aWNlJztcclxuaW1wb3J0ICcuL1Nob3J0Y3V0RGlyZWN0aXZlJztcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vSVNob3J0Y3V0c1NlcnZpY2UnO1xyXG5leHBvcnQgKiBmcm9tICcuL0lTaG9ydGN1dEJpbmRpbmdTZXJ2aWNlJztcclxuZXhwb3J0ICogZnJvbSAnLi9TaG9ydGN1dHNTZXJ2aWNlJztcclxuZXhwb3J0ICogZnJvbSAnLi9TaG9ydGN1dEJpbmRpbmdTZXJ2aWNlJzsiLCJ7XHJcbiAgICBpbnRlcmZhY2UgVW5zYXZlZENoYW5nZXNTY29wZSBleHRlbmRzIG5nLklTY29wZSB7XHJcbiAgICAgICAgdW5zYXZlZENoYW5nZXNBdmFpbGFibGU6IEZ1bmN0aW9uO1xyXG4gICAgICAgIHVuc2F2ZWRDaGFuZ2VzTWVzc2FnZTogc3RyaW5nO1xyXG4gICAgICAgIGNhbmNlbExlYXZlOiBGdW5jdGlvbjtcclxuICAgICAgICBhZnRlckxlYXZlOiBGdW5jdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBjbGFzcyBVbnNhdmVkQ2hhbmdlc0xpbmsge1xyXG4gICAgICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICAgICAkc2NvcGU6IFVuc2F2ZWRDaGFuZ2VzU2NvcGUsXHJcbiAgICAgICAgICAgICR3aW5kb3c6IG5nLklXaW5kb3dTZXJ2aWNlXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICR3aW5kb3cub25iZWZvcmV1bmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLnVuc2F2ZWRDaGFuZ2VzQXZhaWxhYmxlKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHNjb3BlLnVuc2F2ZWRDaGFuZ2VzTWVzc2FnZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHVuYmluZEZ1bmMgPSAkc2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VTdGFydCcsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCRzY29wZS51bnNhdmVkQ2hhbmdlc0F2YWlsYWJsZSgpICYmICEkd2luZG93LmNvbmZpcm0oJHNjb3BlLnVuc2F2ZWRDaGFuZ2VzTWVzc2FnZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBfLmlzRnVuY3Rpb24oJHNjb3BlLmNhbmNlbExlYXZlKSAmJiAkc2NvcGUuY2FuY2VsTGVhdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBfLmlzRnVuY3Rpb24oJHNjb3BlLmFmdGVyTGVhdmUpICYmICRzY29wZS5hZnRlckxlYXZlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAkd2luZG93Lm9uYmVmb3JldW5sb2FkID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIHVuYmluZEZ1bmMoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IFVuc2F2ZWRDaGFuZ2VzID0gZnVuY3Rpb24gKCR3aW5kb3c6IG5nLklXaW5kb3dTZXJ2aWNlKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdBRScsXHJcbiAgICAgICAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgICAgICAgICB1bnNhdmVkQ2hhbmdlc0F2YWlsYWJsZTogJyZwaXBVbnNhdmVkQ2hhbmdlc0F2YWlsYWJsZScsXHJcbiAgICAgICAgICAgICAgICB1bnNhdmVkQ2hhbmdlc01lc3NhZ2U6ICdAcGlwVW5zYXZlZENoYW5nZXNNZXNzYWdlJyxcclxuICAgICAgICAgICAgICAgIGFmdGVyTGVhdmU6ICcmcGlwVW5zYXZlZENoYW5nZXNBZnRlckxlYXZlJyxcclxuICAgICAgICAgICAgICAgIGNhbmNlbExlYXZlOiAnJnBpcFVuc2F2ZWRDaGFuZ2VzQ2FuY2VsTGVhdmUnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uICgkc2NvcGU6IFVuc2F2ZWRDaGFuZ2VzU2NvcGUpIHtcclxuICAgICAgICAgICAgICAgIG5ldyBVbnNhdmVkQ2hhbmdlc0xpbmsoJHNjb3BlLCAkd2luZG93KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoXCJwaXBVbnNhdmVkQ2hhbmdlc1wiLCBbXSlcclxuICAgICAgICAuZGlyZWN0aXZlKFwicGlwVW5zYXZlZENoYW5nZXNcIiwgVW5zYXZlZENoYW5nZXMpO1xyXG59Il19"}