{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/behaviors.ts","src/draggable/draggable.ts","src/focused/focused.ts","src/infinite_scroll/infiniteScroll.ts","src/keyboard_shortcuts/KeyboardShortcut.ts","src/keyboard_shortcuts/ShorcutsRegisterService.ts","src/keyboard_shortcuts/ShortcutDirective.ts","src/keyboard_shortcuts/ShortcutsService.ts","src/keyboard_shortcuts/index.ts","src/selected/selected.ts","src/unsaved_changes/unsavedChanges.ts"],"names":[],"mappings":"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","file":"pip-webui-behaviors.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿angular.module('pipBehaviors', [\r\n    'pipFocused',\r\n    'pipSelected',\r\n    'pipInfiniteScroll',\r\n    'pipUnsavedChanges',\r\n    'pipDraggable',\r\n    'pipShortcuts'\r\n]);","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n{\r\n    var thisModule = angular.module(\"pipDraggable\", []);\r\n\r\n    thisModule.service('pipDraggable', function () {\r\n\r\n        var scope = this;\r\n        scope.inputEvent = function (event) {\r\n            if (angular.isDefined(event.touches)) {\r\n                return event.touches[0];\r\n            }\r\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n                return event.originalEvent.touches[0];\r\n            }\r\n            return event;\r\n        };\r\n\r\n    });\r\n\r\n    thisModule.directive('pipDrag',\r\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\r\n            return {\r\n\r\n                restrict: 'A',\r\n                link: function (scope: any, element, attrs: any) {\r\n                    scope.value = attrs.ngDrag;\r\n                    var LONG_PRESS = 50; // 50ms for longpress\r\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\r\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n                    var _pressEvents = 'touchstart mousedown';\r\n                    var _moveEvents = 'touchmove mousemove';\r\n                    var _releaseEvents = 'touchend mouseup';\r\n                    var _dragHandle;\r\n\r\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n                    var _myid = scope.$id;\r\n                    var _data = null;\r\n\r\n                    var _dragOffset = null;\r\n\r\n                    var _dragEnabled = false;\r\n\r\n                    var _pressTimer = null;\r\n\r\n                    var _elementStyle: any = {};\r\n\r\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\r\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\r\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\r\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\r\n\r\n                    var getDragData = $parse(attrs.pipDragData);\r\n                    var\r\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\r\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\r\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\r\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\r\n                        scrollParent = false,\r\n\r\n                        scrollContainer = angular.element(window),\r\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\r\n\r\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n                    var _deregisterRootMoveListener = angular.noop;\r\n\r\n                    initialize();\r\n\r\n                    return;\r\n\r\n                    //-----------------------------------\r\n\r\n                    function initialize() {\r\n                        element.attr('pip-draggable', 'false'); // prevent native drag\r\n                        // check to see if drag handle(s) was specified\r\n                        // if querySelectorAll is available, we use this instead of find\r\n                        // as JQLite find is limited to tagnames\r\n                        let dragHandles: any;\r\n                        if (element[0].querySelectorAll) {\r\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\r\n                        } else {\r\n                            dragHandles = element.find('[pip-drag-handle]');\r\n                        }\r\n                        if (dragHandles.length) {\r\n                            _dragHandle = dragHandles;\r\n                        }\r\n                        toggleListeners(true);\r\n\r\n                        // Initialize scroll container\r\n                        if (scrollParent) {\r\n                            scrollContainer = angular.element(element.parent());\r\n                        } else if (attrs.pipScrollContainer) {\r\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\r\n                        } else {\r\n                            scrollContainer = angular.element(window);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    function toggleListeners(enable) {\r\n                        if (!enable)return;\r\n                        // add listeners.\r\n\r\n                        scope.$on('$destroy', onDestroy);\r\n                        scope.$watch(attrs.pipDrag, onEnableChange);\r\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\r\n                        // wire up touch events\r\n                        if (_dragHandle) {\r\n                            // handle(s) specified, use those to initiate drag\r\n                            _dragHandle.on(_pressEvents, onpress);\r\n                        } else {\r\n                            // no handle(s) specified, use the element as the handle\r\n                            element.on(_pressEvents, onpress);\r\n                        }\r\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\r\n                            element.on('mousedown', function () {\r\n                                return false;\r\n                            }); // prevent native drag for images\r\n                        }\r\n                    }\r\n                    \r\n                    function onDestroy(enable) {\r\n                        toggleListeners(false);\r\n                    }\r\n\r\n                    function onEnableChange(newVal, oldVal) {\r\n                        _dragEnabled = (newVal);\r\n                    }\r\n\r\n                    function onCenterAnchor(newVal, oldVal) {\r\n                        if (angular.isDefined(newVal))\r\n                            _centerAnchor = (newVal || 'true');\r\n                    }\r\n\r\n                    function isClickableElement(evt) {\r\n                        return (\r\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n                        );\r\n                    }\r\n\r\n                    /*\r\n                     * When the element is clicked start the drag behaviour\r\n                     * On touch devices as a small delay so as not to prevent native window scrolling\r\n                     */\r\n                    function onpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n\r\n                        if (isClickableElement(evt)) {\r\n                            return;\r\n                        }\r\n\r\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                            // Do not start dragging on right-click\r\n                            return;\r\n                        }\r\n\r\n                        saveElementStyles();\r\n\r\n                        if (_hasTouch) {\r\n                            cancelPress();\r\n                            _pressTimer = setTimeout(function () {\r\n                                cancelPress();\r\n                                onlongpress(evt);\r\n                            }, LONG_PRESS);\r\n                            $document.on(_moveEvents, cancelPress);\r\n                            $document.on(_releaseEvents, cancelPress);\r\n                        } else {\r\n                            onlongpress(evt);\r\n                        }\r\n\r\n                    }\r\n\r\n                    function saveElementStyles() {\r\n                        _elementStyle.left = element.css('css') || 0;\r\n                        _elementStyle.top = element.css('top') || 0;\r\n                        _elementStyle.position = element.css('position');\r\n                        _elementStyle.width = element.css('width');    \r\n                    }\r\n\r\n                    function cancelPress() {\r\n                        clearTimeout(_pressTimer);\r\n                        $document.off(_moveEvents, cancelPress);\r\n                        $document.off(_releaseEvents, cancelPress);\r\n                    }\r\n\r\n                    function onlongpress(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        offset = element[0].getBoundingClientRect();\r\n                        if (allowTransform)\r\n                            _dragOffset = offset;\r\n                        else {\r\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\r\n                        }\r\n\r\n\r\n                        (<any>element).centerX = element[0].offsetWidth / 2;\r\n                        (<any>element).centerY = element[0].offsetHeight / 2;\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n                        _mrx = _mx - offset.left;\r\n                        _mry = _my - offset.top;\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - (<any>element).centerX - $window.pageXOffset;\r\n                            _ty = _my - (<any>element).centerY - $window.pageYOffset;\r\n                        } else {\r\n                            _tx = _mx - _mrx - $window.pageXOffset;\r\n                            _ty = _my - _mry - $window.pageYOffset;\r\n                        }\r\n\r\n                        $document.on(_moveEvents, onmove);\r\n                        $document.on(_releaseEvents, onrelease);\r\n                        // This event is used to receive manually triggered mouse move events\r\n                        // jqLite unfortunately only supports triggerHandler(...)\r\n                        // See http://api.jquery.com/triggerHandler/\r\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\r\n                            onmove(origEvent);\r\n                        });\r\n                    }\r\n\r\n                    function onmove(evt) {\r\n                        if (!_dragEnabled)return;\r\n                        evt.preventDefault();\r\n\r\n                        if (!element.hasClass('pip-dragging')) {\r\n                            _data = getDragData(scope);\r\n                            element.addClass('pip-dragging');\r\n                            $rootScope.$broadcast('draggable:start', {\r\n                                x: _mx,\r\n                                y: _my,\r\n                                tx: _tx,\r\n                                ty: _ty,\r\n                                event: evt,\r\n                                element: element,\r\n                                data: _data\r\n                            });\r\n\r\n                            if (onDragStartCallback) {\r\n                                scope.$apply(function () {\r\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        _mx = pipDraggable.inputEvent(evt).pageX;\r\n                        _my = pipDraggable.inputEvent(evt).pageY;\r\n\r\n                        if (horizontalScroll || verticalScroll) {\r\n                            dragToScroll();\r\n                        }\r\n\r\n                        if (_centerAnchor) {\r\n                            _tx = _mx - (<any>element).centerX - _dragOffset.left;\r\n                            _ty = _my - (<any>element).centerY - _dragOffset.top;\r\n                        } else {\r\n                            _tx = _mx - _mrx - _dragOffset.left;\r\n                            _ty = _my - _mry - _dragOffset.top;\r\n                        }\r\n\r\n                        moveElement(_tx, _ty);\r\n\r\n                        $rootScope.$broadcast('draggable:move', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            uid: _myid,\r\n                            dragOffset: _dragOffset\r\n                        });\r\n                    }\r\n\r\n                    function onrelease(evt) {\r\n                        if (!_dragEnabled)\r\n                            return;\r\n                        evt.preventDefault();\r\n                        $rootScope.$broadcast('draggable:end', {\r\n                            x: _mx,\r\n                            y: _my,\r\n                            tx: _tx,\r\n                            ty: _ty,\r\n                            event: evt,\r\n                            element: element,\r\n                            data: _data,\r\n                            callback: onDragComplete,\r\n                            uid: _myid\r\n                        });\r\n                        element.removeClass('pip-dragging');\r\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n                        reset();\r\n                        $document.off(_moveEvents, onmove);\r\n                        $document.off(_releaseEvents, onrelease);\r\n\r\n                        if (onDragStopCallback) {\r\n                            scope.$apply(function () {\r\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\r\n                            });\r\n                        }\r\n\r\n                        _deregisterRootMoveListener();\r\n                    }\r\n\r\n                    function onDragComplete(evt) {\r\n                        if (!onDragSuccessCallback)return;\r\n\r\n                        scope.$apply(function () {\r\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\r\n                        });\r\n                    }\r\n\r\n                    function reset() {\r\n                        if (allowTransform)\r\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\r\n                        else {\r\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\r\n                        }\r\n                    }\r\n\r\n                    function moveElement(x, y) {\r\n                        var eWidth = element.css('width');\r\n                        if (allowTransform) {\r\n                            element.css({\r\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                'z-index': 99999,\r\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                            });\r\n                        } else {\r\n                            element.css({\r\n                                'left': x + 'px',\r\n                                'top': y + 'px',\r\n                                'position': 'fixed',\r\n                                'z-index': 100,\r\n                                width: eWidth\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    function dragToScroll() {\r\n                        var scrollX = 0, scrollY = 0,\r\n                            offset = function (element) {\r\n                                return element.offset() || {left: 0, top: 0};\r\n                            };\r\n\r\n                        if (horizontalScroll) {\r\n                            var\r\n                                containerLeft = offset(scrollContainer).left,\r\n                                containerWidth = scrollContainer.innerWidth(),\r\n                                containerRight = containerLeft + containerWidth;\r\n\r\n                            if ((_mx - containerLeft) < activationDistance) {\r\n                                scrollX = -scrollDistance;\r\n                            }\r\n                            else if ((containerRight - _mx) < activationDistance) {\r\n                                scrollX = scrollDistance;\r\n                            }\r\n                        }\r\n\r\n                        if (verticalScroll) {\r\n                            var\r\n                                containerTop = offset(scrollContainer).top,\r\n                                containerHeight = scrollContainer.innerHeight(),\r\n                                containerBottom = containerTop + containerHeight;\r\n\r\n                            if ((_my - containerTop) < activationDistance) {\r\n                                scrollY = -scrollDistance + 30;\r\n                            }\r\n                            else if ((containerBottom - _my) < activationDistance) {\r\n                                scrollY = scrollDistance - 30;\r\n                            }\r\n                        }\r\n                        if (scrollX !== 0 || scrollY !== 0) {\r\n                            var\r\n                                containerScrollLeft = scrollContainer.scrollLeft(),\r\n                                containerScrollTop = scrollContainer.scrollTop();\r\n\r\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    thisModule.directive('pipDrop', \r\n        function ($parse, $timeout, $window, $document, pipDraggable) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                scope.value = attrs.pipDrop;\r\n                scope.isTouching = false;\r\n\r\n                var _lastDropTouch = null;\r\n                var _myid = scope.$id;\r\n                var _dropEnabled = false;\r\n\r\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\r\n                var onDragStartCallback = $parse(attrs.pipDragStart);\r\n                var onDragStopCallback = $parse(attrs.pipDragStop);\r\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\r\n\r\n                initialize();\r\n\r\n                return;\r\n\r\n                //----------------------\r\n\r\n                function initialize() {\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    scope.$watch(attrs.pipDrop, onEnableChange);\r\n                    scope.$on('$destroy', onDestroy);\r\n                    scope.$on('draggable:start', onDragStart);\r\n                    scope.$on('draggable:move', onDragMove);\r\n                    scope.$on('draggable:end', onDragEnd);\r\n                }\r\n\r\n                function onDestroy(enable) {\r\n                    toggleListeners(false);\r\n                }\r\n\r\n                function onEnableChange(newVal, oldVal) {\r\n                    _dropEnabled = newVal;\r\n                }\r\n\r\n                function onDragStart(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragStart) {\r\n                        $timeout(function () {\r\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragMove(evt, obj) {\r\n                    if (!_dropEnabled)return;\r\n                    isTouching(obj.x, obj.y, obj.element);\r\n\r\n                    if (attrs.pipDragMove) {\r\n                        $timeout(function () {\r\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onDragEnd(evt, obj) {\r\n                    // don't listen to drop events if this is the element being dragged\r\n                    // only update the styles and return\r\n                    if (!_dropEnabled || _myid === obj.uid) {\r\n                        updateDragStyles(false, obj.element);\r\n                        return;\r\n                    }\r\n\r\n                    if (isTouching(obj.x, obj.y, obj.element)) {\r\n                        // call the pipDraggable pipDragSuccess element callback\r\n                        if (obj.callback) {\r\n                            obj.callback(obj);\r\n                        }\r\n\r\n                        if (attrs.pipDropSuccess) {\r\n                            $timeout(function () {\r\n                                onDropCallback(scope, {\r\n                                    $data: obj.data,\r\n                                    $event: obj,\r\n                                    $target: scope.$eval(scope.value)\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (attrs.pipDragStop) {\r\n                        $timeout(function () {\r\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\r\n                        });\r\n                    }\r\n\r\n                    updateDragStyles(false, obj.element);\r\n                }\r\n\r\n                function isTouching(mouseX, mouseY, dragElement) {\r\n                    var touching = hitTest(mouseX, mouseY);\r\n                    scope.isTouching = touching;\r\n                    if (touching) {\r\n                        _lastDropTouch = element;\r\n                    }\r\n                    updateDragStyles(touching, dragElement);\r\n                    return touching;\r\n                }\r\n\r\n                function updateDragStyles(touching, dragElement) {\r\n                    if (touching) {\r\n                        element.addClass('pip-drag-enter');\r\n                        dragElement.addClass('pip-drag-over');\r\n                    } else if (_lastDropTouch == element) {\r\n                        _lastDropTouch = null;\r\n                        element.removeClass('pip-drag-enter');\r\n                        dragElement.removeClass('pip-drag-over');\r\n                    }\r\n                };\r\n\r\n                function hitTest(x, y) {\r\n                    var bounds = element[0].getBoundingClientRect();\r\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\r\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\r\n                    return x >= bounds.left\r\n                        && x <= bounds.right\r\n                        && y <= bounds.bottom\r\n                        && y >= bounds.top;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: any, element, attrs: any) {\r\n                initialize();\r\n\r\n                return;\r\n                //---------------------\r\n\r\n                function initialize() {\r\n                    element.attr('pip-draggable', 'false');\r\n                    toggleListeners(true);\r\n                }\r\n\r\n                function toggleListeners(enable) {\r\n                    // remove listeners\r\n                    if (!enable)return;\r\n                    // add listeners.\r\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\r\n                }\r\n\r\n                function absorbEvent_(event) {\r\n                    var e = event.originalEvent;\r\n                    e.preventDefault && e.preventDefault();\r\n                    e.stopPropagation && e.stopPropagation();\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    thisModule.directive('pipCancelDrag', function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attrs) {\r\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n            }\r\n        };\r\n    });\r\n}\r\n\r\n","{\r\n    var thisModule = angular.module(\"pipFocused\", []);\r\n\r\n    thisModule.directive('pipFocused', function ($timeout, $mdConstant, $window) {\r\n        return {\r\n            // restrict: 'EA',\r\n            require: \"?ngModel\",\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var controls, controlsLength,\r\n                    withHidden = $attrs.pipWithHidden,\r\n                    opacityDelta = 0.4,\r\n                    opacityLimit = 0.5,\r\n                    _color,\r\n                    focusedColor = $attrs.pipFocusedColor ? $attrs.pipFocusedColor : null,\r\n                    reInit = $attrs.pipFocusedRebind ? $attrs.pipFocusedRebind : null,\r\n                    focusedTabindex = $attrs.pipFocusedTabindex ? parseInt($attrs.pipFocusedTabindex) || 0 : 0,\r\n                    isOpacity = $attrs.pipFocusedOpacity ? toBoolean($attrs.pipFocusedOpacity) : false;\r\n\r\n                $timeout(init);\r\n                $element.on('keydown', keydownListener);\r\n\r\n                if ($attrs.ngModel) {\r\n                    $scope.$watch($attrs.ngModel, function () {\r\n                        $timeout(init);\r\n                    }, true);\r\n                }\r\n\r\n                if ($attrs.pipFocusedData) {\r\n                    $attrs.$observe('pipFocusedData', function () {\r\n                        $timeout(init);\r\n                    }, true);\r\n                }      \r\n                          \r\n                // Converts value into boolean\r\n                function toBoolean(value) {\r\n                    if (value == null) return false;\r\n                    if (!value) return false;\r\n                    value = value.toString().toLowerCase();\r\n                    return value == '1' || value == 'true';\r\n                };\r\n\r\n                function rgba(color) {\r\n                    if (focusedColor) {\r\n                        return focusedColor;\r\n                    }\r\n\r\n                    var arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\r\n                    if (!arr || arr.length < 3) {\r\n                        return ''\r\n                    }\r\n\r\n                    let red, blue, green, opacity;\r\n\r\n                    opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\r\n                    red = arr[0];\r\n                    blue = arr[1];\r\n                    green = arr[2];\r\n\r\n                    if (opacity < opacityLimit) {\r\n                        opacity += opacityDelta;\r\n                    } else {\r\n                        opacity -= opacityDelta;\r\n                    }\r\n\r\n                    return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\r\n                }\r\n\r\n                function setTabindex(element, value) {\r\n                    element.attr('tabindex', value);\r\n                }\r\n\r\n                function checkTabindex(controls) {\r\n                    let index = _.findIndex(controls, (c) => {\r\n                        return c['tabindex'] > -1;\r\n                    });\r\n\r\n                    if (index == -1 && controls.length > 0) {\r\n                        // let el = controls[0];\r\n                        setTabindex(angular.element(controls[0]), focusedTabindex);\r\n                    }\r\n                }\r\n\r\n                function init() {\r\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\r\n                    controls = $element.find(selector);\r\n                    controlsLength = controls.length;\r\n                    checkTabindex(controls);\r\n                    // add needed event listeners\r\n                    controls.on('focus', function () {\r\n                        if ($(this).hasClass('md-focused')) {\r\n                            return;\r\n                        }\r\n                        if (reInit) {\r\n                            init();\r\n                        }\r\n                        $element.addClass('pip-focused-container');\r\n                        if (isOpacity) {\r\n                            let ell = angular.element($(this)[0]);\r\n\r\n                            _color = $(this).css('backgroundColor');\r\n                            // _color = $window.getComputedStyle($(this)[0], null).backgroundColor;\r\n                            $(this).css('backgroundColor', rgba(_color));\r\n                            $(this).addClass('md-focused');\r\n                        } else {\r\n                            $(this).addClass('md-focused md-focused-opacity');\r\n                        }\r\n                        \r\n                        // setTabindex(angular.element($(this)[0]), 0);\r\n                    }).on('focusout', function () {\r\n                        if (!$(this).hasClass('md-focused')) {\r\n                            return;\r\n                        }                        \r\n                        $element.removeClass('pip-focused-container');\r\n\r\n                        if (isOpacity) {\r\n                            // $(this).css('backgroundColor', _color);\r\n                            $(this).css('backgroundColor', \"\");\r\n                            $(this).removeClass('md-focused md-focused-opacity');\r\n                        } else {\r\n                            $(this).removeClass('md-focused');\r\n                        }\r\n                        // if I go from block all element have tabindex = -1\r\n                        // setTabindex(angular.element($(this)[0]), -1);\r\n                    });\r\n                }\r\n\r\n                function keydownListener(e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n\r\n                        var\r\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\r\n                        // Move focus to next control\r\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\r\n                            controls[moveToControl].focus();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n}\r\n\r\n","{\r\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\r\n\r\n    thisModule.directive('pipInfiniteScroll', \r\n        function($rootScope, $window, $interval, $parse) {\r\n            var THROTTLE_MILLISECONDS = 500;\r\n\r\n            return {\r\n                scope: {\r\n                    pipInfiniteScroll: '&',\r\n                    pipScrollContainer: '=',\r\n                    pipScrollDistance: '=',\r\n                    pipScrollDisabled: '=',\r\n                    pipScrollUseDocumentBottom: '=',\r\n                    pipScrollListenForEvent: '@'\r\n                },\r\n                link: function($scope: any, $element, $attrs: any) {\r\n                    var \r\n                        checkWhenEnabled = null,\r\n                        scrollContainer,\r\n                        immediateCheck = true,\r\n                        scrollDistance = null,\r\n                        scrollEnabled = null, \r\n                        unregisterEventListener = null,\r\n                        useDocumentBottom = false, \r\n                        windowElement = angular.element($window);\r\n                    \r\n                    function height(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(element.offsetHeight)) {\r\n                            return element.document.documentElement.clientHeight;\r\n                        } else {\r\n                            return element.offsetHeight;\r\n                        }\r\n                    };\r\n\r\n                    function offsetTop(element) {\r\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                            return;\r\n                        }\r\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\r\n                    };\r\n\r\n                    function pageYOffset(element) {\r\n                        element = element[0] || element;\r\n                        if (isNaN(window.pageYOffset)) {\r\n                            return element.document.documentElement.scrollTop;\r\n                        } else {\r\n                            return element.ownerDocument.defaultView.pageYOffset;\r\n                        }\r\n                    };\r\n\r\n                    var onContainerScroll = function() {\r\n                        var \r\n                            containerBottom, \r\n                            containerTopOffset, \r\n                            elementBottom, \r\n                            remaining, \r\n                            shouldScroll;\r\n                                                \r\n                        if (scrollContainer === windowElement) {\r\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\r\n                            elementBottom = offsetTop($element) + height($element);\r\n                        } else {\r\n                            containerBottom = height(scrollContainer);\r\n                            containerTopOffset = 0;\r\n                            if (offsetTop(scrollContainer) !== void 0) {\r\n                                containerTopOffset = offsetTop(scrollContainer);\r\n                            }\r\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\r\n                        }\r\n\r\n                        if (useDocumentBottom) {\r\n                            elementBottom = height(($element[0].ownerDocument || (<any>$element[0]).document).documentElement);\r\n                        }\r\n\r\n                        remaining = elementBottom - containerBottom;\r\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\r\n                        \r\n                        if (shouldScroll) {\r\n                            checkWhenEnabled = true;\r\n                            if (scrollEnabled) {\r\n                                if ($scope.$$phase || $rootScope.$$phase) {\r\n                                    return $scope.pipInfiniteScroll();\r\n                                } else {\r\n                                    return $scope.$apply($scope.pipInfiniteScroll);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return checkWhenEnabled = false;\r\n                        }\r\n                    };\r\n\r\n                    if (THROTTLE_MILLISECONDS != null) {\r\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \r\n                    }\r\n\r\n                    $scope.$on('$destroy', function() {\r\n                        scrollContainer.unbind('scroll', onContainerScroll);\r\n                        if (unregisterEventListener != null) {\r\n                            unregisterEventListener();\r\n                            return unregisterEventListener = null;\r\n                        }\r\n                    });\r\n\r\n                    function handleScrollDistance(v) {\r\n                        return scrollDistance = parseFloat(v) || 0;\r\n                    };\r\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\r\n                    handleScrollDistance($scope.pipScrollDistance);\r\n                    \r\n                    function handleScrollDisabled(v) {\r\n                        scrollEnabled = !v;\r\n                        if (scrollEnabled && checkWhenEnabled) {\r\n                            checkWhenEnabled = false;\r\n                            return onContainerScroll();\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\r\n                    handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n                    function handleScrollUseDocumentBottom(v) {\r\n                        return useDocumentBottom = v;\r\n                    };\r\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\r\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n                    function changeContainer(newContainer) {\r\n                        if (scrollContainer != null) {\r\n                            scrollContainer.unbind('scroll', onContainerScroll);\r\n                        }\r\n\r\n                        scrollContainer = newContainer;\r\n                        if (newContainer != null) {\r\n                            return scrollContainer.bind('scroll', onContainerScroll);\r\n                        }\r\n                    };\r\n\r\n                    changeContainer(windowElement);\r\n                    if ($scope.pipScrollListenForEvent) {\r\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\r\n                    }\r\n\r\n                    function handleScrollContainer(newContainer) {\r\n                        if ((newContainer == null) || newContainer.length === 0) {\r\n                            return;\r\n                        }\r\n                        if (newContainer instanceof HTMLElement) {\r\n                            newContainer = angular.element(newContainer);\r\n                        } else if (typeof newContainer.append === 'function') {\r\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n                        } else if (typeof newContainer === 'string') {\r\n                            newContainer = $element.parents().find(newContainer);\r\n                        }\r\n\r\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                            return changeContainer(newContainer);\r\n                        } else {\r\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n                        }\r\n                    };\r\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\r\n                        if (newContainer !== scrollContainer)\r\n                            handleScrollContainer(newContainer);\r\n                    });\r\n                    handleScrollContainer($scope.pipScrollContainer || []);\r\n                    \r\n                    if ($attrs.pipScrollParent != null) {\r\n                        changeContainer(angular.element($element.parent()));\r\n                    }\r\n                    if ($attrs.pipScrolImmediateCheck != null) {\r\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n                    }\r\n                    \r\n                    return $interval((function() {\r\n                        if (immediateCheck) {\r\n                            return onContainerScroll();\r\n                        }\r\n                    }), 0, 1);\r\n                }\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\n","export class ShortcutOption {\r\n    Type: KeyboardEvent;\r\n    Propagate: boolean;\r\n    DisableInInput: boolean;\r\n    Target: any; // Event target object\r\n    Keycode: number;\r\n}\r\n\r\nexport class KeyboardEvent {\r\n    static Keydown: string = 'keydown';\r\n    static Keyup: string = 'keyup';\r\n    static Keypress: string = 'keypress';\r\n}\r\n\r\nexport class KeyboardShortcut {\r\n    private shift_nums = {\r\n        \"`\": \"~\",\r\n        \"1\": \"!\",\r\n        \"2\": \"@\",\r\n        \"3\": \"#\",\r\n        \"4\": \"$\",\r\n        \"5\": \"%\",\r\n        \"6\": \"^\",\r\n        \"7\": \"&\",\r\n        \"8\": \"*\",\r\n        \"9\": \"(\",\r\n        \"0\": \")\",\r\n        \"-\": \"_\",\r\n        \"=\": \"+\",\r\n        \";\": \":\",\r\n        \"'\": \"\\\"\",\r\n        \",\": \"<\",\r\n        \".\": \">\",\r\n        \"/\": \"?\",\r\n        \"\\\\\": \"|\"\r\n    };\r\n\r\n    private special_keys = {\r\n        'esc': 27,\r\n        'escape': 27,\r\n        'tab': 9,\r\n        'space': 32,\r\n        'return': 13,\r\n        'enter': 13,\r\n        'backspace': 8,\r\n\r\n        'scrolllock': 145,\r\n        'scroll_lock': 145,\r\n        'scroll': 145,\r\n        'capslock': 20,\r\n        'caps_lock': 20,\r\n        'caps': 20,\r\n        'numlock': 144,\r\n        'num_lock': 144,\r\n        'num': 144,\r\n\r\n        'pause': 19,\r\n        'break': 19,\r\n\r\n        'insert': 45,\r\n        'home': 36,\r\n        'delete': 46,\r\n        'end': 35,\r\n\r\n        'pageup': 33,\r\n        'page_up': 33,\r\n        'pu': 33,\r\n\r\n        'pagedown': 34,\r\n        'page_down': 34,\r\n        'pd': 34,\r\n\r\n        'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,\r\n\r\n        'f1': 112,\r\n        'f2': 113,\r\n        'f3': 114,\r\n        'f4': 115,\r\n        'f5': 116,\r\n        'f6': 117,\r\n        'f7': 118,\r\n        'f8': 119,\r\n        'f9': 120,\r\n        'f10': 121,\r\n        'f11': 122,\r\n        'f12': 123\r\n    };\r\n\r\n    private modifiers = {\r\n        shift: { wanted: false, pressed: false },\r\n        ctrl: { wanted: false, pressed: false },\r\n        alt: { wanted: false, pressed: false },\r\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\r\n    };\r\n\r\n    public eventCallback: Function;\r\n    public target: any;\r\n    public event: KeyboardEvent;\r\n    public option: ShortcutOption;\r\n    public shorcut: string;\r\n    public callback: Function;\r\n\r\n    public constructor(\r\n        element: any,\r\n        shorcutCombination: string,\r\n        option: ShortcutOption,\r\n        callback: (e?: JQueryEventObject) => void\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.target = element;\r\n        this.shorcut = shorcutCombination;\r\n        this.event = option.Type;\r\n        this.option = option;\r\n        this.callback = callback;\r\n\r\n        this.eventCallback = (event: JQueryEventObject) => {\r\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\r\n            let code: number;\r\n\r\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\r\n                let element;\r\n                if (e.target) {\r\n                    element = e.target;\r\n                } else if (e.srcElement) {\r\n                    element = e.srcElement;\r\n                }\r\n\r\n                if (element.nodeType == 3) {\r\n                    element = element.parentNode;\r\n                }\r\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\r\n            }\r\n            // Find Which key is pressed\r\n            if (e.keyCode) {\r\n                code = e.keyCode;\r\n            } else if (e.which) {\r\n                code = e.which;\r\n            }\r\n\r\n            let character = String.fromCharCode(code).toLowerCase();\r\n\r\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\r\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\r\n\r\n            let keys: string[] = this.shorcut.split(\"+\");\r\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\r\n            let kp: number = 0;\r\n\r\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\r\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\r\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\r\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\r\n\r\n            let i: number = 0;\r\n            for (i = 0; i < keys.length; i++) {\r\n                let k: string = keys[i];\r\n                // Modifiers\r\n                if (k == 'ctrl' || k == 'control') {\r\n                    kp++;\r\n                    this.modifiers.ctrl.wanted = true;\r\n                } else if (k == 'shift') {\r\n                    kp++;\r\n                    this.modifiers.shift.wanted = true;\r\n                } else if (k == 'alt') {\r\n                    kp++;\r\n                    this.modifiers.alt.wanted = true;\r\n                } else if (k == 'meta') {\r\n                    kp++;\r\n                    this.modifiers.meta.wanted = true;\r\n                } else if (k.length > 1) { // If it is a special key\r\n                    if (this.special_keys[k] == code) {\r\n                        kp++;\r\n                    }\r\n                } else if (this.option.Keycode) {\r\n                    if (this.option.Keycode == code) kp++;\r\n                } else { // The special keys did not match\r\n                    if (character == k) kp++;\r\n                    else {\r\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\r\n                            character = this.shift_nums[character];\r\n                            if (character == k) {\r\n                                kp++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (kp == keys.length &&\r\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\r\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\r\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\r\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\r\n\r\n                this.callback(e);\r\n\r\n                if (!this.option.Propagate) { // Stop the event\r\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    // e.stopPropagation works in Firefox.\r\n                    if (e.stopPropagation) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n            this.modifiers.ctrl.pressed = false;\r\n            this.modifiers.shift.pressed = false;\r\n            this.modifiers.alt.pressed = false;\r\n            this.modifiers.meta.pressed = false;\r\n        };\r\n    }\r\n}\r\n","import {\r\n    KeyboardShortcut,\r\n    ShortcutOption,\r\n    KeyboardEvent\r\n} from \"./KeyboardShortcut\";\r\n\r\nexport interface IKeyboardShortcuts {\r\n    [key: string]: KeyboardShortcut\r\n}\r\n\r\nexport interface IShortcutsRegisterService {\r\n    add(shorcutName: string, callback: () => void, options: ShortcutOption): void;\r\n    remove(shorcutName: string): void;\r\n\r\n    shorcuts: IKeyboardShortcuts\r\n}\r\n\r\nexport interface IShortcutsRegisterProvider extends ng.IServiceProvider {\r\n    option: ShortcutOption;\r\n}\r\n\r\nexport class ShortcutsRegisterService implements IShortcutsRegisterService {\r\n    private _log: ng.ILogService;\r\n    private _defaultOption: ShortcutOption;\r\n    private _shortcuts: IKeyboardShortcuts;\r\n\r\n    public constructor(\r\n        $log: ng.ILogService,\r\n        option: ShortcutOption\r\n    ) {\r\n        \"ngInject\";\r\n        this._log = $log;\r\n        this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\r\n\r\n        this._shortcuts = {};\r\n    }\r\n\r\n    private getDefaultOption(): ShortcutOption {\r\n        let defaultOption: ShortcutOption = {\r\n            Type: KeyboardEvent.Keydown,\r\n            Propagate: false,\r\n            DisableInInput: false,\r\n            Target: document,\r\n            Keycode: null\r\n        };\r\n\r\n        return defaultOption;\r\n    }\r\n\r\n    private checkAddShortcut(element: any, shorcutCombination: string, callback: (e: JQueryEventObject) => void): boolean {\r\n        if (!element) {\r\n            this._log.error('Register shortcut: element undentified!');\r\n\r\n            return false;\r\n        }\r\n\r\n        if (!shorcutCombination) {\r\n            this._log.error('Register shortcut: shorcut combination undentified!');\r\n\r\n            return false;\r\n        }\r\n\r\n        if (!callback) {\r\n            this._log.error('Register shortcut: shorcut callback undentified!');\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get shorcuts(): IKeyboardShortcuts {\r\n        return this._shortcuts;\r\n    }\r\n\r\n    public add(shorcutName: string, callback: (e: JQueryEventObject) => void, option: ShortcutOption): void {\r\n        this.remove(shorcutName);\r\n        let shorcutOption: ShortcutOption = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\r\n        let shorcutCombination: string = shorcutName.toLowerCase();\r\n        let element = shorcutOption.Target;\r\n\r\n\r\n        if (typeof shorcutOption.Target == 'string') {\r\n            element = document.getElementById(shorcutOption.Target);\r\n        } else {\r\n            element = shorcutOption.Target;\r\n        }\r\n\r\n        if (!this.checkAddShortcut(element, shorcutCombination, callback)) {\r\n\r\n            return\r\n        }\r\n\r\n        let newKeyboardShortcut = new KeyboardShortcut(element, shorcutCombination, shorcutOption, callback);\r\n\r\n        this._shortcuts[shorcutCombination] = newKeyboardShortcut;\r\n\r\n        //Attach the function with the event\r\n        if (element.addEventListener) {\r\n            element.addEventListener(shorcutOption.Type, newKeyboardShortcut.eventCallback, false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent('on' + shorcutOption.Type, newKeyboardShortcut.eventCallback);\r\n        } else {\r\n            element.on(shorcutOption.Type, newKeyboardShortcut.eventCallback);\r\n        }\r\n    }\r\n\r\n    public remove(shorcutName: string): void {\r\n        let shortcutCombination = shorcutName.toLowerCase();\r\n        let binding: KeyboardShortcut = this._shortcuts[shortcutCombination];\r\n\r\n        delete(this._shortcuts[shortcutCombination])\r\n        if (!binding) return;\r\n\r\n        let type = binding.event;\r\n        let element = binding.target;\r\n        let callback = binding.eventCallback;\r\n\r\n        if (element.detachEvent) {\r\n            element.detachEvent('on' + type, callback);\r\n        } else if (element.removeEventListener) {\r\n            element.removeEventListener(type, callback, false);\r\n        } else {\r\n            // element['on' + type] = false;\r\n            element.off(type, callback);\r\n        }\r\n    }\r\n}\r\n\r\n{\r\n    class ShortcutsRegisterProvider implements IShortcutsRegisterProvider {\r\n        private _service: ShortcutsRegisterService;\r\n        private _option: ShortcutOption;\r\n\r\n        public get option(): ShortcutOption {\r\n            return this._option;\r\n        }\r\n\r\n        public set option(value: ShortcutOption) {\r\n            this._option = value || new ShortcutOption();\r\n        }\r\n\r\n        public $get(\r\n            $log: ng.ILogService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null)\r\n                this._service = new ShortcutsRegisterService($log, this._option);\r\n\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .provider('pipShortcutsRegister', ShortcutsRegisterProvider);\r\n}","import  {\r\n    ShortcutOption,\r\n} from \"./KeyboardShortcut\";\r\n\r\nimport  {\r\n    IShortcutsRegisterService,\r\n} from \"./ShorcutsRegisterService\";\r\n\r\ninterface ShortcutAttributes extends ng.IAttributes {\r\n    pipShortcutAction: any;\r\n    pipShortcutName: any;\r\n    pipShorcutOptions: ShortcutOption;\r\n}\r\n\r\nclass ShortcutController implements ng.IController  {\r\n    private actionShortcuts: Function;\r\n    private nameShortcuts: string;\r\n    private options: ShortcutOption;\r\n\r\n    constructor(\r\n        $element: JQuery,\r\n        $attrs: ShortcutAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $parse: ng.IParseService,\r\n        pipShortcutsRegister: IShortcutsRegisterService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if ($attrs.pipShortcutAction) {\r\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\r\n            this.actionShortcuts($scope, {$event: {}});\r\n        } else {\r\n            $log.error('Shorcunt action does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\r\n            this.nameShortcuts = $attrs.pipShortcutName;\r\n        } else {\r\n            $log.error('Shorcunt name does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOption>$attrs.pipShorcutOptions : <ShortcutOption>{};\r\n        this.options.Target = $element;\r\n        // Registration of keybord shortcuts\r\n        pipShortcutsRegister.add(this.nameShortcuts, (e?: any) => {\r\n            this.actionShortcuts($scope, {$event: {'e': e}});          \r\n        }, this.options);\r\n    }\r\n\r\n    private keypressShortcut(action) {\r\n        this.actionShortcuts();\r\n    }\r\n}\r\n\r\n// Prevent junk from going into typescript definitions\r\n{\r\n    const shortcutsDirective = function(): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,            \r\n            controller: ShortcutController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .directive('pipShortcut', shortcutsDirective);\r\n}","import {\r\n    IShortcutsRegisterService\r\n} from \"./ShorcutsRegisterService\"\r\nimport  {\r\n    KeyboardShortcut,\r\n    ShortcutOption,\r\n    KeyboardEvent\r\n} from \"./KeyboardShortcut\";\r\n\r\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\r\n\r\nexport class ShortcutItem {\r\n    // Shortcut combination\r\n    public shortcut: string;\r\n    // Target object \r\n    public target?: any;\r\n    // Target element by Id\r\n    public targetId?: string;\r\n    // Target element by class (firstelement??)\r\n    // Public targetClass?: string;\r\n    // Access function\r\n    public access?: (event: JQueryEventObject) => boolean;\r\n    // Window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public keypress?: (event: JQueryEventObject) => void;\r\n    // Default options\r\n    public options?: ShortcutOption;    \r\n}\r\n\r\n// export class ShortcutItem extends SimpleShortcutItem {\r\n//     public shortcuts: SimpleShortcutItem[];\r\n// }\r\n\r\nexport class ShortcutsConfig {\r\n    // Global shortcut \r\n    public globalShortcuts: ShortcutItem[] = [];\r\n    // Local shortcut \r\n    public localShortcuts: ShortcutItem[] = [];\r\n    // Default options\r\n    public defaultOptions: ShortcutOption = null;\r\n}\r\n\r\nexport interface IShortcutsService {\r\n    readonly config: ShortcutsConfig;\r\n\r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n\r\n    on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void;\r\n    onLocal(localShortcuts?: ShortcutItem[]): void;\r\n    off(): void;\r\n}\r\n\r\nexport interface IShortcutsProvider extends ng.IServiceProvider {\r\n    config: ShortcutsConfig;\r\n    \r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n    defaultOptions: ShortcutOption;\r\n}\r\n\r\nclass ShortcutsService implements IShortcutsService {\r\n    private _oldConfig: ShortcutsConfig;\r\n    private _config: ShortcutsConfig;\r\n\r\n    public constructor(\r\n        config: ShortcutsConfig,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService, \r\n        private $location: ng.ILocationService, \r\n        private $injector: ng.auto.IInjectorService,\r\n        private pipShortcutsRegister: IShortcutsRegisterService\r\n    ) {\r\n        this._config = this.config;\r\n        this._oldConfig = _.cloneDeep(this.config);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this.config.globalShortcuts);\r\n        this.addShortcuts(this.config.localShortcuts);        \r\n    }\r\n\r\n    // Describe private functions\r\n    private sendChangeEvent() {\r\n        // Remove shortcuts\r\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\r\n        this.removeShortcuts(this._oldConfig.localShortcuts);\r\n        // Add shortcuts\r\n        this.addShortcuts(this.config.globalShortcuts);\r\n        this.addShortcuts(this.config.localShortcuts);\r\n\r\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\r\n        // Save current config to oldConfig\r\n        this._oldConfig = _.cloneDeep(this.config);\r\n    }\r\n\r\n    private removeShortcuts(collection: ShortcutItem[]): void {\r\n        _.each(collection, (k) => {\r\n            this.pipShortcutsRegister.remove(k.shortcut);\r\n        });\r\n    }\r\n\r\n    private keypressShortcut(shorcut: ShortcutItem, event: JQueryEventObject) {\r\n        if (shorcut.access && _.isFunction(shorcut.access)) {\r\n            if (!shorcut.access(event)) {\r\n                return;\r\n            }\r\n        } \r\n\r\n        if (shorcut.keypress) {\r\n            shorcut.keypress(event);\r\n            return;\r\n        }\r\n\r\n        if (shorcut.href) {\r\n            this.$window.location.href = shorcut.href;\r\n            return;\r\n        }\r\n\r\n        if (shorcut.url) {\r\n            this.$location.url(shorcut.url);\r\n            return;\r\n        }\r\n\r\n        if (shorcut.state) {\r\n            if (this.$injector.has('$state')) {\r\n                var $state = this.$injector.get('$state');\r\n                $state['go'](shorcut.state, shorcut.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (shorcut.event) {\r\n            this.$rootScope.$broadcast(shorcut.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipShortcutKeypress', shorcut.shortcut);\r\n        }\r\n    }\r\n\r\n    private addShortcuts(collection: ShortcutItem[]): void {\r\n        let generalOptions: ShortcutOption = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOption>{};\r\n        \r\n        _.each(collection, (k) => {\r\n            let option: ShortcutOption = k.options ? k.options : generalOptions;\r\n            let target: any;\r\n\r\n            target = k.target ? k.target : k.targetId;\r\n            option.Target = target;\r\n            // Registration of keyboard shortcut\r\n            this.pipShortcutsRegister.add(k.shortcut, (e?: any) => {\r\n                this.keypressShortcut(k, e);        \r\n            }, option);              \r\n        });\r\n    }\r\n\r\n    // Describe public functions \r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOption {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOption) {\r\n        this._config.defaultOptions = value || null;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void {\r\n        if (globalShortcuts && _.isArray(globalShortcuts)) {\r\n            this._config.globalShortcuts = globalShortcuts;    \r\n        }\r\n        if (localShortcuts && _.isArray(localShortcuts)) {\r\n            this._config.localShortcuts = localShortcuts;    \r\n        }        \r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public onLocal(localShortcuts?: ShortcutItem[]): void {\r\n        if (localShortcuts && _.isArray(localShortcuts)) {\r\n            this._config.localShortcuts = localShortcuts;    \r\n        }        \r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public off(): void {\r\n        this._config.globalShortcuts = [];\r\n        this._config.localShortcuts = [];\r\n        this.sendChangeEvent();\r\n    }\r\n}\r\n\r\nclass ShortcutsProvider implements IShortcutsProvider {\r\n    private _config: ShortcutsConfig = new ShortcutsConfig();\r\n    private _service: ShortcutsService;\r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ShortcutsConfig) {\r\n        this._config = value || new ShortcutsConfig();\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOption {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOption) {\r\n        this._config.defaultOptions = value || null;\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: ng.IRootScopeService, \r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutsRegister: IShortcutsRegisterService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutsRegister);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcuts', ShortcutsProvider);\r\n\r\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\r\n\r\nimport './ShorcutsRegisterService';\r\nimport './ShortcutsService';\r\nimport './ShortcutDirective';\r\n\r\nexport * from './ShortcutsService';\r\nexport * from './ShorcutsRegisterService';","{\r\n    var thisModule = angular.module(\"pipSelected\", []);\r\n\r\n    thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function ($scope: any, $element, $attrs: any) {\r\n                var\r\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\r\n                    indexSetter = indexGetter ? indexGetter.assign : null,\r\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\r\n                    idSetter = idGetter ? idGetter.assign : null,\r\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\r\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\r\n                    noScroll = $attrs.pipNoScroll,\r\n                    modifier = $attrs.pipSkipHidden ? ':visible' : '',\r\n                    className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable',\r\n                    selectedIndex = indexGetter($scope),\r\n                    currentElementTabinex = $element.attr('tabindex'),\r\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\r\n                    isScrolled = false;\r\n\r\n                // variables for touch    \r\n                var touchStartX, touchStartY, trackingClick, trackingClickStart, targetElement, lastClickTime, cancelNextClick;\r\n                // constant for touch\r\n                var touchBoundary = 10,\r\n                    tapdelay = 200,\r\n                    tapTimeout = 700;\r\n\r\n                // Set tabindex if it's not set yet\r\n                $element.attr('tabindex', currentElementTabinex || 0);\r\n\r\n                $element.on('click', className, onClickEvent);\r\n                $element.on('touchstart', className, onTouchStart);\r\n                $element.on('touchmove', className, onTouchMove);\r\n                $element.on('touchend', className, onTouchEnd);\r\n                $element.on('touchcancel', className, onTouchCancel);\r\n                $element.on('keydown', onKeyDown);\r\n                $element.on('focusin', onFocusIn);\r\n                $element.on('focusout', onFocusOut);\r\n\r\n                // Watch selected item index\r\n                if (!$attrs.pipTreeList) {\r\n                    $scope.$watch(indexGetter, function (newSelectedIndex) {\r\n                        selectItem({\r\n                            itemIndex: newSelectedIndex\r\n                        });\r\n                    });\r\n                } else {\r\n                    $scope.$watch(idGetter, function (newSelectedId) {\r\n                        setTimeout(function () {\r\n                            selectItem({\r\n                                itemId: newSelectedId,\r\n                                raiseEvent: true\r\n                            });\r\n                        }, 0);\r\n                    });\r\n                }\r\n\r\n                // Watch resync selection\r\n                if (pipSelectedWatch) {\r\n                    $scope.$watch(pipSelectedWatch, function () {\r\n                        // Delay update to allow ng-repeat to update DOM\r\n                        setTimeout(function () {\r\n                            selectedIndex = indexGetter($scope);\r\n                            selectItem({\r\n                                itemIndex: selectedIndex\r\n                            });\r\n                        }, 100);\r\n                    });\r\n                }\r\n\r\n                // Select item defined by index\r\n                selectItem({\r\n                    itemIndex: selectedIndex,\r\n                    items: $element.find(className)\r\n                });\r\n\r\n                // Functions and listeners\r\n                function selectItem(itemParams) {\r\n                    if (isScrolled) return;\r\n                    var itemIndex = itemParams.itemIndex,\r\n                        itemId = itemParams.itemId,\r\n                        items = itemParams.items || $element.find(className + modifier),\r\n                        itemsLength = items.length,\r\n                        item = (function () {\r\n                            if (itemParams.item) return itemParams.item;\r\n                            if (itemIndex === undefined && itemIndex === -1) {\r\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                            }\r\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                                return items[itemIndex]\r\n                            }\r\n                        }()),\r\n                        raiseEvent = itemParams.raiseEvent;\r\n\r\n                    if (item) {\r\n                        $element.find(className).removeClass('selected md-focused');\r\n                        item = angular.element(item)\r\n                            .addClass('selected md-focused')\r\n                            .focus(); // todo сдвигает список тут, на первом проходе\r\n                        if (!noScroll) scrollToItem(item);\r\n                        if (raiseEvent) defineSelectedIndex(items);\r\n                    }\r\n                };\r\n\r\n                function defineSelectedIndex(items) {\r\n                    var oldSelectedIndex = selectedIndex;\r\n                    selectedIndex = -1;\r\n                    for (var index = 0; index < items.length; index++) {\r\n                        if ($(items[index]).hasClass('selected')) {\r\n                            selectedIndex = index;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // Execute callback to notify about item select\r\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\r\n                        $scope.$apply(updateIndex);\r\n                    } else {\r\n                        $scope.$apply(onSelect);\r\n                    }\r\n\r\n                    function updateIndex() {\r\n                        var selectedItem = angular.element(items[selectedIndex]),\r\n                            selectedId = selectedItem.attr('pip-id');\r\n\r\n                        if (indexSetter) indexSetter($scope, selectedIndex);\r\n                        if (idSetter) idSetter($scope, selectedId);\r\n                        onSelect();\r\n                    };\r\n\r\n                    function onSelect() {\r\n                        var selectedItem = angular.element(items[selectedIndex]),\r\n                            selectedId = selectedItem.attr('pip-id');\r\n\r\n                        if (changeGetter) {\r\n                            changeGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    item: selectedItem,\r\n                                    index: selectedIndex,\r\n                                    id: selectedId,\r\n                                    newIndex: selectedIndex,\r\n                                    oldIndex: oldSelectedIndex\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n\r\n                function scrollToItem($item) {\r\n                    if (noScroll) return;\r\n\r\n                    var\r\n                        containerTop = $element.offset().top,\r\n                        containerHeight = $element.height(),\r\n                        containerBottom = containerTop + containerHeight,\r\n                        itemTop = $item.offset().top,\r\n                        itemHeight = $item.outerHeight(true),\r\n                        itemBottom = itemTop + itemHeight,\r\n                        containerScrollTop = $element.scrollTop();\r\n\r\n                    isScrolled = true;\r\n                    setTimeout(function () {\r\n                        isScrolled = false;\r\n                    }, 100);\r\n\r\n                    if (containerTop > itemTop) {\r\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n                    } else if (containerBottom < itemBottom) {\r\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n                    }\r\n\r\n                };\r\n\r\n                function getTargetElementFromEventTarget(eventTarget) {\r\n                    // On some older browsers the event target may be a text node.\r\n                    if (eventTarget.nodeType === Node.TEXT_NODE) {\r\n                        return eventTarget.parentNode;\r\n                    }\r\n\r\n                    return eventTarget;\r\n                };\r\n\r\n                function touchHasMoved(event) {\r\n                    var touch = event.changedTouches[0],\r\n                        boundary = touchBoundary; //Touchmove boundary, beyond which a click will be cancelled.\r\n\r\n                    if (Math.abs(touch.pageX - touchStartX) > boundary || Math.abs(touch.pageY - touchStartY) > boundary) {\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                };\r\n\r\n                function onClickEvent(event) {\r\n                    selectItem({\r\n                        item: event.currentTarget,\r\n                        raiseEvent: true\r\n                    });\r\n                }\r\n\r\n                function onTouchStart(ev) {\r\n                    //ev.preventDefault();\r\n\r\n                    let event = ev.originalEvent;\r\n                    if (event['targetTouches'].length > 1) {\r\n                        return true;\r\n                    }\r\n                    let targetElement = getTargetElementFromEventTarget(event.target);\r\n                    let touch = event['targetTouches'][0];\r\n\r\n                    trackingClick = true;\r\n                    trackingClickStart = event.timeStamp;\r\n                    targetElement = targetElement;\r\n\r\n                    touchStartX = touch.pageX;\r\n                    touchStartY = touch.pageY;\r\n\r\n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\r\n                        //  event.preventDefault();\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n                function onTouchMove(ev) {\r\n                    if (!trackingClick) {\r\n                        return true;\r\n                    }\r\n                    let event = ev.originalEvent;\r\n                    // If the touch has moved, cancel the click tracking\r\n                    if (targetElement !== getTargetElementFromEventTarget(event.target) || touchHasMoved(event)) {\r\n                        trackingClick = false;\r\n                        targetElement = null;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n                function onTouchEnd(ev) {\r\n                    var forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = targetElement;\r\n\r\n                    if (!trackingClick) {\r\n                        return true;\r\n                    }\r\n                    event = ev.originalEvent;\r\n                    // Prevent phantom clicks on fast double-tap \r\n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\r\n                        cancelNextClick = true;\r\n                        return true;\r\n                    }\r\n\r\n                    if ((event.timeStamp - trackingClickStart) > tapTimeout) {\r\n                        return true;\r\n                    }\r\n\r\n                    // Reset to prevent wrong click cancel on input \r\n                    cancelNextClick = false;\r\n\r\n                    lastClickTime = event.timeStamp;\r\n\r\n                    newTrackingClickStart = trackingClickStart;\r\n                    trackingClick = false;\r\n                    trackingClickStart = 0;\r\n\r\n                    selectItem({\r\n                        item: ev.currentTarget,\r\n                        raiseEvent: true\r\n                    });\r\n\r\n                    return false;\r\n                }\r\n\r\n                function onTouchCancel(ev) {\r\n                    trackingClick = false;\r\n                    targetElement = null;\r\n                }\r\n\r\n                function onKeyDown(e) {\r\n                    var keyCode = e.which || e.keyCode;\r\n\r\n                    // Check control keyCode\r\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        if (enterSpaceGetter) {\r\n                            enterSpaceGetter($scope, {\r\n                                $event: {\r\n                                    target: $element,\r\n                                    index: selectedIndex,\r\n                                    item: $element.find('.selected')\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    } else\r\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\r\n\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        // Get next selectable control index\r\n                        var items = $element.find(className + modifier),\r\n                            inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                            newSelectedIndex = selectedIndex + inc;\r\n\r\n                        // Set next control as selected\r\n                        selectItem({\r\n                            itemIndex: newSelectedIndex,\r\n                            items: items,\r\n                            raiseEvent: true\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onFocusIn(event) {\r\n                    // Choose selected element\r\n                    var items,\r\n                        selectedItem = $element.find(className + '.selected');\r\n\r\n                    selectedItem.addClass('md-focused');\r\n\r\n                    // If there are not selected elements then pick the first one\r\n                    if (selectedItem.length === 0) {\r\n                        selectedIndex = indexGetter($scope);\r\n                        items = $element.find(className + modifier);\r\n                        selectItem({\r\n                            itemIndex: selectedIndex || 0,\r\n                            items: items,\r\n                            raiseEvent: true\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function onFocusOut(event) {\r\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\r\n                }\r\n            }\r\n        };\r\n    });\r\n}","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n{\r\n    interface UnsavedChangesScope extends ng.IScope {\r\n        unsavedChangesAvailable: Function;\r\n        unsavedChangesMessage: string;\r\n        cancelLeave: Function;\r\n        afterLeave: Function;\r\n    }\r\n\r\n    class UnsavedChangesLink {\r\n        constructor(\r\n            $scope: UnsavedChangesScope,\r\n            $window: ng.IWindowService\r\n        ) {\r\n            $window.onbeforeunload = () => {\r\n                if ($scope.unsavedChangesAvailable()) {\r\n                    return $scope.unsavedChangesMessage;\r\n                }\r\n            };\r\n\r\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\r\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\r\n                    event.preventDefault();\r\n                } else {\r\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                }\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                $window.onbeforeunload = null;\r\n                unbindFunc();\r\n            });\r\n        }\r\n    }\r\n\r\n    const UnsavedChanges = function ($window: ng.IWindowService) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave',\r\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\r\n            },\r\n            link: function ($scope: UnsavedChangesScope) {\r\n                new UnsavedChangesLink($scope, $window);\r\n            }\r\n        };\r\n    }\r\n\r\n    angular.module(\"pipUnsavedChanges\", [])\r\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\r\n}"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}