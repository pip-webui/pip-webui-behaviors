{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/draggable/CancelDrag.ts","src/draggable/Drag.ts","src/draggable/DraggableService.ts","src/draggable/Drop.ts","src/draggable/PreventDrag.ts","src/draggable/index.ts","src/focused/focused.ts","src/index.ts","src/infinite_scroll/infiniteScroll.ts","src/selected/selected.ts","src/shortcuts/IShortcutsService.ts","src/shortcuts/Shortcut.ts","src/shortcuts/ShortcutBindingService.ts","src/shortcuts/ShortcutDirective.ts","src/shortcuts/ShortcutsService.ts","src/shortcuts/index.ts","src/unsaved_changes/unsavedChanges.ts"],"names":[],"mappings":"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","file":"pip-webui-behaviors.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n    class CancelDragLink {\n        constructor(\n            $element: JQuery\n        ) {\n            $element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\n        }\n    }\n\n    const CancelDrag = function (): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: ng.IScope,\n                $element: JQuery,\n                $attrs: ng.IAttributes\n            ) {\n                new CancelDragLink($element);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipCancelDrag', CancelDrag);\n}","import { IDraggableService } from './DraggableService';\n\n{\n    interface IDragLinkScope extends ng.IScope {\n        value: any;\n    }\n\n    interface IDragLinkAttributes extends ng.IAttributes {\n        ngDrag: any;\n        pipDragStart: any;\n        pipDragStop: any;\n        pipDragSuccess: any;\n        allowTransform: any;\n        pipDragData: any;\n        pipVerticalScroll: any;\n        pipHorizontalScroll: any;\n        pipActivationDistance: any;\n        pipScrollContainer: any;\n        pipDrag: any;\n        pipCenterAnchor: any;\n    }\n\n    class DragLink {\n        private LONG_PRESS: number = 50; // 50ms for longpress\n        private offset: any;\n        private _centerAnchor: boolean = false;\n        private _mx: number;\n        private _my: number;\n        private _tx: number;\n        private _ty: number;\n        private _mrx: number;\n        private _mry: number;\n        private _hasTouch: boolean = ('ontouchstart' in window) || ( < any > window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\n        private _pressEvents: string = 'touchstart mousedown';\n        private _moveEvents: string = 'touchmove mousemove';\n        private _releaseEvents: string = 'touchend mouseup';\n        private _dragHandle: any;\n\n        // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\n        private _myid: string | number;\n        private _data: any = null;\n\n        private _dragOffset: any = null;\n\n        private _dragEnabled: boolean = false;\n\n        private _pressTimer: any = null;\n\n        private _elementStyle: any = {};\n\n        private onDragStartCallback: Function;\n        private onDragStopCallback: Function;\n        private onDragSuccessCallback: Function;\n        private allowTransform: boolean;\n\n        private getDragData: any;\n        private verticalScroll: boolean;\n        private horizontalScroll: boolean;\n        private activationDistance: number;\n        private scrollDistance: number;\n        private scrollParent: boolean = false;\n\n        private scrollContainer: JQuery = angular.element(window);\n        private scrollContainerGetter: any;\n\n        // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\n        private _deregisterRootMoveListener: Function = angular.noop;\n\n        constructor(\n            private $rootScope: ng.IRootScopeService,\n            private $parse: ng.IParseService,\n            private $document: ng.IDocumentService,\n            private $window: ng.IWindowService,\n            private pipDraggable: IDraggableService,\n            private $scope: IDragLinkScope,\n            private $element: JQuery,\n            private $attrs: IDragLinkAttributes\n        ) {\n            $scope.value = $attrs.ngDrag;\n            this._myid = $scope.$id;\n            this.onDragStartCallback = $parse($attrs.pipDragStart) || null;\n            this.onDragStopCallback = $parse($attrs.pipDragStop) || null;\n            this.onDragSuccessCallback = $parse($attrs.pipDragSuccess) || null;\n            this.allowTransform = angular.isDefined($attrs.allowTransform) ? $scope.$eval($attrs.allowTransform) : false;\n\n            this.getDragData = $parse($attrs.pipDragData);\n            this.verticalScroll = $attrs.pipVerticalScroll || true;\n            this.horizontalScroll = $attrs.pipHorizontalScroll || true;\n            this.activationDistance = parseFloat($attrs.pipActivationDistance) || 75;\n            this.scrollDistance = parseFloat($attrs.pipActivationDistance) || 50;\n            this.scrollContainerGetter = $parse($attrs.pipScrollContainer);\n\n            this.$element.css('cursor', 'move');\n            this.initialize();\n        }\n\n        private initialize() {\n            this.$element.attr('pip-draggable', 'false'); // prevent native drag\n            // check to see if drag handle(s) was specified\n            // if querySelectorAll is available, we use this instead of find\n            // as JQLite find is limited to tagnames\n            let dragHandles: any;\n            if (this.$element[0].querySelectorAll) {\n                dragHandles = angular.element(this.$element[0].querySelectorAll('[pip-drag-handle]'));\n            } else {\n                dragHandles = this.$element.find('[pip-drag-handle]');\n            }\n            if (dragHandles.length) {\n                this._dragHandle = dragHandles;\n            }\n            this.toggleListeners(true);\n\n            // Initialize scroll container\n            if (this.scrollParent) {\n                this.scrollContainer = angular.element(this.$element.parent());\n            } else if (this.$attrs.pipScrollContainer) {\n                this.scrollContainer = angular.element(this.scrollContainerGetter(this.$scope));\n            } else {\n                this.scrollContainer = angular.element(window);\n            }\n        }\n\n        private toggleListeners(enable) {\n            if (!enable) return;\n            // add listeners.\n\n            this.$scope.$on('$destroy', () => {\n                this.onDestroy(enable);\n            });\n            this.$scope.$watch(this.$attrs.pipDrag, (newVal, oldVal) => {\n                this.onEnableChange(newVal, oldVal);\n            });\n            this.$scope.$watch(this.$attrs.pipCenterAnchor, (newVal, oldVal) => {\n                this.onCenterAnchor(newVal, oldVal);\n            });\n            // wire up touch events\n            if (this._dragHandle) {\n                // handle(s) specified, use those to initiate drag\n                this._dragHandle.on(this._pressEvents, (event) => {\n                    this.onpress(event);\n                });\n            } else {\n                // no handle(s) specified, use the element as the handle\n                this.$element.on(this._pressEvents, (event) => {\n                    this.onpress(event);\n                });\n            }\n            if (!this._hasTouch && this.$element[0].nodeName.toLowerCase() == \"img\") {\n                this.$element.on('mousedown', () => {\n                    return false;\n                }); // prevent native drag for images\n            }\n        }\n\n        private onDestroy(enable) {\n            this.toggleListeners(false);\n        }\n\n        private onEnableChange(newVal, oldVal) {\n            this._dragEnabled = (newVal);\n        }\n\n        private onCenterAnchor(newVal, oldVal) {\n            if (angular.isDefined(newVal))\n                this._centerAnchor = (newVal || 'true');\n        }\n\n        private isClickableElement(evt) {\n            return (\n                angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\n            );\n        }\n\n        /*\n         * When the element is clicked start the drag behaviour\n         * On touch devices as a small delay so as not to prevent native window scrolling\n         */\n        private onpress(evt) {\n            if (!this._dragEnabled) return;\n\n            if (this.isClickableElement(evt)) {\n                return;\n            }\n\n            if (evt.type == \"mousedown\" && evt.button != 0) {\n                // Do not start dragging on right-click\n                return;\n            }\n\n            this.saveElementStyles();\n\n            if (this._hasTouch) {\n                this.cancelPress();\n                this._pressTimer = setTimeout(() => {\n                    this.cancelPress();\n                    this.onlongpress(evt);\n                }, this.LONG_PRESS);\n                this.$document.on(this._moveEvents, () => {\n                    this.cancelPress();\n                });\n                this.$document.on(this._releaseEvents, () => {\n                    this.cancelPress();\n                });\n            } else {\n                this.onlongpress(evt);\n            }\n        }\n\n        private saveElementStyles() {\n            this._elementStyle.left = this.$element.css('css') || 0;\n            this._elementStyle.top = this.$element.css('top') || 0;\n            this._elementStyle.position = this.$element.css('position');\n            this._elementStyle.width = this.$element.css('width');\n        }\n\n        private cancelPress() {\n            clearTimeout(this._pressTimer);\n            this.$document.off(this._moveEvents, () => {\n                this.cancelPress();\n            });\n            this.$document.off(this._releaseEvents, () => {\n                this.cancelPress();\n            });\n        }\n\n        private onlongpress(evt) {\n            if (!this._dragEnabled) return;\n            evt.preventDefault();\n\n            this.offset = this.$element[0].getBoundingClientRect();\n            if (this.allowTransform)\n                this._dragOffset = this.offset;\n            else {\n                this._dragOffset = {\n                    left: document.body.scrollLeft,\n                    top: document.body.scrollTop\n                };\n            }\n\n\n            ( < any > this.$element).centerX = this.$element[0].offsetWidth / 2;\n            ( < any > this.$element).centerY = this.$element[0].offsetHeight / 2;\n\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\n            this._mrx = this._mx - this.offset.left;\n            this._mry = this._my - this.offset.top;\n            if (this._centerAnchor) {\n                this._tx = this._mx - ( < any > this.$element).centerX - this.$window.pageXOffset;\n                this._ty = this._my - ( < any > this.$element).centerY - this.$window.pageYOffset;\n            } else {\n                this._tx = this._mx - this._mrx - this.$window.pageXOffset;\n                this._ty = this._my - this._mry - this.$window.pageYOffset;\n            }\n\n            this.$document.on(this._moveEvents, (event) => {\n                this.onmove(event);\n            });\n            this.$document.on(this._releaseEvents, (event) => {\n                this.onrelease(event);\n            });\n            // This event is used to receive manually triggered mouse move events\n            // jqLite unfortunately only supports triggerHandler(...)\n            // See http://api.jquery.com/triggerHandler/\n            // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\n            this._deregisterRootMoveListener = this.$rootScope.$on('draggable:_triggerHandlerMove', (event, origEvent) => {\n                this.onmove(origEvent);\n            });\n        }\n\n        private onmove(evt) {\n            if (!this._dragEnabled) return;\n            evt.preventDefault();\n            if (!this.$element.hasClass('pip-dragging')) {\n                this._data = this.getDragData(this.$scope);\n                this.$element.addClass('pip-dragging');\n                this.$rootScope.$broadcast('draggable:start', {\n                    x: this._mx,\n                    y: this._my,\n                    tx: this._tx,\n                    ty: this._ty,\n                    event: evt,\n                    element: this.$element,\n                    data: this._data\n                });\n\n                if (this.onDragStartCallback) {\n                    this.$scope.$apply(() => {\n                        this.onDragStartCallback(this.$scope, {\n                            $data: this._data,\n                            $event: evt\n                        });\n                    });\n                }\n            }\n\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\n\n            if (this.horizontalScroll || this.verticalScroll) {\n                this.dragToScroll();\n            }\n\n            if (this._centerAnchor) {\n                this._tx = this._mx - ( < any > this.$element).centerX - this._dragOffset.left;\n                this._ty = this._my - ( < any > this.$element).centerY - this._dragOffset.top;\n            } else {\n                this._tx = this._mx - this._mrx - this._dragOffset.left;\n                this._ty = this._my - this._mry - this._dragOffset.top;\n            }\n\n            this.moveElement(this._tx, this._ty);\n\n            this.$rootScope.$broadcast('draggable:move', {\n                x: this._mx,\n                y: this._my,\n                tx: this._tx,\n                ty: this._ty,\n                event: evt,\n                element: this.$element,\n                data: this._data,\n                uid: this._myid,\n                dragOffset: this._dragOffset\n            });\n        }\n\n        private onrelease(evt) {\n            if (!this._dragEnabled)\n                return;\n            evt.preventDefault();\n            this.$rootScope.$broadcast('draggable:end', {\n                x: this._mx,\n                y: this._my,\n                tx: this._tx,\n                ty: this._ty,\n                event: evt,\n                element: this.$element,\n                data: this._data,\n                callback: this.onDragComplete,\n                uid: this._myid\n            });\n            this.$element.removeClass('pip-dragging');\n            this.$element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\n            this.reset();\n            this.$document.off(this._moveEvents);\n            this.$document.off(this._releaseEvents);\n            if (this.onDragStopCallback) {\n                this.$scope.$apply(() => {\n                    this.onDragStopCallback(this.$scope, {\n                        $data: this._data,\n                        $event: evt\n                    });\n                });\n            }\n\n            this._deregisterRootMoveListener();\n        }\n\n        private onDragComplete(evt) {\n            if (!this.onDragSuccessCallback) return;\n\n            this.$scope.$apply(() => {\n                this.onDragSuccessCallback(this.$scope, {\n                    $data: this._data,\n                    $event: evt\n                });\n            });\n        }\n\n        private reset() {\n            if (this.allowTransform)\n                this.$element.css({\n                    transform: '',\n                    'z-index': '',\n                    '-webkit-transform': '',\n                    '-ms-transform': ''\n                });\n            else {\n                this.$element.css({\n                    position: this._elementStyle.position,\n                    top: this._elementStyle.top,\n                    left: this._elementStyle.left,\n                    'z-index': '',\n                    width: this._elementStyle.width\n                });\n            }\n        }\n\n        private moveElement(x, y) {\n            const eWidth = this.$element.css('width');\n            if (this.allowTransform) {\n                this.$element.css({\n                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                    'z-index': 99999,\n                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n                });\n            } else {\n                this.$element.css({\n                    'left': x + 'px',\n                    'top': y + 'px',\n                    'position': 'fixed',\n                    'z-index': 100,\n                    width: eWidth\n                });\n            }\n        }\n\n        private dragToScroll() {\n            let scrollX = 0,\n                scrollY = 0,\n                offset = (element) => {\n                    return element.offset() || {\n                        left: 0,\n                        top: 0\n                    };\n                };\n\n            if (this.horizontalScroll) {\n                const\n                    containerLeft = offset(this.scrollContainer).left,\n                    containerWidth = this.scrollContainer.innerWidth(),\n                    containerRight = containerLeft + containerWidth;\n\n                if ((this._mx - containerLeft) < this.activationDistance) {\n                    scrollX = -this.scrollDistance;\n                } else if ((containerRight - this._mx) < this.activationDistance) {\n                    scrollX = this.scrollDistance;\n                }\n            }\n\n            if (this.verticalScroll) {\n                const\n                    containerTop = offset(this.scrollContainer).top,\n                    containerHeight = this.scrollContainer.innerHeight(),\n                    containerBottom = containerTop + containerHeight;\n\n                if ((this._my - containerTop) < this.activationDistance) {\n                    scrollY = -this.scrollDistance + 30;\n                } else if ((containerBottom - this._my) < this.activationDistance) {\n                    scrollY = this.scrollDistance - 30;\n                }\n            }\n            if (scrollX !== 0 || scrollY !== 0) {\n                const\n                    containerScrollLeft = this.scrollContainer.scrollLeft(),\n                    containerScrollTop = this.scrollContainer.scrollTop();\n\n                this.scrollContainer.scrollLeft(containerScrollLeft + scrollX);\n                this.scrollContainer.scrollTop(containerScrollTop + scrollY);\n            }\n\n        }\n\n    }\n\n    const Drag = function (\n        $rootScope: ng.IRootScopeService,\n        $parse: ng.IParseService,\n        $document: ng.IDocumentService,\n        $window: ng.IWindowService,\n        pipDraggable: IDraggableService,\n    ): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: IDragLinkScope,\n                $element: JQuery,\n                $attrs: IDragLinkAttributes\n            ) {\n                new DragLink($rootScope, $parse, $document, $window, pipDraggable, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipDrag', Drag);\n}","export interface IDraggableService {\n    inputEvent(event: any);\n}\n\nclass DraggableService implements IDraggableService {\n    public inputEvent(event) {\n        if (angular.isDefined(event.touches)) {\n            return event.touches[0];\n        }\n        //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\n        else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\n            return event.originalEvent.touches[0];\n        }\n        return event;\n    };\n}\n\nangular\n    .module(\"pipDraggable\")\n    .service('pipDraggable', DraggableService);\n    ","import { IDraggableService } from './DraggableService';\n\n{\n    interface IDropLinkScope extends ng.IScope {\n        value: any;\n        isTouching: any;\n    }\n\n    interface IDropLinkAttributes extends ng.IAttributes {\n        pipDrop: any;\n        pipDropSuccess: any;\n        pipDragStart: any;\n        pipDragStop: any;\n        pipDragMove: any;\n    }\n\n    class DropLink {\n\n        private _lastDropTouch: any;\n        private _myid: number | string;\n        private _dropEnabled: boolean;\n\n        private onDropCallback: Function; // || function(){};\n        private onDragStartCallback: Function;\n        private onDragStopCallback: Function;\n        private onDragMoveCallback: Function;\n\n        constructor(\n            private $parse: ng.IParseService,\n            private $document: ng.IDocumentService,\n            private $timeout: ng.ITimeoutService,\n            private pipDraggable: IDraggableService,\n            private $scope: IDropLinkScope,\n            private $element: JQuery,\n            private $attrs: IDropLinkAttributes\n        ) {\n            $scope.value = $attrs.pipDrop;\n            $scope.isTouching = false;\n\n            this._myid = $scope.$id;\n            this.onDropCallback = $parse($attrs.pipDropSuccess); // || function(){};\n            this.onDragStartCallback = $parse($attrs.pipDragStart);\n            this.onDragStopCallback = $parse($attrs.pipDragStop);\n            this.onDragMoveCallback = $parse($attrs.pipDragMove);\n\n            this.initialize();\n        }\n\n        private initialize() {\n            this.toggleListeners(true);\n        }\n\n        private toggleListeners(enable) {\n            // remove listeners\n            if (!enable) return;\n            // add listeners.\n            this.$scope.$watch(this.$attrs.pipDrop, (newVal, oldVal) => {\n                this.onEnableChange(newVal, oldVal);\n            });\n            this.$scope.$on('$destroy', (event) => {\n                this.onDestroy(event);\n            });\n            this.$scope.$on('draggable:start', (evt, obj) => {\n                this.onDragStart(evt, obj);\n            });\n            this.$scope.$on('draggable:move', (evt, obj) => {\n                this.onDragMove(evt, obj);\n            });\n            this.$scope.$on('draggable:end', (evt, obj) => {\n                this.onDragEnd(evt, obj);\n            });\n        }\n\n        private onDestroy(enable) {\n            this.toggleListeners(false);\n        }\n\n        private onEnableChange(newVal, oldVal) {\n            this._dropEnabled = newVal;\n        }\n\n        private onDragStart(evt, obj) {\n            if (!this._dropEnabled) return;\n            this.isTouching(obj.x, obj.y, obj.element);\n\n            if (this.$attrs.pipDragStart) {\n                this.$timeout(() => {\n                    this.onDragStartCallback(this.$scope, {\n                        $data: obj.data,\n                        $event: obj\n                    });\n                });\n            }\n        }\n\n        private onDragMove(evt, obj) {\n            if (!this._dropEnabled) return;\n            this.isTouching(obj.x, obj.y, obj.element);\n\n            if (this.$attrs.pipDragMove) {\n                this.$timeout(() => {\n                    this.onDragMoveCallback(this.$scope, {\n                        $data: obj.data,\n                        $event: obj\n                    });\n                });\n            }\n        }\n\n        private onDragEnd(evt, obj) {\n            // don't listen to drop events if this is the element being dragged\n            // only update the styles and return\n            if (!this._dropEnabled || this._myid === obj.uid) {\n                this.updateDragStyles(false, obj.element);\n                return;\n            }\n\n            if (this.isTouching(obj.x, obj.y, obj.element)) {\n                // call the pipDraggable pipDragSuccess element callback\n                if (obj.callback) {\n                    obj.callback(obj);\n                }\n\n                if (this.$attrs.pipDropSuccess) {\n                    this.$timeout(() => {\n                        this.onDropCallback(this.$scope, {\n                            $data: obj.data,\n                            $event: obj,\n                            $target: this.$scope.$eval(this.$scope.value)\n                        });\n                    });\n                }\n            }\n\n            if (this.$attrs.pipDragStop) {\n                this.$timeout(() => {\n                    this.onDragStopCallback(this.$scope, {\n                        $data: obj.data,\n                        $event: obj\n                    });\n                });\n            }\n\n            this.updateDragStyles(false, obj.element);\n        }\n\n        private isTouching(mouseX, mouseY, dragElement) {\n            const touching = this.hitTest(mouseX, mouseY);\n            this.$scope.isTouching = touching;\n            if (touching) {\n                this._lastDropTouch = this.$element;\n            }\n            this.updateDragStyles(touching, dragElement);\n            return touching;\n        }\n\n        private updateDragStyles(touching, dragElement) {\n            if (touching) {\n                this.$element.addClass('pip-drag-enter');\n                dragElement.addClass('pip-drag-over');\n            } else if (this._lastDropTouch == this.$element) {\n                this._lastDropTouch = null;\n                this.$element.removeClass('pip-drag-enter');\n                dragElement.removeClass('pip-drag-over');\n            }\n        };\n\n        private hitTest(x, y) {\n            const bounds = this.$element[0].getBoundingClientRect();\n            x -= this.$document[0].body.scrollLeft + this.$document[0].documentElement.scrollLeft;\n            y -= this.$document[0].body.scrollTop + this.$document[0].documentElement.scrollTop;\n            return x >= bounds.left &&\n                x <= bounds.right &&\n                y <= bounds.bottom &&\n                y >= bounds.top;\n        }\n    }\n\n    const Drop = function (\n        $parse: ng.IParseService,\n        $document: ng.IDocumentService,\n        $timeout: ng.ITimeoutService,\n        pipDraggable: IDraggableService,\n    ): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: IDropLinkScope,\n                $element: JQuery,\n                $attrs: IDropLinkAttributes\n            ) {\n                new DropLink($parse, $document, $timeout, pipDraggable, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipDrop', Drop);\n}","{\n\n    class PreventDragLink {\n        constructor(\n            private $element: JQuery\n        ) {\n            this.initialize();\n        }\n\n        private initialize() {\n            this.$element.attr('pip-draggable', 'false');\n            this.toggleListeners(true);\n        }\n\n        private toggleListeners(enable) {\n            // remove listeners\n            if (!enable) return;\n            // add listeners.\n            this.$element.on('mousedown touchstart touchmove touchend touchcancel', (event) => { this.absorbEvent_(event); });\n        }\n\n        private absorbEvent_(event) {\n            const e = event.originalEvent;\n            e.preventDefault && e.preventDefault();\n            e.stopPropagation && e.stopPropagation();\n            e.cancelBubble = true;\n            e.returnValue = false;\n            return false;\n        }\n\n    }\n\n    const PreventDrag = function (): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (\n                $scope: ng.IScope,\n                $element: JQuery,\n                $attrs: ng.IAttributes\n            ) {\n                new PreventDragLink($element);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipDraggable\")\n        .directive('pipPreventDrag', PreventDrag);\n}","angular.module(\"pipDraggable\", []);\n\nimport './DraggableService';\nimport './Drag';\nimport './Drop';\nimport './PreventDrag';\nimport './CancelDrag';\n","{\n    interface FocusedScope extends ng.IScope {\n        pipFocusedColor: Function;\n        pipFocusedClass: Function;\n        pipFocusedRebind: Function;\n        pipFocusedTabindex: Function;\n        pipFocusedOpacity: Function;\n        pipFocusedData: Function;\n        pipWithHidden: Function;\n        pipRebind: Function;\n    }\n\n    interface FocusedAttributes extends ng.IAttributes {\n        ngModel: any;\n        pipFocusedData: any;\n    }\n\n    class FocusedLink implements ng.IDirective {\n        private controls: JQuery;\n        private controlsLength: number;\n        private color: string;\n        private opacityDelta: number = 0.4;\n        private opacityLimit: number = 0.5;\n        private oldBackgroundColor: string;\n        private onFocusClass: string;\n\n        constructor(\n            private $scope: FocusedScope,\n            private $element: JQuery,\n            $attrs: FocusedAttributes,\n            private $timeout: ng.ITimeoutService,\n            private $mdConstant: any,\n            private $window: ng.IWindowService\n        ) {\n\n            $element.on('keydown', (e) => {\n                this.keydownListener(e);\n            });\n\n            $timeout(() => {\n                this.init();\n            });\n\n            if ($attrs.ngModel) {\n                $scope.$watch('ngModel', function () {\n                    $timeout(this.init);\n                }, true);\n            }\n\n            if ($attrs.pipFocusedData) {\n                $scope.$watch('pipFocusedData', function () {\n                    $timeout(this.init);\n                }, true);\n            }\n        }\n\n        private init() {\n            const selector = this.$scope.pipWithHidden && this.$scope.pipWithHidden() ? '.pip-focusable' : '.pip-focusable:visible';\n            this.onFocusClass = this.$scope.pipFocusedClass ? this.$scope.pipFocusedClass() : '';\n            this.controls = this.$element.find(selector);\n            this.controlsLength = this.controls.length;\n            this.checkTabindex(this.controls);\n            // Add event listeners\n            this.controls.on('focus', (event) => {\n                const target = event.currentTarget;\n                if ($(target).hasClass('md-focused')) {\n                    return;\n                }\n                if (this.$scope.pipRebind && this.$scope.pipRebind()) {\n                    this.init();\n                }\n                this.$element.addClass('pip-focused-container');\n                $(target).addClass(this.onFocusClass);\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\n\n                    this.color = $(target).css('backgroundColor');\n                    this.oldBackgroundColor = this.color;\n                    $(target).css('backgroundColor', this.rgba(this.color));\n                    $(target).addClass('md-focused');\n                } else {\n                    $(target).addClass('md-focused md-focused-opacity');\n                }\n\n            }).on('focusout', (event) => {\n                const target = event.currentTarget;\n                if (!$(target).hasClass('md-focused')) {\n                    return;\n                }\n                this.$element.removeClass('pip-focused-container');\n                $(target).removeClass(this.onFocusClass);\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\n                    $(target).css('backgroundColor', this.oldBackgroundColor);\n                    $(target).removeClass('md-focused md-focused-opacity');\n                } else {\n                    $(target).removeClass('md-focused');\n                }\n            });\n        }\n\n        private rgba(color) {\n            if (this.$scope.pipFocusedColor && this.$scope.pipFocusedColor()) {\n                return this.$scope.pipFocusedColor();\n            }\n\n            const arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\n\n            if (!arr || arr.length < 3) {\n                return ''\n            }\n\n            let red, blue, green, opacity;\n\n            opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\n            red = arr[0];\n            blue = arr[1];\n            green = arr[2];\n\n            if (opacity < this.opacityLimit) {\n                opacity += this.opacityDelta;\n            } else {\n                opacity -= this.opacityDelta;\n            }\n\n            return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\n        }\n\n        private setTabindex(element, value) {\n            element.attr('tabindex', value);\n        }\n\n        private checkTabindex(controls) {\n            const index = _.findIndex(controls, (c) => {\n                return c['tabindex'] > -1;\n            });\n\n            if (index == -1 && controls.length > 0 && this.$scope.pipFocusedTabindex) {\n                this.setTabindex(angular.element(controls[0]), this.$scope.pipFocusedTabindex());\n            }\n        }\n\n        private keydownListener(e) {\n            const keyCode = e.which || e.keyCode;\n            // Check control keyCode\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\n            ) {\n                e.preventDefault();\n\n                const\n                    increment = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                    moveToControl = this.controls.index(this.controls.filter(\".md-focused\")) + increment;\n                // Move focus to next control\n                if (moveToControl >= 0 && moveToControl < this.controlsLength) {\n                    this.controls[moveToControl].focus();\n                }\n            }\n        }\n    }\n\n    const Focused = function ($timeout: ng.ITimeoutService, \n        $mdConstant: any, \n        $window: ng.IWindowService\n    ): ng.IDirective {\n        return {\n            scope: {\n                pipFocusedColor: '&?',\n                pipFocusedClass: '&?',\n                pipFocusedRebind: '&?',\n                pipFocusedTabindex: '&?',\n                pipFocusedOpacity: '&?',\n                pipFocusedData: '&?',\n                pipWithHidden: '&?',\n                pipRebind: '&?'\n            },\n            link: function($scope: FocusedScope, $element: JQuery, $attrs: FocusedAttributes) {\n                new FocusedLink($scope, $element, $attrs, $timeout, $mdConstant, $window);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipFocused\", [])\n        .directive('pipFocused', Focused);\n}","﻿import './unsaved_changes/unsavedChanges';\nimport './shortcuts/index';\nimport './focused/focused';\nimport './draggable/index';\nimport './selected/selected';\nimport './infinite_scroll/infiniteScroll';\n\nangular.module('pipBehaviors', [\n    'pipFocused',\n    'pipSelected',\n    'pipInfiniteScroll',\n    'pipUnsavedChanges',\n    'pipDraggable',\n    'pipShortcuts'\n]);\n\nexport * from './shortcuts/index';\n","{\n    interface InfiniteScrollScope extends ng.IScope {\n        pipInfiniteScroll: Function;\n        pipScrollContainer: JQuery;\n        pipScrollDistance: number | string;\n        pipScrollDisabled: boolean;\n        pipScrollUseDocumentBottom: boolean;\n        pipScrollListenForEvent: string;\n    }\n\n    interface InfiniteScrollAttributes extends ng.IAttributes {\n        pipScrollParent: any;\n        pipScrolImmediateCheck: any;\n    }\n\n    class InfiniteScrollLink {\n        private THROTTLE_MILLISECONDS: number = 500;\n        private checkWhenEnabled = null;\n        private scrollContainer = null;\n        private immediateCheck = true;\n        private scrollDistance = null;\n        private scrollEnabled = null;\n        private unregisterEventListener = null;\n        private useDocumentBottom = false;\n        private windowElement = null;\n        private onContainerScrollThrottle: Function;\n\n        constructor(\n            private $rootScope: ng.IRootScopeService,\n            private $window: ng.IWindowService,\n            private $interval: ng.IIntervalService,\n            private $scope: InfiniteScrollScope,\n            private $element: JQuery,\n            private $attrs: InfiniteScrollAttributes\n        ) {\n            this.windowElement = angular.element($window);\n\n            this.onContainerScrollThrottle = _.throttle(() => {\n                this.onContainerScroll();\n            }, this.THROTTLE_MILLISECONDS);\n\n            $scope.$on('$destroy', () => {\n                this.scrollContainer.unbind('scroll', () => {\n                    this.onContainerScrollThrottle();\n                });\n                if (this.unregisterEventListener !== null) {\n                    this.unregisterEventListener();\n                    return this.unregisterEventListener = null;\n                }\n            });\n\n            $scope.$watch('pipScrollDistance', (v) => {\n                this.handleScrollDistance(v);\n            });\n            this.handleScrollDistance($scope.pipScrollDistance);\n\n            $scope.$watch('pipScrollDisabled', (v) => {\n                this.handleScrollDisabled(v);\n            });\n            this.handleScrollDisabled($scope.pipScrollDisabled);\n\n            $scope.$watch('pipScrollUseDocumentBottom', (v) => {\n                this.handleScrollUseDocumentBottom(v);\n            });\n            this.handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\n\n            this.changeContainer(this.windowElement);\n            if ($scope.pipScrollListenForEvent) {\n                this.unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, () => {\n                    this.onContainerScrollThrottle();\n                });\n            }\n\n            $scope.$watch('pipScrollContainer', (newContainer) => {\n                if (newContainer != this.scrollContainer)\n                    this.handleScrollContainer(newContainer);\n            });\n            this.handleScrollContainer($scope.pipScrollContainer || []);\n\n            if ($attrs.pipScrollParent !== null) {\n                this.changeContainer(angular.element($element.parent()));\n            }\n            if ($attrs.pipScrolImmediateCheck !== null) {\n                this.immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\n            }\n\n            $interval((function () {\n                if (this.immediateCheck) {\n                    return this.onContainerScrollThrottle();\n                }\n            }), 0, 1);\n        }\n\n        private height(element) {\n            element = element[0] || element;\n            if (isNaN(element.offsetHeight)) {\n                return element.document.documentElement.clientHeight;\n            } else {\n                return element.offsetHeight;\n            }\n        }\n\n        private offsetTop(element) {\n            if (!element[0].getBoundingClientRect || element.css('none')) {\n                return;\n            }\n            return element[0].getBoundingClientRect().top + this.pageYOffset(element);\n        }\n\n        private pageYOffset(element) {\n            element = element[0] || element;\n            if (isNaN(window.pageYOffset)) {\n                return element.document.documentElement.scrollTop;\n            } else {\n                return element.ownerDocument.defaultView.pageYOffset;\n            }\n        }\n\n        private onContainerScroll() {\n            let containerBottom,\n                containerTopOffset,\n                elementBottom,\n                remaining,\n                shouldScroll;\n\n            if (this.scrollContainer === this.windowElement) {\n                containerBottom = this.height(this.scrollContainer) + this.pageYOffset(this.scrollContainer[0].document.documentElement);\n                elementBottom = this.offsetTop(this.$element) + this.height(this.$element);\n            } else {\n                containerBottom = this.height(this.scrollContainer);\n                containerTopOffset = 0;\n                if (this.offsetTop(this.scrollContainer) !== void 0) {\n                    containerTopOffset = this.offsetTop(this.scrollContainer);\n                }\n                elementBottom = this.offsetTop(this.$element) - containerTopOffset + this.height(this.$element);\n            }\n\n            if (this.useDocumentBottom) {\n                elementBottom = this.height((this.$element[0].ownerDocument || ( < any > this.$element[0]).document).documentElement);\n            }\n\n            remaining = elementBottom - containerBottom;\n            shouldScroll = remaining <= this.height(this.scrollContainer) * this.scrollDistance + 1;\n\n            if (shouldScroll) {\n                this.checkWhenEnabled = true;\n                if (this.scrollEnabled) {\n                    if (this.$scope.$$phase || this.$rootScope.$$phase) {\n                        return this.$scope.pipInfiniteScroll();\n                    } else {\n                        return this.$scope.$apply(() => {\n                            this.$scope.pipInfiniteScroll();\n                        });\n                    }\n                }\n            } else {\n                return this.checkWhenEnabled = false;\n            }\n        }\n\n        private handleScrollDistance(v) {\n            return this.scrollDistance = parseFloat(v) || 0;\n        }\n\n        private handleScrollDisabled(v) {\n            this.scrollEnabled = !v;\n            if (this.scrollEnabled && this.checkWhenEnabled) {\n                this.checkWhenEnabled = false;\n                this.onContainerScrollThrottle();\n            }\n        }\n\n        private handleScrollUseDocumentBottom(v) {\n            return this.useDocumentBottom = v;\n        }\n\n        private changeContainer(newContainer) {\n            if (this.scrollContainer) {\n                this.scrollContainer.unbind('scroll', () => {\n                    this.onContainerScrollThrottle();\n                });\n            }\n\n            this.scrollContainer = newContainer;\n            if (newContainer) {\n                return this.scrollContainer.bind('scroll', () => {\n                    this.onContainerScrollThrottle();\n                });\n            }\n        }\n\n        private handleScrollContainer(newContainer) {\n            if ((newContainer == null) || newContainer.length === 0) {\n                return;\n            }\n            if (newContainer instanceof HTMLElement) {\n                newContainer = angular.element(newContainer);\n            } else if (typeof newContainer.append === 'function') {\n                newContainer = angular.element(newContainer[newContainer.length - 1]);\n            } else if (typeof newContainer === 'string') {\n                newContainer = this.$element.parents().find(newContainer);\n            }\n\n            if (newContainer != null && (!Array.isArray(newContainer) ||\n                    (Array.isArray(newContainer) && newContainer.length > 0))) {\n                return this.changeContainer(newContainer);\n            } else {\n                throw new Error(\"Invalid pip-scroll-container attribute.\");\n            }\n        }\n\n    }\n\n    const InfiniteScroll = function (\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        $interval: ng.IIntervalService\n    ): ng.IDirective {\n        return {\n            scope: {\n                pipInfiniteScroll: '&',\n                pipScrollContainer: '=',\n                pipScrollDistance: '=',\n                pipScrollDisabled: '=',\n                pipScrollUseDocumentBottom: '=',\n                pipScrollListenForEvent: '@'\n            },\n            link: function (\n                $scope: InfiniteScrollScope,\n                $element: JQuery,\n                $attrs: InfiniteScrollAttributes\n            ) {\n                new InfiniteScrollLink($rootScope, $window, $interval, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipInfiniteScroll\", [])\n        .directive('pipInfiniteScroll', InfiniteScroll);\n}","{\n    interface SelectedAttributes extends ng.IAttributes {\n        pipSelected: any;\n        pipSelectedId: any;\n        pipSelect: any;\n        pipEnterSpacePress: any;\n        pipNoScroll: any;\n        pipSkipHidden: any;\n        pipTreeList: any;\n        pipSelectedWatch: any;\n    }\n\n    class SelectedLink {\n        private indexGetter: any;\n        private indexSetter: any;\n        private idSetter: any;\n        private idGetter: any;\n        private changeGetter: any;\n        private enterSpaceGetter: any;\n        private noScroll: any;\n        private modifier: any;\n        private className: any;\n        private selectedIndex: any;\n        private currentElementTabinex: any;\n        private pipSelectedWatch: any;\n        private isScrolled: any;\n        // Variables for touch functions\n        private touchStartX: any;\n        private touchStartY: any;\n        private trackingClick: any;\n        private trackingClickStart: any;\n        private targetElement: any;\n        private lastClickTime: any;\n        private cancelNextClick: any;\n        // Constants for touch functions\n        private touchBoundary: number = 10;\n        private tapdelay: number = 200;\n        private tapTimeout: number = 700;\n\n        constructor(\n            $parse: ng.IParseService,\n            private $mdConstant: any,\n            private $timeout: ng.ITimeoutService,\n            private $scope: ng.IScope,\n            private $element: JQuery,\n            private $attrs: SelectedAttributes\n        ) {\n            this.indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null;\n            this.indexSetter = this.indexGetter ? this.indexGetter.assign : null;\n            this.idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null;\n            this.idSetter = this.idGetter ? this.idGetter.assign : null;\n            this.changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null;\n            this.enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null;\n            this.noScroll = $attrs.pipNoScroll;\n            this.modifier = $attrs.pipSkipHidden ? ':visible' : '';\n            this.className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable';\n            this.selectedIndex = this.indexGetter($scope);\n            this.currentElementTabinex = $element.attr('tabindex');\n            this.pipSelectedWatch = $attrs.pipSelectedWatch;\n            this.isScrolled = false;\n\n            $element.attr('tabindex', this.currentElementTabinex || 0);\n\n            $element.on('click', this.className, (event) => {\n                this.onClickEvent(event);\n            });\n            $element.on('touchstart', this.className, (event) => {\n                this.onTouchStart(event);\n            });\n            $element.on('touchmove', this.className, (event) => {\n                this.onTouchMove(event);\n            });\n            $element.on('touchend', this.className, (event) => {\n                this.onTouchEnd(event);\n            });\n            $element.on('touchcancel', this.className, (event) => {\n                this.onTouchCancel(event);\n            });\n            $element.on('keydown', (event) => {\n                this.onKeyDown(event);\n            });\n            $element.on('focusin', (event) => {\n                this.onFocusIn(event);\n            });\n            $element.on('focusout', (event) => {\n                this.onFocusOut(event);\n            });\n\n            // Watch selected item index\n            if (!$attrs.pipTreeList) {\n                $scope.$watch(this.indexGetter, (newSelectedIndex) => {\n                    this.selectItem({\n                        itemIndex: newSelectedIndex\n                    });\n                });\n            } else {\n                $scope.$watch(this.idGetter, (newSelectedId) => {\n                    $timeout(() => {\n                        this.selectItem({\n                            itemId: newSelectedId,\n                            raiseEvent: true\n                        });\n                    }, 0);\n                });\n            }\n\n            // Watch resync selection\n            if (this.pipSelectedWatch) {\n                $scope.$watch(this.pipSelectedWatch, () => {\n                    // Delay update to allow ng-repeat to update DOM\n                    $timeout(() => {\n                        this.selectedIndex = this.indexGetter($scope);\n                        this.selectItem({\n                            itemIndex: this.selectedIndex\n                        });\n                    }, 100);\n                });\n            }\n\n            // Select item defined by index\n            this.selectItem({\n                itemIndex: this.selectedIndex,\n                items: $element.find(this.className)\n            });\n        }\n\n        private selectItem(itemParams) {\n            if (this.isScrolled) return;\n            let itemIndex = itemParams.itemIndex,\n                itemId = itemParams.itemId,\n                items = itemParams.items || this.$element.find(this.className + this.modifier),\n                itemsLength = items.length,\n                item = () => {\n                    if (itemParams.item) return itemParams.item;\n                    if (itemIndex === undefined && itemIndex === -1) {\n                        itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\n                    }\n                    if (itemIndex >= 0 && itemIndex < itemsLength) {\n                        return items[itemIndex]\n                    }\n\n                    return false;\n                },\n                raiseEvent = itemParams.raiseEvent;\n                item = item();\n            if (item) {\n                this.$element.find(this.className).removeClass('selected md-focused');\n                item = <any>angular.element(item)\n                    .addClass('selected md-focused')\n                    .focus();\n                if (!this.noScroll) this.scrollToItem(item);\n                if (raiseEvent) this.defineSelectedIndex(items);\n            }\n        };\n\n        private defineSelectedIndex(items) {\n            const oldSelectedIndex = this.selectedIndex;\n            this.selectedIndex = -1;\n            for (var index = 0; index < items.length; index++) {\n                if ($(items[index]).hasClass('selected')) {\n                    this.selectedIndex = index;\n\n                    break;\n                }\n            }\n\n            const updateIndex = () => {\n                const selectedItem = angular.element(items[this.selectedIndex]),\n                    selectedId = selectedItem.attr('pip-id');\n\n                if (this.indexSetter) this.indexSetter(this.$scope, this.selectedIndex);\n                if (this.idSetter) this.idSetter(this.$scope, selectedId);\n                onSelect();\n            };\n\n            const onSelect = () => {\n                const selectedItem = angular.element(items[this.selectedIndex]),\n                    selectedId = selectedItem.attr('pip-id');\n\n                if (this.changeGetter) {\n                    this.changeGetter(this.$scope, {\n                        $event: {\n                            target: this.$element,\n                            item: selectedItem,\n                            index: this.selectedIndex,\n                            id: selectedId,\n                            newIndex: this.selectedIndex,\n                            oldIndex: oldSelectedIndex\n                        }\n                    });\n                }\n            }\n\n            // Execute callback to notify about item select\n            if (oldSelectedIndex != this.selectedIndex && this.selectedIndex !== -1) {\n                this.$scope.$apply(() => { updateIndex(); });\n            } else {\n                this.$scope.$apply(() => { onSelect(); });\n            }\n        };\n\n        private scrollToItem($item) {\n            if (this.noScroll || !$item.offset()) return;\n\n            const\n                containerTop = this.$element.offset().top,\n                containerHeight = this.$element.height(),\n                containerBottom = containerTop + containerHeight,\n                itemTop = $item.offset().top,\n                itemHeight = $item.outerHeight(true),\n                itemBottom = itemTop + itemHeight,\n                containerScrollTop = this.$element.scrollTop();\n\n            this.isScrolled = true;\n            this.$timeout(() => {\n                this.isScrolled = false;\n            }, 100);\n\n            if (containerTop > itemTop) {\n                this.$element.scrollTop(containerScrollTop + itemTop - containerTop);\n            } else if (containerBottom < itemBottom) {\n                this.$element.scrollTop(containerScrollTop + itemBottom - containerBottom);\n            }\n        };\n\n        private getTargetElementFromEventTarget(eventTarget) {\n            // On some older browsers the event target may be a text node.\n            if (eventTarget.nodeType === Node.TEXT_NODE) {\n                return eventTarget.parentNode;\n            }\n\n            return eventTarget;\n        };\n\n        private touchHasMoved(event) {\n            const touch = event.changedTouches[0],\n                boundary = this.touchBoundary; // Touchmove boundary, beyond which a click will be cancelled.\n\n            if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\n                return true;\n            }\n\n            return false;\n        };\n\n        private onClickEvent(event) {\n            this.selectItem({\n                item: event.currentTarget,\n                raiseEvent: true\n            });\n        }\n\n        private onTouchStart(event) {\n            const ev = event.originalEvent;\n            if (ev['targetTouches'].length > 1) {\n                return true;\n            }\n            const targetElement = this.getTargetElementFromEventTarget(ev.target),\n                touch = ev['targetTouches'][0];\n\n            this.trackingClick = true;\n            this.trackingClickStart = ev.timeStamp;\n            this.targetElement = targetElement;\n\n            this.touchStartX = touch.pageX;\n            this.touchStartY = touch.pageY;\n\n            /*if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\n                //  event.preventDefault();\n            }*/\n\n            return true;\n        }\n\n        private onTouchMove(event) {\n            if (!this.trackingClick) {\n                return true;\n            }\n            const ev = event.originalEvent;\n            // If the touch has moved, cancel the click tracking\n            if (this.targetElement !== this.getTargetElementFromEventTarget(ev.target) || this.touchHasMoved(ev)) {\n                this.trackingClick = false;\n                this.targetElement = null;\n            }\n\n            return true;\n        }\n\n        private onTouchEnd(event) {\n            let forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = this.targetElement;\n\n            if (!this.trackingClick) {\n                return true;\n            }\n            const ev = event.originalEvent;\n            // Prevent phantom clicks on fast double-tap \n            if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\n                this.cancelNextClick = true;\n                return true;\n            }\n\n            if ((ev.timeStamp - this.trackingClickStart) > this.tapTimeout) {\n                return true;\n            }\n\n            // Reset to prevent wrong click cancel on input \n            this.cancelNextClick = false;\n\n            this.lastClickTime = event.timeStamp;\n\n            newTrackingClickStart = this.trackingClickStart;\n            this.trackingClick = false;\n            this.trackingClickStart = 0;\n\n            this.selectItem({\n                item: event.currentTarget,\n                raiseEvent: true\n            });\n\n            return false;\n        }\n\n        private onTouchCancel(event) {\n            this.trackingClick = false;\n            this.targetElement = null;\n        }\n\n        private onKeyDown(event) {\n            var keyCode = event.which || event.keyCode;\n\n            // Check control keyCode\n            if (keyCode == this.$mdConstant.KEY_CODE.ENTER || keyCode == this.$mdConstant.KEY_CODE.SPACE) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                if (this.enterSpaceGetter) {\n                    this.enterSpaceGetter(this.$scope, {\n                        $event: {\n                            target: this.$element,\n                            index: this.selectedIndex,\n                            item: this.$element.find('.selected')\n                        }\n                    });\n                }\n\n            } else\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW || keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\n            ) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // Get next selectable control index\n                const items = this.$element.find(this.className + this.modifier),\n                    inc = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                    newSelectedIndex = this.selectedIndex + inc;\n\n                // Set next control as selected\n                this.selectItem({\n                    itemIndex: newSelectedIndex,\n                    items: items,\n                    raiseEvent: true\n                });\n            }\n        }\n\n        private onFocusIn(event) {\n            // Choose selected element\n            let items,\n                selectedItem = this.$element.find(this.className + '.selected');\n\n            selectedItem.addClass('md-focused');\n\n            // If there are not selected elements then pick the first one\n            if (selectedItem.length === 0) {\n                this.selectedIndex = this.indexGetter(this.$scope);\n                items = this.$element.find(this.className + this.modifier);\n                this.selectItem({\n                    itemIndex: this.selectedIndex || 0,\n                    items: items,\n                    raiseEvent: true\n                });\n            }\n        }\n\n        private onFocusOut(event) {\n            this.$element.find(this.className + '.md-focused' + this.modifier).removeClass('md-focused');\n        }\n    }\n\n    const Selected = function (\n        $parse: ng.IParseService,\n        $mdConstant: any,\n        $timeout: ng.ITimeoutService\n    ): ng.IDirective {\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (\n                $scope: ng.IScope,\n                $element: JQuery,\n                $attrs: SelectedAttributes\n            ) {\n                new SelectedLink($parse, $mdConstant, $timeout, $scope, $element, $attrs);\n            }\n        }\n    }\n\n    angular\n        .module(\"pipSelected\", [])\n        .directive('pipSelected', Selected);\n}","import { ShortcutOptions } from \"./Shortcut\";\n\nexport class ShortcutItem {\n    // Shortcut combination\n    public shortcut: string;\n    // Target object \n    public target?: any;\n    // Target element by Id\n    public targetId?: string;\n    // Target element by class (firstelement??)\n    // Public targetClass?: string;\n    // Access function\n    public access?: (event: JQueryEventObject) => boolean;\n    // Window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public keypress?: (event: JQueryEventObject) => void;\n    // Default options\n    public options?: ShortcutOptions;    \n}\n\n// export class ShortcutItem extends SimpleShortcutItem {\n//     public shortcuts: SimpleShortcutItem[];\n// }\n\nexport class ShortcutsConfig {\n    // Global shortcut \n    public globalShortcuts: ShortcutItem[] = [];\n    // Local shortcut \n    public localShortcuts: ShortcutItem[] = [];\n    // Default options\n    public defaultOptions: ShortcutOptions = null;\n}\n\nexport interface IShortcutsService {\n    readonly config: ShortcutsConfig;\n\n    globalShortcuts: ShortcutItem[];\n    localShortcuts: ShortcutItem[];\n}\n\nexport interface IShortcutsProvider extends ng.IServiceProvider {\n    config: ShortcutsConfig;\n    \n    globalShortcuts: ShortcutItem[];\n    defaultOptions: ShortcutOptions;\n}\n","export class KeyboardEvent {\n    static Keydown: string = 'keydown';\n    static Keyup: string = 'keyup';\n    static Keypress: string = 'keypress';\n}\n\nexport class ShortcutOptions {\n    Type: KeyboardEvent;\n    Propagate: boolean;\n    DisableInInput: boolean;\n    Target: any; // Event target object\n    Keycode: number;\n}\n\nexport class Shortcut {\n    private shift_nums = {\n        \"`\": \"~\",\n        \"1\": \"!\",\n        \"2\": \"@\",\n        \"3\": \"#\",\n        \"4\": \"$\",\n        \"5\": \"%\",\n        \"6\": \"^\",\n        \"7\": \"&\",\n        \"8\": \"*\",\n        \"9\": \"(\",\n        \"0\": \")\",\n        \"-\": \"_\",\n        \"=\": \"+\",\n        \";\": \":\",\n        \"'\": \"\\\"\",\n        \",\": \"<\",\n        \".\": \">\",\n        \"/\": \"?\",\n        \"\\\\\": \"|\"\n    };\n\n    private special_keys = {\n        'esc': 27,\n        'escape': 27,\n        'tab': 9,\n        'space': 32,\n        'return': 13,\n        'enter': 13,\n        'backspace': 8,\n\n        'scrolllock': 145,\n        'scroll_lock': 145,\n        'scroll': 145,\n        'capslock': 20,\n        'caps_lock': 20,\n        'caps': 20,\n        'numlock': 144,\n        'num_lock': 144,\n        'num': 144,\n\n        'pause': 19,\n        'break': 19,\n\n        'insert': 45,\n        'home': 36,\n        'delete': 46,\n        'end': 35,\n\n        'pageup': 33,\n        'page_up': 33,\n        'pu': 33,\n\n        'pagedown': 34,\n        'page_down': 34,\n        'pd': 34,\n\n        'left': 37,\n        'up': 38,\n        'right': 39,\n        'down': 40,\n\n        'f1': 112,\n        'f2': 113,\n        'f3': 114,\n        'f4': 115,\n        'f5': 116,\n        'f6': 117,\n        'f7': 118,\n        'f8': 119,\n        'f9': 120,\n        'f10': 121,\n        'f11': 122,\n        'f12': 123\n    };\n\n    private modifiers = {\n        shift: { wanted: false, pressed: false },\n        ctrl: { wanted: false, pressed: false },\n        alt: { wanted: false, pressed: false },\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\n    };\n\n    public eventCallback: Function;\n    public target: any;\n    public event: KeyboardEvent;\n    public option: ShortcutOptions;\n    public shorcut: string;\n    public callback: Function;\n\n    public constructor(\n        element: any,\n        shorcutCombination: string,\n        option: ShortcutOptions,\n        callback: (e?: JQueryEventObject) => void\n    ) {\n        \"ngInject\";\n\n        this.target = element;\n        this.shorcut = shorcutCombination;\n        this.event = option.Type;\n        this.option = option;\n        this.callback = callback;\n\n        this.eventCallback = (event: JQueryEventObject) => {\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\n            let code: number;\n\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\n                let element;\n                if (e.target) {\n                    element = e.target;\n                } else if (e.srcElement) {\n                    element = e.srcElement;\n                }\n\n                if (element.nodeType == 3) {\n                    element = element.parentNode;\n                }\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\n            }\n            // Find Which key is pressed\n            if (e.keyCode) {\n                code = e.keyCode;\n            } else if (e.which) {\n                code = e.which;\n            }\n\n            let character = String.fromCharCode(code).toLowerCase();\n\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\n\n            let keys: string[] = this.shorcut.split(\"+\");\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\n            let kp: number = 0;\n\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\n\n            let i: number = 0;\n            for (i = 0; i < keys.length; i++) {\n                let k: string = keys[i];\n                // Modifiers\n                if (k == 'ctrl' || k == 'control') {\n                    kp++;\n                    this.modifiers.ctrl.wanted = true;\n                } else if (k == 'shift') {\n                    kp++;\n                    this.modifiers.shift.wanted = true;\n                } else if (k == 'alt') {\n                    kp++;\n                    this.modifiers.alt.wanted = true;\n                } else if (k == 'meta') {\n                    kp++;\n                    this.modifiers.meta.wanted = true;\n                } else if (k.length > 1) { // If it is a special key\n                    if (this.special_keys[k] == code) {\n                        kp++;\n                    }\n                } else if (this.option.Keycode) {\n                    if (this.option.Keycode == code) kp++;\n                } else { // The special keys did not match\n                    if (character == k) kp++;\n                    else {\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\n                            character = this.shift_nums[character];\n                            if (character == k) {\n                                kp++;\n                            }\n                        }\n                    }\n                }\n            }\n            \n            if (kp == keys.length &&\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\n\n                this.callback(e);\n\n                if (!this.option.Propagate) { // Stop the event\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n\n                    // e.stopPropagation works in Firefox.\n                    if (e.stopPropagation) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }\n\n                    return false;\n                }\n            }\n            this.modifiers.ctrl.pressed = false;\n            this.modifiers.shift.pressed = false;\n            this.modifiers.alt.pressed = false;\n            this.modifiers.meta.pressed = false;\n        };\n    }\n}\n","import { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\nimport { IKeyboardShortcuts, IShortcutBindingService, IShortcutBindingProvider } from './IShortcutBindingService';\n\n{\n    class ShortcutBindingService implements IShortcutBindingService {\n        private _log: ng.ILogService;\n        private _defaultOption: ShortcutOptions;\n        private _shortcuts: IKeyboardShortcuts = {};\n\n        public constructor(\n            $log: ng.ILogService,\n            option: ShortcutOptions\n        ) {\n            \"ngInject\";\n            this._log = $log;\n            this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\n        }\n\n        private getDefaultOption(): ShortcutOptions {\n            let defaultOption: ShortcutOptions = {\n                Type: KeyboardEvent.Keydown,\n                Propagate: false,\n                DisableInInput: false,\n                Target: document,\n                Keycode: null\n            };\n\n            return defaultOption;\n        }\n\n        public get shortcuts(): IKeyboardShortcuts {\n            return this._shortcuts;\n        }\n\n        public add(shortcut: string, callback: (e: JQueryEventObject) => void, option: ShortcutOptions): void {\n            this.remove(shortcut);\n            let shortcutOption: ShortcutOptions = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\n            let shortcutCombination: string = shortcut.toLowerCase();\n            let element = shortcutOption.Target;\n\n            if (typeof shortcutOption.Target == 'string') {\n                element = document.getElementById(shortcutOption.Target);\n            } else {\n                element = shortcutOption.Target;\n            }\n\n            if (!element) {\n                this._log.error('Register shortcut: element undentified!');\n                return;\n            }\n\n            if (!shortcutCombination) {\n                this._log.error('Register shortcut: shortcut combination undentified!');\n                return;\n            }\n\n            if (!callback) {\n                this._log.error('Register shortcut: shorcut callback undentified!');\n                return;\n            }\n\n            let newKeyboardShortcut = new Shortcut(element, shortcutCombination, shortcutOption, callback);\n\n            this._shortcuts[shortcutCombination] = newKeyboardShortcut;\n\n            //Attach the function with the event\n            if (element.addEventListener) {\n                element.addEventListener(shortcutOption.Type, newKeyboardShortcut.eventCallback, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + shortcutOption.Type, newKeyboardShortcut.eventCallback);\n            } else {\n                element.on(shortcutOption.Type, newKeyboardShortcut.eventCallback);\n            }\n        }\n\n        public remove(shorcut: string): void {\n            let shortcutCombination = shorcut.toLowerCase();\n            let binding: Shortcut = this._shortcuts[shortcutCombination];\n\n            delete(this._shortcuts[shortcutCombination])\n            if (!binding) return;\n\n            let type = binding.event;\n            let element = binding.target;\n            let callback = binding.eventCallback;\n\n            if (element.detachEvent) {\n                element.detachEvent('on' + type, callback);\n            } else if (element.removeEventListener) {\n                element.removeEventListener(type, callback, false);\n            } else {\n                // element['on' + type] = false;\n                element.off(type, callback);\n            }\n        }\n    }\n\n    class ShortcutBindingProvider implements IShortcutBindingProvider {\n        private _service: ShortcutBindingService;\n        private _option: ShortcutOptions;\n\n        public get option(): ShortcutOptions {\n            return this._option;\n        }\n\n        public set option(value: ShortcutOptions) {\n            this._option = value || new ShortcutOptions();\n        }\n\n        public $get(\n            $log: ng.ILogService\n        ) {\n            \"ngInject\";\n\n            if (this._service == null)\n                this._service = new ShortcutBindingService($log, this._option);\n\n            return this._service;\n        }\n    }\n\n    angular\n        .module('pipShortcuts')\n        .provider('pipShortcutBinding', ShortcutBindingProvider);\n}","import { ShortcutOptions } from \"./Shortcut\";\nimport { IShortcutBindingService } from \"./IShortcutBindingService\";\n\ninterface ShortcutAttributes extends ng.IAttributes {\n    pipShortcutAction: any;\n    pipShortcutName: any;\n    pipShorcutOptions: ShortcutOptions;\n}\n\nclass ShortcutController implements ng.IController  {\n    private actionShortcuts: Function;\n    private nameShortcuts: string;\n    private options: ShortcutOptions;\n\n    constructor(\n        $element: JQuery,\n        $attrs: ShortcutAttributes,\n        $scope: ng.IScope,\n        $log: ng.ILogService,\n        $parse: ng.IParseService,\n        pipShortcutBinding: IShortcutBindingService\n    ) {\n        \"ngInject\";\n\n        if ($attrs.pipShortcutAction) {\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\n            this.actionShortcuts($scope, {$event: {}});\n        } else {\n            $log.error('Shortcut action does not set.');\n\n            return\n        }\n\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\n            this.nameShortcuts = $attrs.pipShortcutName;\n        } else {\n            $log.error('Shortcut name does not set.');\n\n            return\n        }\n\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOptions>$attrs.pipShorcutOptions : <ShortcutOptions>{};\n        this.options.Target = $element;\n        \n        // Registration of keybord shortcuts\n        pipShortcutBinding.add(this.nameShortcuts, (e?: any) => {\n            this.actionShortcuts($scope, {$event: {'e': e}});          \n        }, this.options);\n    }\n\n    private keypressShortcut(action) {\n        this.actionShortcuts();\n    }\n}\n\n// Prevent junk from going into typescript definitions\n{\n    const shortcutsDirective = function(): ng.IDirective {\n        return {\n            restrict: 'A',\n            scope: false,            \n            controller: ShortcutController\n        };\n    }\n\n    angular\n        .module('pipShortcuts')\n        .directive('pipShortcut', shortcutsDirective);\n}","import { IShortcutBindingService } from \"./IShortcutBindingService\"\nimport { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\nimport { ShortcutsConfig, ShortcutItem, IShortcutsService, IShortcutsProvider } from './IShortcutsService';\n\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\n\nclass ShortcutsService implements IShortcutsService {\n    private _oldConfig: ShortcutsConfig;\n    private _config: ShortcutsConfig;\n\n    public constructor(\n        config: ShortcutsConfig,\n        private $rootScope: ng.IRootScopeService,\n        private $window: ng.IWindowService, \n        private $location: ng.ILocationService, \n        private $injector: ng.auto.IInjectorService,\n        private pipShortcutBinding: IShortcutBindingService\n    ) {\n        this._config = config;\n        this._oldConfig = _.cloneDeep(this._config);\n\n        // Add shortcuts\n        this.addShortcuts(this._config.globalShortcuts);\n        this.addShortcuts(this._config.localShortcuts);        \n    }\n\n    // Describe private functions\n    private sendChangeEvent() {\n        // Remove shortcuts\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\n        this.removeShortcuts(this._oldConfig.localShortcuts);\n\n        // Add shortcuts\n        this.addShortcuts(this.config.globalShortcuts);\n        this.addShortcuts(this.config.localShortcuts);\n\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\n\n        // Save current config to oldConfig\n        this._oldConfig = _.cloneDeep(this.config);\n    }\n\n    private removeShortcuts(collection: ShortcutItem[]): void {\n        _.each(collection, (k) => {\n            this.pipShortcutBinding.remove(k.shortcut);\n        });\n    }\n\n    private keypressShortcut(item: ShortcutItem, event: JQueryEventObject) {\n        if (item.access && _.isFunction(item.access)) {\n            if (!item.access(event)) {\n                return;\n            }\n        } \n\n        if (item.keypress) {\n            item.keypress(event);\n            return;\n        }\n\n        if (item.href) {\n            this.$window.location.href = item.href;\n            return;\n        }\n\n        if (item.url) {\n            this.$location.url(item.url);\n            return;\n        }\n\n        if (item.state) {\n            if (this.$injector.has('$state')) {\n                var $state = this.$injector.get('$state');\n                $state['go'](item.state, item.stateParams);\n            }\n            return;\n        }\n\n        if (item.event) {\n            this.$rootScope.$broadcast(item.event);\n        } else {\n            // Otherwise raise notification\n            this.$rootScope.$broadcast('pipShortcutKeypress', item.shortcut);\n        }\n    }\n\n    private addShortcuts(collection: ShortcutItem[]): void {\n        let generalOptions: ShortcutOptions = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOptions>{};\n        \n        _.each(collection, (k) => {\n            let option: ShortcutOptions = k.options ? k.options : generalOptions;\n            let target: any;\n\n            target = k.target ? k.target : k.targetId;\n            option.Target = target;\n            // Registration of keyboard shortcut\n            this.pipShortcutBinding.add(k.shortcut, (e?: any) => {\n                this.keypressShortcut(k, e);        \n            }, option);              \n        });\n    }\n\n    // Describe public functions \n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public get defaultOptions(): ShortcutOptions {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOptions) {\n        this._config.defaultOptions = value || null;\n        this.sendChangeEvent();\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get localShortcuts(): ShortcutItem[] {\n        return this._config.localShortcuts;\n    }\n\n    public set localShortcuts(value: ShortcutItem[]) {\n        this._config.localShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n}\n\nclass ShortcutsProvider implements IShortcutsProvider {\n    private _config: ShortcutsConfig = new ShortcutsConfig();\n    private _service: ShortcutsService;\n\n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public set config(value: ShortcutsConfig) {\n        this._config = value || new ShortcutsConfig();\n    }\n\n    public get defaultOptions(): ShortcutOptions {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOptions) {\n        this._config.defaultOptions = value || null;\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService, \n        $window: ng.IWindowService, \n        $location: ng.ILocationService, \n        $injector: ng.auto.IInjectorService,\n        pipShortcutBinding: IShortcutBindingService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutBinding);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipShortcuts')\n    .provider('pipShortcuts', ShortcutsProvider);\n\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\n\nimport './ShortcutBindingService';\nimport './ShortcutsService';\nimport './ShortcutDirective';\n\nexport * from './IShortcutsService';\nexport * from './IShortcutBindingService';\nexport * from './ShortcutsService';\nexport * from './ShortcutBindingService';","{\n    interface UnsavedChangesScope extends ng.IScope {\n        unsavedChangesAvailable: Function;\n        unsavedChangesMessage: string;\n        cancelLeave: Function;\n        afterLeave: Function;\n    }\n\n    class UnsavedChangesLink {\n        constructor(\n            $scope: UnsavedChangesScope,\n            $window: ng.IWindowService\n        ) {\n            $window.onbeforeunload = () => {\n                if ($scope.unsavedChangesAvailable()) {\n                    return $scope.unsavedChangesMessage;\n                }\n            };\n\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\n                    event.preventDefault();\n                } else {\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\n                }\n            });\n\n            $scope.$on('$destroy', () => {\n                $window.onbeforeunload = null;\n                unbindFunc();\n            });\n        }\n    }\n\n    const UnsavedChanges = function ($window: ng.IWindowService) {\n        return {\n            restrict: 'AE',\n            scope: {\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\n                afterLeave: '&pipUnsavedChangesAfterLeave',\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\n            },\n            link: function ($scope: UnsavedChangesScope) {\n                new UnsavedChangesLink($scope, $window);\n            }\n        };\n    }\n\n    angular\n        .module(\"pipUnsavedChanges\", [])\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}