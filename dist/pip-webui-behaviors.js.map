{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/behaviors.ts","src/draggable/draggable.ts","src/focused/focused.ts","src/infinite_scroll/infinite_scroll.ts","src/keyboard_shortcuts/KeyboardShortcut.ts","src/keyboard_shortcuts/ShorcutsRegisterService.ts","src/keyboard_shortcuts/ShortcutDirective.ts","src/keyboard_shortcuts/ShortcutsService.ts","src/keyboard_shortcuts/index.ts","src/selected/selected.ts","src/unsaved_changes/unsaved_changes.ts"],"names":[],"mappings":"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","file":"pip-webui-behaviors.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿/**\n * @file Registration of all WebUI list controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    angular.module('pipBehaviors', [\n        'pipFocused',\n        'pipSelected',\n        'pipInfiniteScroll',\n        'pipUnsavedChanges',\n        'pipDraggable',\n        'pipShortcuts'\n    ]);\n    \n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipDraggable\", []);\n\n    thisModule.service('pipDraggable', function () {\n\n        var scope = this;\n        scope.inputEvent = function (event) {\n            if (angular.isDefined(event.touches)) {\n                return event.touches[0];\n            }\n            //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\n            else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\n                return event.originalEvent.touches[0];\n            }\n            return event;\n        };\n\n    });\n\n    thisModule.directive('pipDrag',\n        function ($rootScope, $parse, $document, $window, pipDraggable) {\n            return {\n\n                restrict: 'A',\n                link: function (scope: any, element, attrs: any) {\n                    scope.value = attrs.ngDrag;\n                    var LONG_PRESS = 50; // 50ms for longpress\n                    var offset, _centerAnchor = false, _mx, _my, _tx, _ty, _mrx, _mry;\n                    var _hasTouch = ('ontouchstart' in window) || (<any>window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\n                    var _pressEvents = 'touchstart mousedown';\n                    var _moveEvents = 'touchmove mousemove';\n                    var _releaseEvents = 'touchend mouseup';\n                    var _dragHandle;\n\n                    // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\n                    var _myid = scope.$id;\n                    var _data = null;\n\n                    var _dragOffset = null;\n\n                    var _dragEnabled = false;\n\n                    var _pressTimer = null;\n\n                    var _elementStyle: any = {};\n\n                    var onDragStartCallback = $parse(attrs.pipDragStart) || null;\n                    var onDragStopCallback = $parse(attrs.pipDragStop) || null;\n                    var onDragSuccessCallback = $parse(attrs.pipDragSuccess) || null;\n                    var allowTransform = angular.isDefined(attrs.allowTransform) ? scope.$eval(attrs.allowTransform) : false;\n\n                    var getDragData = $parse(attrs.pipDragData);\n                    var\n                        verticalScroll = toBoolean(attrs.pipVerticalScroll) || true,\n                        horizontalScroll = toBoolean(attrs.pipHorizontalScroll) || true,\n                        activationDistance = parseFloat(attrs.pipActivationDistance) || 75,\n                        scrollDistance = parseFloat(attrs.pipScrollDistance) || 50,\n                        scrollParent = false,\n\n                        scrollContainer = angular.element(window),\n                        scrollContainerGetter = $parse(attrs.pipScrollContainer);\n\n                    // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\n                    var _deregisterRootMoveListener = angular.noop;\n\n                    initialize();\n\n                    return;\n\n                    //-----------------------------------\n\n                    function initialize() {\n                        element.attr('pip-draggable', 'false'); // prevent native drag\n                        // check to see if drag handle(s) was specified\n                        // if querySelectorAll is available, we use this instead of find\n                        // as JQLite find is limited to tagnames\n                        let dragHandles: any;\n                        if (element[0].querySelectorAll) {\n                            dragHandles = angular.element(element[0].querySelectorAll('[pip-drag-handle]'));\n                        } else {\n                            dragHandles = element.find('[pip-drag-handle]');\n                        }\n                        if (dragHandles.length) {\n                            _dragHandle = dragHandles;\n                        }\n                        toggleListeners(true);\n\n                        // Initialize scroll container\n                        if (scrollParent) {\n                            scrollContainer = angular.element(element.parent());\n                        } else if (attrs.pipScrollContainer) {\n                            scrollContainer = angular.element(scrollContainerGetter(scope));\n                        } else {\n                            scrollContainer = angular.element(window);\n                        }\n                    }\n\n                    function toBoolean(value) {\n                        if (value == null) return false;\n                        if (!value) return false;\n                        value = value.toString().toLowerCase();\n                        return value == '1' || value == 'true';\n                    }\n\n                    function toggleListeners(enable) {\n                        if (!enable)return;\n                        // add listeners.\n\n                        scope.$on('$destroy', onDestroy);\n                        scope.$watch(attrs.pipDrag, onEnableChange);\n                        scope.$watch(attrs.pipCenterAnchor, onCenterAnchor);\n                        // wire up touch events\n                        if (_dragHandle) {\n                            // handle(s) specified, use those to initiate drag\n                            _dragHandle.on(_pressEvents, onpress);\n                        } else {\n                            // no handle(s) specified, use the element as the handle\n                            element.on(_pressEvents, onpress);\n                        }\n                        if (!_hasTouch && element[0].nodeName.toLowerCase() == \"img\") {\n                            element.on('mousedown', function () {\n                                return false;\n                            }); // prevent native drag for images\n                        }\n                    }\n                    \n                    function onDestroy(enable) {\n                        toggleListeners(false);\n                    }\n\n                    function onEnableChange(newVal, oldVal) {\n                        _dragEnabled = (newVal);\n                    }\n\n                    function onCenterAnchor(newVal, oldVal) {\n                        if (angular.isDefined(newVal))\n                            _centerAnchor = (newVal || 'true');\n                    }\n\n                    function isClickableElement(evt) {\n                        return (\n                            angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\n                        );\n                    }\n\n                    /*\n                     * When the element is clicked start the drag behaviour\n                     * On touch devices as a small delay so as not to prevent native window scrolling\n                     */\n                    function onpress(evt) {\n                        if (!_dragEnabled)return;\n\n                        if (isClickableElement(evt)) {\n                            return;\n                        }\n\n                        if (evt.type == \"mousedown\" && evt.button != 0) {\n                            // Do not start dragging on right-click\n                            return;\n                        }\n\n                        saveElementStyles();\n\n                        if (_hasTouch) {\n                            cancelPress();\n                            _pressTimer = setTimeout(function () {\n                                cancelPress();\n                                onlongpress(evt);\n                            }, LONG_PRESS);\n                            $document.on(_moveEvents, cancelPress);\n                            $document.on(_releaseEvents, cancelPress);\n                        } else {\n                            onlongpress(evt);\n                        }\n\n                    }\n\n                    function saveElementStyles() {\n                        _elementStyle.left = element.css('css') || 0;\n                        _elementStyle.top = element.css('top') || 0;\n                        _elementStyle.position = element.css('position');\n                        _elementStyle.width = element.css('width');    \n                    }\n\n                    function cancelPress() {\n                        clearTimeout(_pressTimer);\n                        $document.off(_moveEvents, cancelPress);\n                        $document.off(_releaseEvents, cancelPress);\n                    }\n\n                    function onlongpress(evt) {\n                        if (!_dragEnabled)return;\n                        evt.preventDefault();\n\n                        offset = element[0].getBoundingClientRect();\n                        if (allowTransform)\n                            _dragOffset = offset;\n                        else {\n                            _dragOffset = {left: document.body.scrollLeft, top: document.body.scrollTop};\n                        }\n\n\n                        (<any>element).centerX = element[0].offsetWidth / 2;\n                        (<any>element).centerY = element[0].offsetHeight / 2;\n\n                        _mx = pipDraggable.inputEvent(evt).pageX;\n                        _my = pipDraggable.inputEvent(evt).pageY;\n                        _mrx = _mx - offset.left;\n                        _mry = _my - offset.top;\n                        if (_centerAnchor) {\n                            _tx = _mx - (<any>element).centerX - $window.pageXOffset;\n                            _ty = _my - (<any>element).centerY - $window.pageYOffset;\n                        } else {\n                            _tx = _mx - _mrx - $window.pageXOffset;\n                            _ty = _my - _mry - $window.pageYOffset;\n                        }\n\n                        $document.on(_moveEvents, onmove);\n                        $document.on(_releaseEvents, onrelease);\n                        // This event is used to receive manually triggered mouse move events\n                        // jqLite unfortunately only supports triggerHandler(...)\n                        // See http://api.jquery.com/triggerHandler/\n                        // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\n                        _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', function (event, origEvent) {\n                            onmove(origEvent);\n                        });\n                    }\n\n                    function onmove(evt) {\n                        if (!_dragEnabled)return;\n                        evt.preventDefault();\n\n                        if (!element.hasClass('pip-dragging')) {\n                            _data = getDragData(scope);\n                            element.addClass('pip-dragging');\n                            $rootScope.$broadcast('draggable:start', {\n                                x: _mx,\n                                y: _my,\n                                tx: _tx,\n                                ty: _ty,\n                                event: evt,\n                                element: element,\n                                data: _data\n                            });\n\n                            if (onDragStartCallback) {\n                                scope.$apply(function () {\n                                    onDragStartCallback(scope, {$data: _data, $event: evt});\n                                });\n                            }\n                        }\n\n                        _mx = pipDraggable.inputEvent(evt).pageX;\n                        _my = pipDraggable.inputEvent(evt).pageY;\n\n                        if (horizontalScroll || verticalScroll) {\n                            dragToScroll();\n                        }\n\n                        if (_centerAnchor) {\n                            _tx = _mx - (<any>element).centerX - _dragOffset.left;\n                            _ty = _my - (<any>element).centerY - _dragOffset.top;\n                        } else {\n                            _tx = _mx - _mrx - _dragOffset.left;\n                            _ty = _my - _mry - _dragOffset.top;\n                        }\n\n                        moveElement(_tx, _ty);\n\n                        $rootScope.$broadcast('draggable:move', {\n                            x: _mx,\n                            y: _my,\n                            tx: _tx,\n                            ty: _ty,\n                            event: evt,\n                            element: element,\n                            data: _data,\n                            uid: _myid,\n                            dragOffset: _dragOffset\n                        });\n                    }\n\n                    function onrelease(evt) {\n                        if (!_dragEnabled)\n                            return;\n                        evt.preventDefault();\n                        $rootScope.$broadcast('draggable:end', {\n                            x: _mx,\n                            y: _my,\n                            tx: _tx,\n                            ty: _ty,\n                            event: evt,\n                            element: element,\n                            data: _data,\n                            callback: onDragComplete,\n                            uid: _myid\n                        });\n                        element.removeClass('pip-dragging');\n                        element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\n                        reset();\n                        $document.off(_moveEvents, onmove);\n                        $document.off(_releaseEvents, onrelease);\n\n                        if (onDragStopCallback) {\n                            scope.$apply(function () {\n                                onDragStopCallback(scope, {$data: _data, $event: evt});\n                            });\n                        }\n\n                        _deregisterRootMoveListener();\n                    }\n\n                    function onDragComplete(evt) {\n                        if (!onDragSuccessCallback)return;\n\n                        scope.$apply(function () {\n                            onDragSuccessCallback(scope, {$data: _data, $event: evt});\n                        });\n                    }\n\n                    function reset() {\n                        if (allowTransform)\n                            element.css({transform: '', 'z-index': '', '-webkit-transform': '', '-ms-transform': ''});\n                        else {\n                            element.css({'position': _elementStyle.position, top: _elementStyle.top, left: _elementStyle.left, 'z-index': '', width: _elementStyle.width});\n                        }\n                    }\n\n                    function moveElement(x, y) {\n                        var eWidth = element.css('width');\n                        if (allowTransform) {\n                            element.css({\n                                transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                                'z-index': 99999,\n                                '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n                                '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n                            });\n                        } else {\n                            element.css({\n                                'left': x + 'px',\n                                'top': y + 'px',\n                                'position': 'fixed',\n                                'z-index': 100,\n                                width: eWidth\n                            });\n                        }\n                    }\n\n                    function dragToScroll() {\n                        var scrollX = 0, scrollY = 0,\n                            offset = function (element) {\n                                return element.offset() || {left: 0, top: 0};\n                            };\n\n                        if (horizontalScroll) {\n                            var\n                                containerLeft = offset(scrollContainer).left,\n                                containerWidth = scrollContainer.innerWidth(),\n                                containerRight = containerLeft + containerWidth;\n\n                            if ((_mx - containerLeft) < activationDistance) {\n                                scrollX = -scrollDistance;\n                            }\n                            else if ((containerRight - _mx) < activationDistance) {\n                                scrollX = scrollDistance;\n                            }\n                        }\n\n                        if (verticalScroll) {\n                            var\n                                containerTop = offset(scrollContainer).top,\n                                containerHeight = scrollContainer.innerHeight(),\n                                containerBottom = containerTop + containerHeight;\n\n                            if ((_my - containerTop) < activationDistance) {\n                                scrollY = -scrollDistance + 30;\n                            }\n                            else if ((containerBottom - _my) < activationDistance) {\n                                scrollY = scrollDistance - 30;\n                            }\n                        }\n                        if (scrollX !== 0 || scrollY !== 0) {\n                            var\n                                containerScrollLeft = scrollContainer.scrollLeft(),\n                                containerScrollTop = scrollContainer.scrollTop();\n\n                            scrollContainer.scrollLeft(containerScrollLeft + scrollX);\n                            scrollContainer.scrollTop(containerScrollTop + scrollY);\n                        }\n\n                    }\n                }\n            }\n        });\n\n    thisModule.directive('pipDrop', \n        function ($parse, $timeout, $window, $document, pipDraggable) {\n        return {\n            restrict: 'A',\n            link: function (scope: any, element, attrs: any) {\n                scope.value = attrs.pipDrop;\n                scope.isTouching = false;\n\n                var _lastDropTouch = null;\n                var _myid = scope.$id;\n                var _dropEnabled = false;\n\n                var onDropCallback = $parse(attrs.pipDropSuccess);// || function(){};\n                var onDragStartCallback = $parse(attrs.pipDragStart);\n                var onDragStopCallback = $parse(attrs.pipDragStop);\n                var onDragMoveCallback = $parse(attrs.pipDragMove);\n\n                initialize();\n\n                return;\n\n                //----------------------\n\n                function initialize() {\n                    toggleListeners(true);\n                }\n\n                function toggleListeners(enable) {\n                    // remove listeners\n                    if (!enable)return;\n                    // add listeners.\n                    scope.$watch(attrs.pipDrop, onEnableChange);\n                    scope.$on('$destroy', onDestroy);\n                    scope.$on('draggable:start', onDragStart);\n                    scope.$on('draggable:move', onDragMove);\n                    scope.$on('draggable:end', onDragEnd);\n                }\n\n                function onDestroy(enable) {\n                    toggleListeners(false);\n                }\n\n                function onEnableChange(newVal, oldVal) {\n                    _dropEnabled = newVal;\n                }\n\n                function onDragStart(evt, obj) {\n                    if (!_dropEnabled)return;\n                    isTouching(obj.x, obj.y, obj.element);\n\n                    if (attrs.pipDragStart) {\n                        $timeout(function () {\n                            onDragStartCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n                }\n\n                function onDragMove(evt, obj) {\n                    if (!_dropEnabled)return;\n                    isTouching(obj.x, obj.y, obj.element);\n\n                    if (attrs.pipDragMove) {\n                        $timeout(function () {\n                            onDragMoveCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n                }\n\n                function onDragEnd(evt, obj) {\n                    // don't listen to drop events if this is the element being dragged\n                    // only update the styles and return\n                    if (!_dropEnabled || _myid === obj.uid) {\n                        updateDragStyles(false, obj.element);\n                        return;\n                    }\n\n                    if (isTouching(obj.x, obj.y, obj.element)) {\n                        // call the pipDraggable pipDragSuccess element callback\n                        if (obj.callback) {\n                            obj.callback(obj);\n                        }\n\n                        if (attrs.pipDropSuccess) {\n                            $timeout(function () {\n                                onDropCallback(scope, {\n                                    $data: obj.data,\n                                    $event: obj,\n                                    $target: scope.$eval(scope.value)\n                                });\n                            });\n                        }\n                    }\n\n                    if (attrs.pipDragStop) {\n                        $timeout(function () {\n                            onDragStopCallback(scope, {$data: obj.data, $event: obj});\n                        });\n                    }\n\n                    updateDragStyles(false, obj.element);\n                }\n\n                function isTouching(mouseX, mouseY, dragElement) {\n                    var touching = hitTest(mouseX, mouseY);\n                    scope.isTouching = touching;\n                    if (touching) {\n                        _lastDropTouch = element;\n                    }\n                    updateDragStyles(touching, dragElement);\n                    return touching;\n                }\n\n                function updateDragStyles(touching, dragElement) {\n                    if (touching) {\n                        element.addClass('pip-drag-enter');\n                        dragElement.addClass('pip-drag-over');\n                    } else if (_lastDropTouch == element) {\n                        _lastDropTouch = null;\n                        element.removeClass('pip-drag-enter');\n                        dragElement.removeClass('pip-drag-over');\n                    }\n                };\n\n                function hitTest(x, y) {\n                    var bounds = element[0].getBoundingClientRect();\n                    x -= $document[0].body.scrollLeft + $document[0].documentElement.scrollLeft;\n                    y -= $document[0].body.scrollTop + $document[0].documentElement.scrollTop;\n                    return x >= bounds.left\n                        && x <= bounds.right\n                        && y <= bounds.bottom\n                        && y >= bounds.top;\n                }\n            }\n        };\n    });\n\n    //thisModule.directive('pipDragClone', function ($parse, $timeout, pipDraggable) {\n    //    return {\n    //        restrict: 'A',\n    //        link: function (scope, element, attrs) {\n    //            var img, _allowClone = true;\n    //            var _dragOffset = null;\n    //            scope.clonedData = {};\n    //            initialize();\n    //            return;\n\n    //            function initialize() {\n//\n    //                img = element.find('img');\n    //                element.attr('pip-draggable', 'false');\n    //                img.attr('draggable', 'false');\n    //                reset();\n    //                toggleListeners(true);\n    //            }\n//\n//\n    //            function toggleListeners(enable) {\n    //                // remove listeners\n//\n    //                if (!enable)return;\n    //                // add listeners.\n    //                scope.$on('draggable:start', onDragStart);\n    //                scope.$on('draggable:move', onDragMove);\n    //                scope.$on('draggable:end', onDragEnd);\n    //                preventContextMenu();\n//\n    //            }\n\n    //            function preventContextMenu() {\n    //                //  element.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                img.off('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                //  element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //                img.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n    //            }\n\n    //            function onDragStart(evt, obj, elm) {\n    //                _allowClone = true;\n    //                if (angular.isDefined(obj.data.allowClone)) {\n    //                    _allowClone = obj.data.allowClone;\n    //                }\n    //                if (_allowClone) {\n    //                    scope.$apply(function () {\n    //                        scope.clonedData = obj.data;\n    //                    });\n    //                    element.css('width', obj.element[0].offsetWidth);\n    //                    element.css('height', obj.element[0].offsetHeight);\n//\n    //                    moveElement(obj.tx, obj.ty);\n    //                }\n//\n    //            }\n\n    //            function onDragMove(evt, obj) {\n    //                if (_allowClone) {\n//\n    //                    _tx = obj.tx + obj.dragOffset.left;\n    //                    _ty = obj.ty + obj.dragOffset.top;\n//\n    //                    moveElement(_tx, _ty);\n    //                }\n    //            }\n\n    //            function onDragEnd(evt, obj) {\n    //                //moveElement(obj.tx,obj.ty);\n    //                if (_allowClone) {\n    //                    reset();\n    //                }\n    //            }\n//\n    //            function reset() {\n    //                element.css({left: 0, top: 0, position: 'fixed', 'z-index': -1, visibility: 'hidden'});\n    //            }\n\n    //            function moveElement(x, y) {\n    //                element.css({\n    //                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n    //                    'z-index': 99999,\n    //                    'visibility': 'visible',\n    //                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\n    //                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\n    //                    //,margin: '0'  don't monkey with the margin,\n    //                });\n    //            }\n//\n    //            function absorbEvent_(event) {\n    //                var e = event;//.originalEvent;\n    //                e.preventDefault && e.preventDefault();\n    //                e.stopPropagation && e.stopPropagation();\n    //                e.cancelBubble = true;\n    //                e.returnValue = false;\n    //                return false;\n    //            }\n//\n    //        }\n    //    };\n    //});\n\n    thisModule.directive('pipPreventDrag', function ($parse, $timeout) {\n        return {\n            restrict: 'A',\n            link: function (scope: any, element, attrs: any) {\n                initialize();\n\n                return;\n                //---------------------\n\n                function initialize() {\n                    element.attr('pip-draggable', 'false');\n                    toggleListeners(true);\n                }\n\n                function toggleListeners(enable) {\n                    // remove listeners\n                    if (!enable)return;\n                    // add listeners.\n                    element.on('mousedown touchstart touchmove touchend touchcancel', absorbEvent_);\n                }\n\n                function absorbEvent_(event) {\n                    var e = event.originalEvent;\n                    e.preventDefault && e.preventDefault();\n                    e.stopPropagation && e.stopPropagation();\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n                    return false;\n                }\n            }\n        };\n    });\n\n    thisModule.directive('pipCancelDrag', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\n            }\n        };\n    });\n})();\n\n","/**\n * @file Keyboard navigation over few focusable controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipFocused\", []);\n\n    thisModule.directive('pipFocused', function ($timeout, $mdConstant, $window) {\n        return {\n            // restrict: 'EA',\n            require: \"?ngModel\",\n            link: function ($scope: any, $element, $attrs: any) {\n                var controls, controlsLength,\n                    withHidden = $attrs.pipWithHidden,\n                    opacityDelta = 0.4,\n                    opacityLimit = 0.5,\n                    _color,\n                    focusedColor = $attrs.pipFocusedColor ? $attrs.pipFocusedColor : null,\n                    reInit = $attrs.pipFocusedRebind ? $attrs.pipFocusedRebind : null,\n                    focusedTabindex = $attrs.pipFocusedTabindex ? parseInt($attrs.pipFocusedTabindex) || 0 : 0,\n                    isOpacity = $attrs.pipFocusedOpacity ? toBoolean($attrs.pipFocusedOpacity) : false;\n\n                $timeout(init);\n                $element.on('keydown', keydownListener);\n\n                if ($attrs.ngModel) {\n                    $scope.$watch($attrs.ngModel, function () {\n                        $timeout(init);\n                    }, true);\n                }\n\n                if ($attrs.pipFocusedData) {\n                    $attrs.$observe('pipFocusedData', function () {\n                        $timeout(init);\n                    }, true);\n                }      \n                          \n                // Converts value into boolean\n                function toBoolean(value) {\n                    if (value == null) return false;\n                    if (!value) return false;\n                    value = value.toString().toLowerCase();\n                    return value == '1' || value == 'true';\n                };\n\n                function rgba(color) {\n                    if (focusedColor) {\n                        return focusedColor;\n                    }\n\n                    var arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\n\n                    if (!arr || arr.length < 3) {\n                        return ''\n                    }\n\n                    let red, blue, green, opacity;\n\n                    opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\n                    red = arr[0];\n                    blue = arr[1];\n                    green = arr[2];\n\n                    if (opacity < opacityLimit) {\n                        opacity += opacityDelta;\n                    } else {\n                        opacity -= opacityDelta;\n                    }\n\n                    return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\n                }\n\n                function setTabindex(element, value) {\n                    element.attr('tabindex', value);\n                }\n\n                function checkTabindex(controls) {\n                    let index = _.findIndex(controls, (c) => {\n                        return c['tabindex'] > -1;\n                    });\n\n                    if (index == -1 && controls.length > 0) {\n                        // let el = controls[0];\n                        setTabindex(angular.element(controls[0]), focusedTabindex);\n                    }\n                }\n\n                function init() {\n                    var selector = withHidden ? '.pip-focusable' : '.pip-focusable:visible';\n                    controls = $element.find(selector);\n                    controlsLength = controls.length;\n                    checkTabindex(controls);\n                    // add needed event listeners\n                    controls.on('focus', function () {\n                        if ($(this).hasClass('md-focused')) {\n                            return;\n                        }\n                        if (reInit) {\n                            init();\n                        }\n                        $element.addClass('pip-focused-container');\n                        if (isOpacity) {\n                            let ell = angular.element($(this)[0]);\n\n                            _color = $(this).css('backgroundColor');\n                            // _color = $window.getComputedStyle($(this)[0], null).backgroundColor;\n                            $(this).css('backgroundColor', rgba(_color));\n                            $(this).addClass('md-focused');\n                        } else {\n                            $(this).addClass('md-focused md-focused-opacity');\n                        }\n                        \n                        // setTabindex(angular.element($(this)[0]), 0);\n                    }).on('focusout', function () {\n                        if (!$(this).hasClass('md-focused')) {\n                            return;\n                        }                        \n                        $element.removeClass('pip-focused-container');\n\n                        if (isOpacity) {\n                            // $(this).css('backgroundColor', _color);\n                            $(this).css('backgroundColor', \"\");\n                            $(this).removeClass('md-focused md-focused-opacity');\n                        } else {\n                            $(this).removeClass('md-focused');\n                        }\n                        // if I go from block all element have tabindex = -1\n                        // setTabindex(angular.element($(this)[0]), -1);\n                    });\n                }\n\n                function keydownListener(e) {\n                    var keyCode = e.which || e.keyCode;\n                    // Check control keyCode\n                    if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.UP_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\n                        keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\n\n                        e.preventDefault();\n\n                        var\n                            increment = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                            moveToControl = controls.index(controls.filter(\".md-focused\")) + increment;\n                        // Move focus to next control\n                        if (moveToControl >= 0 && moveToControl < controlsLength) {\n                            controls[moveToControl].focus();\n                        }\n                    }\n                }\n            }\n        };\n    });\n\n})();\n\n","/**\n * @file Infinite scrolling behavior\n * @description\n * Modified from https://github.com/sroze/ngInfiniteScroll\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipInfiniteScroll\", []);\n\n    thisModule.directive('pipInfiniteScroll', \n        function($rootScope, $window, $interval, $parse) {\n            var THROTTLE_MILLISECONDS = 500;\n\n            return {\n                scope: {\n                    pipInfiniteScroll: '&',\n                    pipScrollContainer: '=',\n                    pipScrollDistance: '=',\n                    pipScrollDisabled: '=',\n                    pipScrollUseDocumentBottom: '=',\n                    pipScrollListenForEvent: '@'\n                },\n                link: function($scope: any, $element, $attrs: any) {\n                    var \n                        checkWhenEnabled = null,\n                        scrollContainer,\n                        immediateCheck = true,\n                        scrollDistance = null,\n                        scrollEnabled = null, \n                        unregisterEventListener = null,\n                        useDocumentBottom = false, \n                        windowElement = angular.element($window);\n                    \n                    function height(element) {\n                        element = element[0] || element;\n                        if (isNaN(element.offsetHeight)) {\n                            return element.document.documentElement.clientHeight;\n                        } else {\n                            return element.offsetHeight;\n                        }\n                    };\n\n                    function offsetTop(element) {\n                        if (!element[0].getBoundingClientRect || element.css('none')) {\n                            return;\n                        }\n                        return element[0].getBoundingClientRect().top + pageYOffset(element);\n                    };\n\n                    function pageYOffset(element) {\n                        element = element[0] || element;\n                        if (isNaN(window.pageYOffset)) {\n                            return element.document.documentElement.scrollTop;\n                        } else {\n                            return element.ownerDocument.defaultView.pageYOffset;\n                        }\n                    };\n\n                    var onContainerScroll = function() {\n                        var \n                            containerBottom, \n                            containerTopOffset, \n                            elementBottom, \n                            remaining, \n                            shouldScroll;\n                                                \n                        if (scrollContainer === windowElement) {\n                            containerBottom = height(scrollContainer) + pageYOffset(scrollContainer[0].document.documentElement);\n                            elementBottom = offsetTop($element) + height($element);\n                        } else {\n                            containerBottom = height(scrollContainer);\n                            containerTopOffset = 0;\n                            if (offsetTop(scrollContainer) !== void 0) {\n                                containerTopOffset = offsetTop(scrollContainer);\n                            }\n                            elementBottom = offsetTop($element) - containerTopOffset + height($element);\n                        }\n\n                        if (useDocumentBottom) {\n                            elementBottom = height(($element[0].ownerDocument || (<any>$element[0]).document).documentElement);\n                        }\n\n                        remaining = elementBottom - containerBottom;\n                        shouldScroll = remaining <= height(scrollContainer) * scrollDistance + 1;\n                        \n                        if (shouldScroll) {\n                            checkWhenEnabled = true;\n                            if (scrollEnabled) {\n                                if ($scope.$$phase || $rootScope.$$phase) {\n                                    return $scope.pipInfiniteScroll();\n                                } else {\n                                    return $scope.$apply($scope.pipInfiniteScroll);\n                                }\n                            }\n                        } else {\n                            return checkWhenEnabled = false;\n                        }\n                    };\n\n                    if (THROTTLE_MILLISECONDS != null) {\n                        onContainerScroll = _.throttle(onContainerScroll, THROTTLE_MILLISECONDS);                    \n                    }\n\n                    $scope.$on('$destroy', function() {\n                        scrollContainer.unbind('scroll', onContainerScroll);\n                        if (unregisterEventListener != null) {\n                            unregisterEventListener();\n                            return unregisterEventListener = null;\n                        }\n                    });\n\n                    function handleScrollDistance(v) {\n                        return scrollDistance = parseFloat(v) || 0;\n                    };\n                    $scope.$watch('pipScrollDistance', handleScrollDistance);\n                    handleScrollDistance($scope.pipScrollDistance);\n                    \n                    function handleScrollDisabled(v) {\n                        scrollEnabled = !v;\n                        if (scrollEnabled && checkWhenEnabled) {\n                            checkWhenEnabled = false;\n                            return onContainerScroll();\n                        }\n                    };\n                    $scope.$watch('pipScrollDisabled', handleScrollDisabled);\n                    handleScrollDisabled($scope.pipScrollDisabled);\n\n                    function handleScrollUseDocumentBottom(v) {\n                        return useDocumentBottom = v;\n                    };\n                    $scope.$watch('pipScrollUseDocumentBottom', handleScrollUseDocumentBottom);\n                    handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\n\n                    function changeContainer(newContainer) {\n                        if (scrollContainer != null) {\n                            scrollContainer.unbind('scroll', onContainerScroll);\n                        }\n\n                        scrollContainer = newContainer;\n                        if (newContainer != null) {\n                            return scrollContainer.bind('scroll', onContainerScroll);\n                        }\n                    };\n\n                    changeContainer(windowElement);\n                    if ($scope.pipScrollListenForEvent) {\n                        unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, onContainerScroll);\n                    }\n\n                    function handleScrollContainer(newContainer) {\n                        if ((newContainer == null) || newContainer.length === 0) {\n                            return;\n                        }\n                        if (newContainer instanceof HTMLElement) {\n                            newContainer = angular.element(newContainer);\n                        } else if (typeof newContainer.append === 'function') {\n                            newContainer = angular.element(newContainer[newContainer.length - 1]);\n                        } else if (typeof newContainer === 'string') {\n                            newContainer = $element.parents().find(newContainer);\n                        }\n\n                        if (newContainer != null && (!Array.isArray(newContainer) ||\n                            (Array.isArray(newContainer) && newContainer.length > 0))) {\n                            return changeContainer(newContainer);\n                        } else {\n                            throw new Error(\"Invalid pip-scroll-container attribute.\");\n                        }\n                    };\n                    $scope.$watch('pipScrollContainer', function (newContainer) {\n                        if (newContainer !== scrollContainer)\n                            handleScrollContainer(newContainer);\n                    });\n                    handleScrollContainer($scope.pipScrollContainer || []);\n                    \n                    if ($attrs.pipScrollParent != null) {\n                        changeContainer(angular.element($element.parent()));\n                    }\n                    if ($attrs.pipScrolImmediateCheck != null) {\n                        immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\n                    }\n                    \n                    return $interval((function() {\n                        if (immediateCheck) {\n                            return onContainerScroll();\n                        }\n                    }), 0, 1);\n                }\n            }\n        }\n    );\n\n})();\n\n","'use strict';\n\nexport class ShortcutOption {\n    Type: KeyboardEvent;\n    Propagate: boolean;\n    DisableInInput: boolean;\n    Target: any; // event target object\n    Keycode: number;\n}\n\nexport class KeyboardEvent {\n    static Keydown: string = 'keydown';\n    static Keyup: string = 'keyup';\n    static Keypress: string = 'keypress';\n}\n\nexport class KeyboardShortcut {\n    private shift_nums = {\n        \"`\": \"~\",\n        \"1\": \"!\",\n        \"2\": \"@\",\n        \"3\": \"#\",\n        \"4\": \"$\",\n        \"5\": \"%\",\n        \"6\": \"^\",\n        \"7\": \"&\",\n        \"8\": \"*\",\n        \"9\": \"(\",\n        \"0\": \")\",\n        \"-\": \"_\",\n        \"=\": \"+\",\n        \";\": \":\",\n        \"'\": \"\\\"\",\n        \",\": \"<\",\n        \".\": \">\",\n        \"/\": \"?\",\n        \"\\\\\": \"|\"\n    };\n\n    private special_keys = {\n        'esc': 27,\n        'escape': 27,\n        'tab': 9,\n        'space': 32,\n        'return': 13,\n        'enter': 13,\n        'backspace': 8,\n\n        'scrolllock': 145,\n        'scroll_lock': 145,\n        'scroll': 145,\n        'capslock': 20,\n        'caps_lock': 20,\n        'caps': 20,\n        'numlock': 144,\n        'num_lock': 144,\n        'num': 144,\n\n        'pause': 19,\n        'break': 19,\n\n        'insert': 45,\n        'home': 36,\n        'delete': 46,\n        'end': 35,\n\n        'pageup': 33,\n        'page_up': 33,\n        'pu': 33,\n\n        'pagedown': 34,\n        'page_down': 34,\n        'pd': 34,\n\n        'left': 37,\n        'up': 38,\n        'right': 39,\n        'down': 40,\n\n        'f1': 112,\n        'f2': 113,\n        'f3': 114,\n        'f4': 115,\n        'f5': 116,\n        'f6': 117,\n        'f7': 118,\n        'f8': 119,\n        'f9': 120,\n        'f10': 121,\n        'f11': 122,\n        'f12': 123\n    };\n\n    private modifiers = {\n        shift: { wanted: false, pressed: false },\n        ctrl: { wanted: false, pressed: false },\n        alt: { wanted: false, pressed: false },\n        meta: { wanted: false, pressed: false }\t//Meta is Mac specific\n    };\n\n    public eventCallback: Function;\n    public target: any;\n    public event: KeyboardEvent;\n    public option: ShortcutOption;\n    public shorcut: string;\n    public callback: Function;\n\n    public constructor(\n        element: any,\n        shorcutCombination: string,\n        option: ShortcutOption,\n        callback: (e?: JQueryEventObject) => void\n    ) {\n        \"ngInject\";\n\n        this.target = element;\n        this.shorcut = shorcutCombination;\n        this.event = option.Type;\n        this.option = option;\n        this.callback = callback;\n\n        this.eventCallback = (event: JQueryEventObject) => {\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\n            let code: number;\n\n            if (this.option.DisableInInput) { //Don't enable shortcut keys in Input, Textarea fields\n                let element;\n                if (e.target) {\n                    element = e.target;\n                } else if (e.srcElement) {\n                    element = e.srcElement;\n                }\n\n                if (element.nodeType == 3) {\n                    element = element.parentNode;\n                }\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\n            }\n            //Find Which key is pressed\n            if (e.keyCode) {\n                code = e.keyCode;\n            } else if (e.which) {\n                code = e.which;\n            }\n\n            let character = String.fromCharCode(code).toLowerCase();\n\n            if (code == 188) character = \",\"; //If the user presses , when the type is onkeydown\n            if (code == 190) character = \".\"; //If the user presses , when the type is onkeydown\n\n            let keys: string[] = this.shorcut.split(\"+\");\n            //Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\n            let kp: number = 0;\n\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\n\n            let i: number = 0;\n            for (i = 0; i < keys.length; i++) {\n                let k: string = keys[i];\n                //Modifiers\n                if (k == 'ctrl' || k == 'control') {\n                    kp++;\n                    this.modifiers.ctrl.wanted = true;\n                } else if (k == 'shift') {\n                    kp++;\n                    this.modifiers.shift.wanted = true;\n                } else if (k == 'alt') {\n                    kp++;\n                    this.modifiers.alt.wanted = true;\n                } else if (k == 'meta') {\n                    kp++;\n                    this.modifiers.meta.wanted = true;\n                } else if (k.length > 1) { //If it is a special key\n                    if (this.special_keys[k] == code) {\n                        kp++;\n                    }\n                } else if (this.option.Keycode) {\n                    if (this.option.Keycode == code) kp++;\n                } else { //The special keys did not match\n                    if (character == k) kp++;\n                    else {\n                        if (this.shift_nums[character] && e.shiftKey) { //Stupid Shift key bug created by using lowercase\n                            character = this.shift_nums[character];\n                            if (character == k) {\n                                kp++;\n                            }\n                        }\n                    }\n                }\n            }\n            \n            if (kp == keys.length &&\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\n\n                this.callback(e);\n\n                if (!this.option.Propagate) { //Stop the event\n                    //e.cancelBubble is supported by IE - this will kill the bubbling process.\n                    e.cancelBubble = true;\n                    e.returnValue = false;\n\n                    //e.stopPropagation works in Firefox.\n                    if (e.stopPropagation) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }\n\n                    return false;\n                }\n            }\n            this.modifiers.ctrl.pressed = false;\n            this.modifiers.shift.pressed = false;\n            this.modifiers.alt.pressed = false;\n            this.modifiers.meta.pressed = false;\n        };\n    }\n}\n","'use strict';\n\nimport  {\n    KeyboardShortcut,\n    ShortcutOption,\n    KeyboardEvent\n} from \"./KeyboardShortcut\";\n\nexport interface IKeyboardShortcuts {\n    [key: string]: KeyboardShortcut\n}\n\nexport interface IShortcutsRegisterService {\n    add(shorcutName: string, callback: () => void, options: ShortcutOption): void;\n    remove(shorcutName: string): void;\n\n    shorcuts: IKeyboardShortcuts\n}\n\nexport interface IShortcutsRegisterProvider extends ng.IServiceProvider {\n    option: ShortcutOption;\n}\n\nexport class ShortcutsRegister implements IShortcutsRegisterService {\n    private _log: ng.ILogService;\n    private _defaultOption: ShortcutOption;\n    private _shortcuts: IKeyboardShortcuts;\n\n    public constructor(\n        $log: ng.ILogService,\n        option: ShortcutOption\n    ) {\n        \"ngInject\";\n        this._log = $log;\n        this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\n\n        this._shortcuts = {};\n    }\n\n    private getDefaultOption(): ShortcutOption {\n        let defaultOption: ShortcutOption = {\n            Type: KeyboardEvent.Keydown,\n            Propagate: false,\n            DisableInInput: false,\n            Target: document,\n            Keycode: null\n        };\n\n        return defaultOption;\n    }\n\n    private checkAddShortcut(element: any, shorcutCombination: string, callback: (e: JQueryEventObject) => void): boolean {\n        if (!element) {\n            this._log.error('Register shortcut: element undentified!');\n\n            return false;\n        }\n\n        if (!shorcutCombination) {\n            this._log.error('Register shortcut: shorcut combination undentified!');\n\n            return false;\n        }\n\n        if (!callback) {\n            this._log.error('Register shortcut: shorcut callback undentified!');\n\n            return false;\n        }\n\n        return true;\n    }\n\n    public get shorcuts(): IKeyboardShortcuts {\n        return this._shortcuts;\n    }\n\n    public add(shorcutName: string, callback: (e: JQueryEventObject) => void, option: ShortcutOption): void {\n        this.remove(shorcutName);\n        let shorcutOption: ShortcutOption = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\n        let shorcutCombination: string = shorcutName.toLowerCase();\n        let element = shorcutOption.Target;\n\n\n        if (typeof shorcutOption.Target == 'string') {\n            element = document.getElementById(shorcutOption.Target);\n        } else {\n            element = shorcutOption.Target;\n        }\n\n        if (!this.checkAddShortcut(element, shorcutCombination, callback)) {\n            \n            return\n        }\n\n        let newKeyboardShortcut = new KeyboardShortcut(element, shorcutCombination, shorcutOption, callback);\n\n\t\tthis._shortcuts[shorcutCombination] = newKeyboardShortcut;\n\n\t\t//Attach the function with the event\n\t\tif (element.addEventListener) { \n            element.addEventListener(shorcutOption.Type, newKeyboardShortcut.eventCallback, false);\n        } else if (element.attachEvent) { \n            element.attachEvent('on' + shorcutOption.Type, newKeyboardShortcut.eventCallback);\n        } else { \n            element.on(shorcutOption.Type, newKeyboardShortcut.eventCallback); \n        }\n    }\n\n    public remove(shorcutName: string): void {\n\t\tlet shortcutCombination = shorcutName.toLowerCase();\n\t\tlet binding: KeyboardShortcut = this._shortcuts[shortcutCombination];\n\n\t\tdelete(this._shortcuts[shortcutCombination])\n\t\tif (!binding) return;\n\n\t\tlet type = binding.event;\n\t\tlet element = binding.target;\n\t\tlet callback = binding.eventCallback;\n\n\t\tif (element.detachEvent) {\n            element.detachEvent('on' + type, callback);\n        } else if (element.removeEventListener) { \n            element.removeEventListener(type, callback, false);\n        } else { \n            // element['on' + type] = false;\n            element.off(type, callback);\n        }\n    }\n}\n\n\n\nclass ShortcutsRegisterProvider implements IShortcutsRegisterProvider {\n    private _service: ShortcutsRegister;\n    private _option: ShortcutOption;\n\n    public get option(): ShortcutOption {\n        return this._option;\n    }\n\n    public set option(value: ShortcutOption) {\n        this._option = value || new ShortcutOption();\n    }\n\n    public $get(\n        $log: ng.ILogService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ShortcutsRegister($log, this._option);\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipShortcuts')\n    .provider('pipShortcutsRegister', ShortcutsRegisterProvider);\n","'use strict';\n\nimport  {\n    ShortcutOption,\n} from \"./KeyboardShortcut\";\n\nimport  {\n    IShortcutsRegisterService,\n} from \"./ShorcutsRegisterService\";\n\n\n    // thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\n    //     return {\n    //         restrict: 'A',\n    //         scope: false,\n\nclass ShortcutController {\n    private _log: ng.ILogService;\n\n    private actionShortcuts: Function;\n    private nameShortcuts: string;\n    private options: ShortcutOption;\n\n    constructor(\n        $element: any,\n        $attrs: any,\n        $scope: ng.IScope,\n        $log: ng.ILogService,\n        $parse: any,\n        pipShortcutsRegister: IShortcutsRegisterService\n    ) {\n        \"ngInject\";\n        this._log = $log;\n\n        if ($attrs.pipShortcutAction) {\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\n            let a1 = $attrs.pipShortcutAction;\n            this.actionShortcuts($scope, {$event: {}});\n        } else {\n            this._log.error('Shorcunt action does not set.');\n\n            return\n        }\n\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\n            this.nameShortcuts = $attrs.pipShortcutName;\n        } else {\n            this._log.error('Shorcunt name does not set.');\n\n            return\n        }\n\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOption>$attrs.pipShorcutOptions : <ShortcutOption>{};\n        this.options.Target = $element;\n        // regester keyboard shortcut\n        pipShortcutsRegister.add(this.nameShortcuts, (e?: any) => {\n            this.actionShortcuts($scope, {$event: {'e': e}});          \n        }, this.options);\n    }\n\n    private keypressShortcut(action) {\n        this.actionShortcuts();\n    }\n}\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function shortcutsDirective($parse) {\n        return {\n            restrict: 'A',\n            scope: false,            \n            controller: ShortcutController\n        };\n    }\n\n    angular\n        .module('pipShortcuts')\n        .directive('pipShortcut', shortcutsDirective);\n})();","'use strict';\n\n\nimport {\n    ShortcutsRegister\n} from \"./ShorcutsRegisterService\"\nimport  {\n    KeyboardShortcut,\n    ShortcutOption,\n    KeyboardEvent\n} from \"./KeyboardShortcut\";\n\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\n\nexport class ShortcutItem {\n    // Shortcut combination\n    public shortcut: string;\n    // target object \n    public target?: any;\n    // target element by Id\n    public targetId?: string;\n    // // target element by class (firstelement??)\n    // public targetClass?: string;\n    // Access function\n    public access?: (event: JQueryEventObject) => boolean;\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public keypress?: (event: JQueryEventObject) => void;\n    // default options\n    public options?: ShortcutOption;    \n}\n\n// export class ShortcutItem extends SimpleShortcutItem {\n//     public shortcuts: SimpleShortcutItem[];\n// }\n\nexport class ShortcutsConfig {\n    // Global shortcut \n    public globalShortcuts: ShortcutItem[] = [];\n    // Local shortcut \n    public localShortcuts: ShortcutItem[] = [];\n    // default options\n    public defaultOptions: ShortcutOption = null;\n}\n\nexport interface IShortcutsService {\n    readonly config: ShortcutsConfig;\n\n    globalShortcuts: ShortcutItem[];\n    localShortcuts: ShortcutItem[];\n\n    on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void;\n    onLocal(localShortcuts?: ShortcutItem[]): void;\n    off(): void;\n}\n\nexport interface IShortcutsProvider extends ng.IServiceProvider {\n    config: ShortcutsConfig;\n    \n    globalShortcuts: ShortcutItem[];\n    localShortcuts: ShortcutItem[];\n    defaultOptions: ShortcutOption;\n}\n\nclass ShortcutsService implements IShortcutsService {\n    private _config: ShortcutsConfig;\n    private _oldConfig: ShortcutsConfig;\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n    private _location: ng.ILocationService;\n    private _injector: ng.auto.IInjectorService;    \n    private _pipShortcutsRegister: ShortcutsRegister;\n\n    public constructor(\n        config: ShortcutsConfig,\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService, \n        $location: ng.ILocationService, \n        $injector: ng.auto.IInjectorService,\n        pipShortcutsRegister: ShortcutsRegister\n    ) {\n        this._config = config;\n        this._oldConfig = _.cloneDeep(this._config);\n        this._rootScope = $rootScope;\n        this._window = $window;\n        this._location = $location;\n        this._injector = $injector;    \n        this._pipShortcutsRegister = pipShortcutsRegister;\n\n        // add shortcuts\n        this.addShortcuts(this._config.globalShortcuts);\n        this.addShortcuts(this._config.localShortcuts);        \n    }\n\n    // private declaration \n    private sendChangeEvent() {\n        // remove shortcuts\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\n        this.removeShortcuts(this._oldConfig.localShortcuts);\n        // add shortcuts\n        this.addShortcuts(this._config.globalShortcuts);\n        this.addShortcuts(this._config.localShortcuts);\n\n        this._rootScope.$emit(ShortcutsChangedEvent, this._config);\n        // save current config to oldConfig\n        this._oldConfig = _.cloneDeep(this._config);\n    }\n\n    private removeShortcuts(collection: ShortcutItem[]): void {\n        _.each(collection, (k) => {\n            this._pipShortcutsRegister.remove(k.shortcut);\n        });\n    }\n\n    private keypressShortcut(shorcut: ShortcutItem, event: JQueryEventObject) {\n        if (shorcut.access && _.isFunction(shorcut.access)) {\n            if (!shorcut.access(event)) {\n                return;\n            }\n        } \n\n        if (shorcut.keypress) {\n            shorcut.keypress(event);\n            return;\n        }\n\n        if (shorcut.href) {\n            this._window.location.href = shorcut.href;\n            return;\n        }\n\n        if (shorcut.url) {\n            this._location.url(shorcut.url);\n            return;\n        }\n\n        if (shorcut.state) {\n            if (this._injector.has('$state')) {\n                var $state = this._injector.get('$state');\n                $state['go'](shorcut.state, shorcut.stateParams);\n            }\n            return;\n        }\n\n        if (shorcut.event) {\n            this._rootScope.$broadcast(shorcut.event);\n        } else {\n            // Otherwise raise notification\n            this._rootScope.$broadcast('pipShortcutKeypress', shorcut.shortcut);\n        }\n    }\n\n    private addShortcuts(collection: ShortcutItem[]): void {\n        let generalOptions: ShortcutOption = this._config.defaultOptions ? this._config.defaultOptions : <ShortcutOption>{};\n        \n        _.each(collection, (k) => {\n            let option: ShortcutOption = k.options ? k.options : generalOptions;\n            let target: any;\n\n            target = k.target ? k.target : k.targetId;\n            option.Target = target;\n            // regester keyboard shortcut\n            this._pipShortcutsRegister.add(k.shortcut, (e?: any) => {\n                this.keypressShortcut(k, e);        \n            }, option);              \n        });\n    }\n\n    // public declaration \n\n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public get defaultOptions(): ShortcutOption {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOption) {\n        this._config.defaultOptions = value || null;\n        this.sendChangeEvent();\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get localShortcuts(): ShortcutItem[] {\n        return this._config.localShortcuts;\n    }\n\n    public set localShortcuts(value: ShortcutItem[]) {\n        this._config.localShortcuts = value || [];\n        this.sendChangeEvent();\n    }\n\n    public on(globalShortcuts?: ShortcutItem[], localShortcuts?: ShortcutItem[]): void {\n        if (globalShortcuts && _.isArray(globalShortcuts)) {\n            this._config.globalShortcuts = globalShortcuts;    \n        }\n        if (localShortcuts && _.isArray(localShortcuts)) {\n            this._config.localShortcuts = localShortcuts;    \n        }        \n\n        this.sendChangeEvent();\n    }\n\n    public onLocal(localShortcuts?: ShortcutItem[]): void {\n        if (localShortcuts && _.isArray(localShortcuts)) {\n            this._config.localShortcuts = localShortcuts;    \n        }        \n\n        this.sendChangeEvent();\n    }\n\n    public off(): void {\n        this._config.globalShortcuts = [];\n        this._config.localShortcuts = [];\n        this.sendChangeEvent();\n    }\n}\n\nclass ShortcutsProvider implements IShortcutsProvider {\n    private _config: ShortcutsConfig = new ShortcutsConfig();\n    private _service: ShortcutsService;\n\n    public get config(): ShortcutsConfig {\n        return this._config;\n    }\n\n    public set config(value: ShortcutsConfig) {\n        this._config = value || new ShortcutsConfig();\n    }\n\n    public get defaultOptions(): ShortcutOption {\n        return this._config.defaultOptions;\n    }\n\n    public set defaultOptions(value: ShortcutOption) {\n        this._config.defaultOptions = value || null;\n    }\n\n    public get globalShortcuts(): ShortcutItem[] {\n        return this._config.globalShortcuts;\n    }\n\n    public set globalShortcuts(value: ShortcutItem[]) {\n        this._config.globalShortcuts = value || [];\n    }\n\n    public get localShortcuts(): ShortcutItem[] {\n        return this._config.localShortcuts;\n    }\n\n    public set localShortcuts(value: ShortcutItem[]) {\n        this._config.localShortcuts = value || [];\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService, \n        $window: ng.IWindowService, \n        $location: ng.ILocationService, \n        $injector: ng.auto.IInjectorService,\n        pipShortcutsRegister: ShortcutsRegister\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutsRegister);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipShortcuts')\n    .provider('pipShortcuts', ShortcutsProvider);\n\n","'use strict';\n\nangular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\n\nimport './ShorcutsRegisterService';\nimport './ShortcutsService';\nimport './ShortcutDirective';\n\nexport * from './ShortcutsService';\nexport * from './ShorcutsRegisterService';","/**\n * @file Keyboard navigation with scrolling over non-focusable controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipSelected\", []);\n\n    thisModule.directive('pipSelected', function ($parse, $mdConstant, $timeout) {\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function ($scope: any, $element, $attrs: any) {\n                var\n                    indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null,\n                    indexSetter = indexGetter ? indexGetter.assign : null,\n                    idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null,\n                    idSetter = idGetter ? idGetter.assign : null,\n                    changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null,\n                    enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null,\n                    noScroll = toBoolean($attrs.pipNoScroll),\n                    modifier = toBoolean($attrs.pipSkipHidden) ? ':visible' : '',\n                    className = toBoolean($attrs.pipTreeList) ? '.pip-selectable-tree' : '.pip-selectable',\n                    selectedIndex = indexGetter($scope),\n                    currentElementTabinex = $element.attr('tabindex'),\n                    pipSelectedWatch = $attrs.pipSelectedWatch,\n                    isScrolled = false;\n\n                // variables for touch    \n                var touchStartX, touchStartY, trackingClick, trackingClickStart, targetElement, lastClickTime, cancelNextClick;\n                // constant for touch\n                var touchBoundary = 10,\n                    tapdelay = 200,\n                    tapTimeout = 700;\n\n                // Set tabindex if it's not set yet\n                $element.attr('tabindex', currentElementTabinex || 0);\n                \n                $element.on('click', className, onClickEvent);\n                $element.on('touchstart', className, onTouchStart);\n                $element.on('touchmove', className, onTouchMove);\n                $element.on('touchend', className, onTouchEnd);\n                $element.on('touchcancel', className, onTouchCancel);\n                $element.on('keydown', onKeyDown);\n                $element.on('focusin', onFocusIn);\n                $element.on('focusout', onFocusOut);\n\n                // Watch selected item index\n                if (!toBoolean($attrs.pipTreeList)) {\n                    $scope.$watch(indexGetter, function (newSelectedIndex) {\n                        selectItem({ itemIndex: newSelectedIndex });\n                    });\n                } else {\n                    $scope.$watch(idGetter, function (newSelectedId) {\n                        setTimeout(function () {\n                            selectItem({ itemId: newSelectedId, raiseEvent: true });\n                        }, 0);\n                    });\n                }\n\n                // Watch resync selection\n                if (pipSelectedWatch) {\n                    $scope.$watch(pipSelectedWatch, function () {\n                        // Delay update to allow ng-repeat to update DOM\n                        setTimeout(function () {\n                            selectedIndex = indexGetter($scope);\n                            selectItem({ itemIndex: selectedIndex });\n                        }, 100);\n                    });\n                }\n\n                // Select item defined by index\n                selectItem({ itemIndex: selectedIndex, items: $element.find(className) });\n\n                // Converts value into boolean\n                function toBoolean(value) {\n                    if (value == null) return false;\n                    if (!value) return false;\n                    value = value.toString().toLowerCase();\n                    return value == '1' || value == 'true';\n                };\n\n                // Functions and listeners\n                function selectItem(itemParams) {\n                    if (isScrolled) return;\n                    var itemIndex = itemParams.itemIndex,\n                        itemId = itemParams.itemId,\n                        items = itemParams.items || $element.find(className + modifier),\n                        itemsLength = items.length,\n                        item = (function () {\n                            if (itemParams.item) return itemParams.item;\n                            if (itemIndex === undefined && itemIndex === -1) {\n                                itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\n                            }\n                            if (itemIndex >= 0 && itemIndex < itemsLength) {\n                                return items[itemIndex]\n                            }\n                        } ()),\n                        raiseEvent = itemParams.raiseEvent;\n\n                    if (item) {\n                        $element.find(className).removeClass('selected md-focused');\n                        item = angular.element(item)\n                            .addClass('selected md-focused')\n                            .focus(); // todo сдвигает список тут, на первом проходе\n                        if (!noScroll) scrollToItem(item);\n                        if (raiseEvent) defineSelectedIndex(items);\n                    }\n                };\n\n                function defineSelectedIndex(items) {\n                    var oldSelectedIndex = selectedIndex;\n                    selectedIndex = -1;\n                    for (var index = 0; index < items.length; index++) {\n                        if ($(items[index]).hasClass('selected')) {\n                            selectedIndex = index;\n\n                            break;\n                        }\n                    }\n\n                    // Execute callback to notify about item select\n                    if (oldSelectedIndex != selectedIndex && selectedIndex !== -1) {\n                        $scope.$apply(updateIndex);\n                    } else {\n                        $scope.$apply(onSelect);\n                    }\n\n                    function updateIndex() {\n                        var selectedItem = angular.element(items[selectedIndex]),\n                            selectedId = selectedItem.attr('pip-id');\n\n                        if (indexSetter) indexSetter($scope, selectedIndex);\n                        if (idSetter) idSetter($scope, selectedId);\n                        onSelect();\n                    };\n\n                    function onSelect() {\n                        var selectedItem = angular.element(items[selectedIndex]),\n                            selectedId = selectedItem.attr('pip-id');\n\n                        if (changeGetter) {\n                            changeGetter($scope, {\n                                $event: {\n                                    target: $element,\n                                    item: selectedItem,\n                                    index: selectedIndex,\n                                    id: selectedId,\n                                    newIndex: selectedIndex,\n                                    oldIndex: oldSelectedIndex\n                                }\n                            });\n                        }\n                    }\n                };\n\n                function scrollToItem($item) {\n                    if (noScroll) return;\n\n                    var\n                        containerTop = $element.offset().top,\n                        containerHeight = $element.height(),\n                        containerBottom = containerTop + containerHeight,\n                        itemTop = $item.offset().top,\n                        itemHeight = $item.outerHeight(true),\n                        itemBottom = itemTop + itemHeight,\n                        containerScrollTop = $element.scrollTop();\n\n                    isScrolled = true;\n                    setTimeout(function () {\n                        isScrolled = false;\n                    }, 100);\n\n                    if (containerTop > itemTop) {\n                        $element.scrollTop(containerScrollTop + itemTop - containerTop);\n                    }\n                    else if (containerBottom < itemBottom) {\n                        $element.scrollTop(containerScrollTop + itemBottom - containerBottom);\n                    }\n\n                };\n\n                function getTargetElementFromEventTarget(eventTarget) {\n                    // On some older browsers the event target may be a text node.\n                    if (eventTarget.nodeType === Node.TEXT_NODE) {\n                        return eventTarget.parentNode;\n                    }\n\n                    return eventTarget;\n                };\n\n                function touchHasMoved(event) {\n                    var touch = event.changedTouches[0], boundary = touchBoundary; //Touchmove boundary, beyond which a click will be cancelled.\n\n                    if (Math.abs(touch.pageX - touchStartX) > boundary || Math.abs(touch.pageY - touchStartY) > boundary) {\n                        return true;\n                    }\n\n                    return false;\n                };\n\n                function onClickEvent(event) {\n                    selectItem({ item: event.currentTarget, raiseEvent: true });\n                }\n\n                function onTouchStart(ev) {\n                    //ev.preventDefault();\n\n                    let event = ev.originalEvent;\n                    if (event['targetTouches'].length > 1) {\n                        return true;\n                    }\n                    let targetElement = getTargetElementFromEventTarget(event.target);\n                    let touch = event['targetTouches'][0];\n\n                    trackingClick = true;\n                    trackingClickStart = event.timeStamp;\n                    targetElement = targetElement;\n\n                    touchStartX = touch.pageX;\n                    touchStartY = touch.pageY;\n\n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\n                      //  event.preventDefault();\n                    }\n\n                    return true;\n                }\n\n                function onTouchMove(ev) {\n                    if (!trackingClick) {\n                        return true;\n                    }\n                    let event = ev.originalEvent;\n                    // If the touch has moved, cancel the click tracking\n                    if (targetElement !== getTargetElementFromEventTarget(event.target) || touchHasMoved(event)) {\n                        trackingClick = false;\n                        targetElement = null;\n                    }\n\n                    return true;\n                }\n\n                function onTouchEnd(ev) {\n                    var forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = targetElement;\n\n                    if (!trackingClick) {\n                        return true;\n                    }\n                    event = ev.originalEvent;\n                    // Prevent phantom clicks on fast double-tap \n                    if ((event.timeStamp - lastClickTime) < tapdelay) {\n                        cancelNextClick = true;\n                        return true;\n                    }\n\n                    if ((event.timeStamp - trackingClickStart) > tapTimeout) {\n                        return true;\n                    }\n\n                    // Reset to prevent wrong click cancel on input \n                    cancelNextClick = false;\n\n                    lastClickTime = event.timeStamp;\n\n                    newTrackingClickStart = trackingClickStart;\n                    trackingClick = false;\n                    trackingClickStart = 0;\n\n                    selectItem({ item: ev.currentTarget, raiseEvent: true });\n\n                    return false;\n                }\n\n                function onTouchCancel(ev) {\n                    trackingClick = false;\n                    targetElement = null;\n                }\n\n                function onKeyDown(e) {\n                    var keyCode = e.which || e.keyCode;\n\n                    // Check control keyCode\n                    if (keyCode == $mdConstant.KEY_CODE.ENTER || keyCode == $mdConstant.KEY_CODE.SPACE) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        if (enterSpaceGetter) {\n                            enterSpaceGetter($scope, {\n                                $event: {\n                                    target: $element,\n                                    index: selectedIndex,\n                                    item: $element.find('.selected')\n                                }\n                            });\n                        }\n\n                    } else\n                        if (keyCode == $mdConstant.KEY_CODE.LEFT_ARROW || keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW ||\n                            keyCode == $mdConstant.KEY_CODE.UP_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) {\n\n                            e.preventDefault();\n                            e.stopPropagation();\n\n                            // Get next selectable control index\n                            var items = $element.find(className + modifier),\n                                inc = (keyCode == $mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == $mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\n                                newSelectedIndex = selectedIndex + inc;\n\n                            // Set next control as selected\n                            selectItem({ itemIndex: newSelectedIndex, items: items, raiseEvent: true });\n                        }\n                }\n\n                function onFocusIn(event) {\n                    // Choose selected element\n                    var items,\n                        selectedItem = $element.find(className + '.selected');\n\n                    selectedItem.addClass('md-focused');\n\n                    // If there are not selected elements then pick the first one\n                    if (selectedItem.length === 0) {\n                        selectedIndex = indexGetter($scope);\n                        items = $element.find(className + modifier);\n                        selectItem({ itemIndex: selectedIndex || 0, items: items, raiseEvent: true });\n                    }\n                }\n\n                function onFocusOut(event) {\n                    $element.find(className + '.md-focused' + modifier).removeClass('md-focused');\n                }\n            }\n        };\n    });\n\n})();\n\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function(){\n    'use strict';\n\n    var thisModule = angular.module(\"pipUnsavedChanges\", []);\n\n    thisModule.directive(\"pipUnsavedChanges\", function ($window, $rootScope) {\n        return {\n            restrict: 'AE',\n            scope: {\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\n                afterLeave: '&pipUnsavedChangesAfterLeave',\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\n            },\n            link: function($scope: any) {\n\n                $window.onbeforeunload = function() {\n                    if ($scope.unsavedChangesAvailable()) {\n                        $rootScope.$routing = false;\n                        return $scope.unsavedChangesMessage;\n                    }\n                };\n\n                var unbindFunc = $scope.$on('$stateChangeStart', function(event) {\n                    if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\n                        $rootScope.$routing = false;\n                         _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\n                        event.preventDefault();\n                    } else {\n                        _.isFunction($scope.afterLeave) && $scope.afterLeave();\n                    }\n                });\n\n                $scope.$on('$destroy', function() {\n                    $window.onbeforeunload = null;\n                    unbindFunc();\n                });\n            }\n        };\n    });\n\n})();\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}