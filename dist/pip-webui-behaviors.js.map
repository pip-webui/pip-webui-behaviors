{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/draggable/CancelDrag.ts","src/draggable/Drag.ts","src/draggable/DraggableService.ts","src/draggable/Drop.ts","src/draggable/PreventDrag.ts","src/draggable/index.ts","src/focused/focused.ts","src/index.ts","src/infinite_scroll/infiniteScroll.ts","src/selected/selected.ts","src/shortcuts/IShortcutsService.ts","src/shortcuts/Shortcut.ts","src/shortcuts/ShortcutBindingService.ts","src/shortcuts/ShortcutDirective.ts","src/shortcuts/ShortcutsService.ts","src/shortcuts/index.ts","src/unsaved_changes/unsavedChanges.ts"],"names":[],"mappings":"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","file":"pip-webui-behaviors.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    class CancelDragLink {\r\n        constructor(\r\n            $element: JQuery\r\n        ) {\r\n            $element.find('*').attr('pip-cancel-drag', 'pip-cancel-drag');\r\n        }\r\n    }\r\n\r\n    const CancelDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new CancelDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipCancelDrag', CancelDrag);\r\n}","import { IDraggableService } from './DraggableService';\r\n\r\n{\r\n    interface IDragLinkScope extends ng.IScope {\r\n        value: any;\r\n    }\r\n\r\n    interface IDragLinkAttributes extends ng.IAttributes {\r\n        ngDrag: any;\r\n        pipDragStart: any;\r\n        pipDragStop: any;\r\n        pipDragSuccess: any;\r\n        allowTransform: any;\r\n        pipDragData: any;\r\n        pipVerticalScroll: any;\r\n        pipHorizontalScroll: any;\r\n        pipActivationDistance: any;\r\n        pipScrollContainer: any;\r\n        pipDrag: any;\r\n        pipCenterAnchor: any;\r\n    }\r\n\r\n    class DragLink {\r\n        private LONG_PRESS: number = 50; // 50ms for longpress\r\n        private offset: any;\r\n        private _centerAnchor: boolean = false;\r\n        private _mx: number;\r\n        private _my: number;\r\n        private _tx: number;\r\n        private _ty: number;\r\n        private _mrx: number;\r\n        private _mry: number;\r\n        private _hasTouch: boolean = ('ontouchstart' in window) || ( < any > window).DocumentTouch; // && document instanceof DocumentTouch; // DocumentTouch is not defined!\r\n        private _pressEvents: string = 'touchstart mousedown';\r\n        private _moveEvents: string = 'touchmove mousemove';\r\n        private _releaseEvents: string = 'touchend mouseup';\r\n        private _dragHandle: any;\r\n\r\n        // to identify the element in order to prevent getting superflous events when a single element has both drag and drop directives on it.\r\n        private _myid: string | number;\r\n        private _data: any = null;\r\n\r\n        private _dragOffset: any = null;\r\n\r\n        private _dragEnabled: boolean = false;\r\n\r\n        private _pressTimer: any = null;\r\n\r\n        private _elementStyle: any = {};\r\n\r\n        private onDragStartCallback: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragSuccessCallback: Function;\r\n        private allowTransform: boolean;\r\n\r\n        private getDragData: any;\r\n        private verticalScroll: boolean;\r\n        private horizontalScroll: boolean;\r\n        private activationDistance: number;\r\n        private scrollDistance: number;\r\n        private scrollParent: boolean = false;\r\n\r\n        private scrollContainer: JQuery = angular.element(window);\r\n        private scrollContainerGetter: any;\r\n\r\n        // deregistration function for mouse move events in $rootScope triggered by jqLite trigger handler\r\n        private _deregisterRootMoveListener: Function = angular.noop;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $window: ng.IWindowService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDragLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDragLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.ngDrag;\r\n            this._myid = $scope.$id;\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart) || null;\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop) || null;\r\n            this.onDragSuccessCallback = $parse($attrs.pipDragSuccess) || null;\r\n            this.allowTransform = angular.isDefined($attrs.allowTransform) ? $scope.$eval($attrs.allowTransform) : false;\r\n\r\n            this.getDragData = $parse($attrs.pipDragData);\r\n            this.verticalScroll = $attrs.pipVerticalScroll || true;\r\n            this.horizontalScroll = $attrs.pipHorizontalScroll || true;\r\n            this.activationDistance = parseFloat($attrs.pipActivationDistance) || 75;\r\n            this.scrollDistance = parseFloat($attrs.pipActivationDistance) || 50;\r\n            this.scrollContainerGetter = $parse($attrs.pipScrollContainer);\r\n\r\n            this.$element.css('cursor', 'move');\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false'); // prevent native drag\r\n            // check to see if drag handle(s) was specified\r\n            // if querySelectorAll is available, we use this instead of find\r\n            // as JQLite find is limited to tagnames\r\n            let dragHandles: any;\r\n            if (this.$element[0].querySelectorAll) {\r\n                dragHandles = angular.element(this.$element[0].querySelectorAll('[pip-drag-handle]'));\r\n            } else {\r\n                dragHandles = this.$element.find('[pip-drag-handle]');\r\n            }\r\n            if (dragHandles.length) {\r\n                this._dragHandle = dragHandles;\r\n            }\r\n            this.toggleListeners(true);\r\n\r\n            // Initialize scroll container\r\n            if (this.scrollParent) {\r\n                this.scrollContainer = angular.element(this.$element.parent());\r\n            } else if (this.$attrs.pipScrollContainer) {\r\n                this.scrollContainer = angular.element(this.scrollContainerGetter(this.$scope));\r\n            } else {\r\n                this.scrollContainer = angular.element(window);\r\n            }\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            if (!enable) return;\r\n            // add listeners.\r\n\r\n            this.$scope.$on('$destroy', () => {\r\n                this.onDestroy(enable);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipDrag, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$watch(this.$attrs.pipCenterAnchor, (newVal, oldVal) => {\r\n                this.onCenterAnchor(newVal, oldVal);\r\n            });\r\n            // wire up touch events\r\n            if (this._dragHandle) {\r\n                // handle(s) specified, use those to initiate drag\r\n                this._dragHandle.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            } else {\r\n                // no handle(s) specified, use the element as the handle\r\n                this.$element.on(this._pressEvents, (event) => {\r\n                    this.onpress(event);\r\n                });\r\n            }\r\n            if (!this._hasTouch && this.$element[0].nodeName.toLowerCase() == \"img\") {\r\n                this.$element.on('mousedown', () => {\r\n                    return false;\r\n                }); // prevent native drag for images\r\n            }\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dragEnabled = (newVal);\r\n        }\r\n\r\n        private onCenterAnchor(newVal, oldVal) {\r\n            if (angular.isDefined(newVal))\r\n                this._centerAnchor = (newVal || 'true');\r\n        }\r\n\r\n        private isClickableElement(evt) {\r\n            return (\r\n                angular.isDefined(angular.element(evt.target).attr(\"pip-cancel-drag\"))\r\n            );\r\n        }\r\n\r\n        /*\r\n         * When the element is clicked start the drag behaviour\r\n         * On touch devices as a small delay so as not to prevent native window scrolling\r\n         */\r\n        private onpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n\r\n            if (this.isClickableElement(evt)) {\r\n                return;\r\n            }\r\n\r\n            if (evt.type == \"mousedown\" && evt.button != 0) {\r\n                // Do not start dragging on right-click\r\n                return;\r\n            }\r\n\r\n            this.saveElementStyles();\r\n\r\n            if (this._hasTouch) {\r\n                this.cancelPress();\r\n                this._pressTimer = setTimeout(() => {\r\n                    this.cancelPress();\r\n                    this.onlongpress(evt);\r\n                }, this.LONG_PRESS);\r\n                this.$document.on(this._moveEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n                this.$document.on(this._releaseEvents, () => {\r\n                    this.cancelPress();\r\n                });\r\n            } else {\r\n                this.onlongpress(evt);\r\n            }\r\n        }\r\n\r\n        private saveElementStyles() {\r\n            this._elementStyle.left = this.$element.css('css') || 0;\r\n            this._elementStyle.top = this.$element.css('top') || 0;\r\n            this._elementStyle.position = this.$element.css('position');\r\n            this._elementStyle.width = this.$element.css('width');\r\n        }\r\n\r\n        private cancelPress() {\r\n            clearTimeout(this._pressTimer);\r\n            this.$document.off(this._moveEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n            this.$document.off(this._releaseEvents, () => {\r\n                this.cancelPress();\r\n            });\r\n        }\r\n\r\n        private onlongpress(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n\r\n            this.offset = this.$element[0].getBoundingClientRect();\r\n            if (this.allowTransform)\r\n                this._dragOffset = this.offset;\r\n            else {\r\n                this._dragOffset = {\r\n                    left: document.body.scrollLeft,\r\n                    top: document.body.scrollTop\r\n                };\r\n            }\r\n\r\n\r\n            ( < any > this.$element).centerX = this.$element[0].offsetWidth / 2;\r\n            ( < any > this.$element).centerY = this.$element[0].offsetHeight / 2;\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n            this._mrx = this._mx - this.offset.left;\r\n            this._mry = this._my - this.offset.top;\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this.$window.pageXOffset;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this.$window.pageYOffset;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this.$window.pageXOffset;\r\n                this._ty = this._my - this._mry - this.$window.pageYOffset;\r\n            }\r\n\r\n            this.$document.on(this._moveEvents, (event) => {\r\n                this.onmove(event);\r\n            });\r\n            this.$document.on(this._releaseEvents, (event) => {\r\n                this.onrelease(event);\r\n            });\r\n            // This event is used to receive manually triggered mouse move events\r\n            // jqLite unfortunately only supports triggerHandler(...)\r\n            // See http://api.jquery.com/triggerHandler/\r\n            // _deregisterRootMoveListener = $rootScope.$on('draggable:_triggerHandlerMove', onmove);\r\n            this._deregisterRootMoveListener = this.$rootScope.$on('draggable:_triggerHandlerMove', (event, origEvent) => {\r\n                this.onmove(origEvent);\r\n            });\r\n        }\r\n\r\n        private onmove(evt) {\r\n            if (!this._dragEnabled) return;\r\n            evt.preventDefault();\r\n            if (!this.$element.hasClass('pip-dragging')) {\r\n                this._data = this.getDragData(this.$scope);\r\n                this.$element.addClass('pip-dragging');\r\n                this.$rootScope.$broadcast('draggable:start', {\r\n                    x: this._mx,\r\n                    y: this._my,\r\n                    tx: this._tx,\r\n                    ty: this._ty,\r\n                    event: evt,\r\n                    element: this.$element,\r\n                    data: this._data\r\n                });\r\n\r\n                if (this.onDragStartCallback) {\r\n                    this.$scope.$apply(() => {\r\n                        this.onDragStartCallback(this.$scope, {\r\n                            $data: this._data,\r\n                            $event: evt\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            this._mx = this.pipDraggable.inputEvent(evt).pageX;\r\n            this._my = this.pipDraggable.inputEvent(evt).pageY;\r\n\r\n            if (this.horizontalScroll || this.verticalScroll) {\r\n                this.dragToScroll();\r\n            }\r\n\r\n            if (this._centerAnchor) {\r\n                this._tx = this._mx - ( < any > this.$element).centerX - this._dragOffset.left;\r\n                this._ty = this._my - ( < any > this.$element).centerY - this._dragOffset.top;\r\n            } else {\r\n                this._tx = this._mx - this._mrx - this._dragOffset.left;\r\n                this._ty = this._my - this._mry - this._dragOffset.top;\r\n            }\r\n\r\n            this.moveElement(this._tx, this._ty);\r\n\r\n            this.$rootScope.$broadcast('draggable:move', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                uid: this._myid,\r\n                dragOffset: this._dragOffset\r\n            });\r\n        }\r\n\r\n        private onrelease(evt) {\r\n            if (!this._dragEnabled)\r\n                return;\r\n            evt.preventDefault();\r\n            this.$rootScope.$broadcast('draggable:end', {\r\n                x: this._mx,\r\n                y: this._my,\r\n                tx: this._tx,\r\n                ty: this._ty,\r\n                event: evt,\r\n                element: this.$element,\r\n                data: this._data,\r\n                callback: this.onDragComplete,\r\n                uid: this._myid\r\n            });\r\n            this.$element.removeClass('pip-dragging');\r\n            this.$element.parent().find('.pip-drag-enter').removeClass('pip-drag-enter');\r\n            this.reset();\r\n            this.$document.off(this._moveEvents);\r\n            this.$document.off(this._releaseEvents);\r\n            if (this.onDragStopCallback) {\r\n                this.$scope.$apply(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: this._data,\r\n                        $event: evt\r\n                    });\r\n                });\r\n            }\r\n\r\n            this._deregisterRootMoveListener();\r\n        }\r\n\r\n        private onDragComplete(evt) {\r\n            if (!this.onDragSuccessCallback) return;\r\n\r\n            this.$scope.$apply(() => {\r\n                this.onDragSuccessCallback(this.$scope, {\r\n                    $data: this._data,\r\n                    $event: evt\r\n                });\r\n            });\r\n        }\r\n\r\n        private reset() {\r\n            if (this.allowTransform)\r\n                this.$element.css({\r\n                    transform: '',\r\n                    'z-index': '',\r\n                    '-webkit-transform': '',\r\n                    '-ms-transform': ''\r\n                });\r\n            else {\r\n                this.$element.css({\r\n                    position: this._elementStyle.position,\r\n                    top: this._elementStyle.top,\r\n                    left: this._elementStyle.left,\r\n                    'z-index': '',\r\n                    width: this._elementStyle.width\r\n                });\r\n            }\r\n        }\r\n\r\n        private moveElement(x, y) {\r\n            const eWidth = this.$element.css('width');\r\n            if (this.allowTransform) {\r\n                this.$element.css({\r\n                    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    'z-index': 99999,\r\n                    '-webkit-transform': 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + x + ', ' + y + ', 0, 1)',\r\n                    '-ms-transform': 'matrix(1, 0, 0, 1, ' + x + ', ' + y + ')'\r\n                });\r\n            } else {\r\n                this.$element.css({\r\n                    'left': x + 'px',\r\n                    'top': y + 'px',\r\n                    'position': 'fixed',\r\n                    'z-index': 100,\r\n                    width: eWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        private dragToScroll() {\r\n            let scrollX = 0,\r\n                scrollY = 0,\r\n                offset = (element) => {\r\n                    return element.offset() || {\r\n                        left: 0,\r\n                        top: 0\r\n                    };\r\n                };\r\n\r\n            if (this.horizontalScroll) {\r\n                const\r\n                    containerLeft = offset(this.scrollContainer).left,\r\n                    containerWidth = this.scrollContainer.innerWidth(),\r\n                    containerRight = containerLeft + containerWidth;\r\n\r\n                if ((this._mx - containerLeft) < this.activationDistance) {\r\n                    scrollX = -this.scrollDistance;\r\n                } else if ((containerRight - this._mx) < this.activationDistance) {\r\n                    scrollX = this.scrollDistance;\r\n                }\r\n            }\r\n\r\n            if (this.verticalScroll) {\r\n                const\r\n                    containerTop = offset(this.scrollContainer).top,\r\n                    containerHeight = this.scrollContainer.innerHeight(),\r\n                    containerBottom = containerTop + containerHeight;\r\n\r\n                if ((this._my - containerTop) < this.activationDistance) {\r\n                    scrollY = -this.scrollDistance + 30;\r\n                } else if ((containerBottom - this._my) < this.activationDistance) {\r\n                    scrollY = this.scrollDistance - 30;\r\n                }\r\n            }\r\n            if (scrollX !== 0 || scrollY !== 0) {\r\n                const\r\n                    containerScrollLeft = this.scrollContainer.scrollLeft(),\r\n                    containerScrollTop = this.scrollContainer.scrollTop();\r\n\r\n                this.scrollContainer.scrollLeft(containerScrollLeft + scrollX);\r\n                this.scrollContainer.scrollTop(containerScrollTop + scrollY);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const Drag = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $window: ng.IWindowService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDragLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDragLinkAttributes\r\n            ) {\r\n                new DragLink($rootScope, $parse, $document, $window, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrag', Drag);\r\n}","export interface IDraggableService {\r\n    inputEvent(event: any);\r\n}\r\n\r\nclass DraggableService implements IDraggableService {\r\n    public inputEvent(event) {\r\n        if (angular.isDefined(event.touches)) {\r\n            return event.touches[0];\r\n        }\r\n        //Checking both is not redundent. If only check if touches isDefined, angularjs isDefnied will return error and stop the remaining scripty if event.originalEvent is not defined.\r\n        else if (angular.isDefined(event.originalEvent) && angular.isDefined(event.originalEvent.touches)) {\r\n            return event.originalEvent.touches[0];\r\n        }\r\n        return event;\r\n    };\r\n}\r\n\r\nangular\r\n    .module(\"pipDraggable\")\r\n    .service('pipDraggable', DraggableService);\r\n    ","import { IDraggableService } from './DraggableService';\r\n\r\n{\r\n    interface IDropLinkScope extends ng.IScope {\r\n        value: any;\r\n        isTouching: any;\r\n    }\r\n\r\n    interface IDropLinkAttributes extends ng.IAttributes {\r\n        pipDrop: any;\r\n        pipDropSuccess: any;\r\n        pipDragStart: any;\r\n        pipDragStop: any;\r\n        pipDragMove: any;\r\n    }\r\n\r\n    class DropLink {\r\n\r\n        private _lastDropTouch: any;\r\n        private _myid: number | string;\r\n        private _dropEnabled: boolean;\r\n\r\n        private onDropCallback: Function; // || function(){};\r\n        private onDragStartCallback: Function;\r\n        private onDragStopCallback: Function;\r\n        private onDragMoveCallback: Function;\r\n\r\n        constructor(\r\n            private $parse: ng.IParseService,\r\n            private $document: ng.IDocumentService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipDraggable: IDraggableService,\r\n            private $scope: IDropLinkScope,\r\n            private $element: JQuery,\r\n            private $attrs: IDropLinkAttributes\r\n        ) {\r\n            $scope.value = $attrs.pipDrop;\r\n            $scope.isTouching = false;\r\n\r\n            this._myid = $scope.$id;\r\n            this.onDropCallback = $parse($attrs.pipDropSuccess); // || function(){};\r\n            this.onDragStartCallback = $parse($attrs.pipDragStart);\r\n            this.onDragStopCallback = $parse($attrs.pipDragStop);\r\n            this.onDragMoveCallback = $parse($attrs.pipDragMove);\r\n\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$scope.$watch(this.$attrs.pipDrop, (newVal, oldVal) => {\r\n                this.onEnableChange(newVal, oldVal);\r\n            });\r\n            this.$scope.$on('$destroy', (event) => {\r\n                this.onDestroy(event);\r\n            });\r\n            this.$scope.$on('draggable:start', (evt, obj) => {\r\n                this.onDragStart(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:move', (evt, obj) => {\r\n                this.onDragMove(evt, obj);\r\n            });\r\n            this.$scope.$on('draggable:end', (evt, obj) => {\r\n                this.onDragEnd(evt, obj);\r\n            });\r\n        }\r\n\r\n        private onDestroy(enable) {\r\n            this.toggleListeners(false);\r\n        }\r\n\r\n        private onEnableChange(newVal, oldVal) {\r\n            this._dropEnabled = newVal;\r\n        }\r\n\r\n        private onDragStart(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element);\r\n\r\n            if (this.$attrs.pipDragStart) {\r\n                this.$timeout(() => {\r\n                    this.onDragStartCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragMove(evt, obj) {\r\n            if (!this._dropEnabled) return;\r\n            this.isTouching(obj.x, obj.y, obj.element);\r\n\r\n            if (this.$attrs.pipDragMove) {\r\n                this.$timeout(() => {\r\n                    this.onDragMoveCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        private onDragEnd(evt, obj) {\r\n            // don't listen to drop events if this is the element being dragged\r\n            // only update the styles and return\r\n            if (!this._dropEnabled || this._myid === obj.uid) {\r\n                this.updateDragStyles(false, obj.element);\r\n                return;\r\n            }\r\n\r\n            if (this.isTouching(obj.x, obj.y, obj.element)) {\r\n                // call the pipDraggable pipDragSuccess element callback\r\n                if (obj.callback) {\r\n                    obj.callback(obj);\r\n                }\r\n\r\n                if (this.$attrs.pipDropSuccess) {\r\n                    this.$timeout(() => {\r\n                        this.onDropCallback(this.$scope, {\r\n                            $data: obj.data,\r\n                            $event: obj,\r\n                            $target: this.$scope.$eval(this.$scope.value)\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.$attrs.pipDragStop) {\r\n                this.$timeout(() => {\r\n                    this.onDragStopCallback(this.$scope, {\r\n                        $data: obj.data,\r\n                        $event: obj\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.updateDragStyles(false, obj.element);\r\n        }\r\n\r\n        private isTouching(mouseX, mouseY, dragElement) {\r\n            const touching = this.hitTest(mouseX, mouseY);\r\n            this.$scope.isTouching = touching;\r\n            if (touching) {\r\n                this._lastDropTouch = this.$element;\r\n            }\r\n            this.updateDragStyles(touching, dragElement);\r\n            return touching;\r\n        }\r\n\r\n        private updateDragStyles(touching, dragElement) {\r\n            if (touching) {\r\n                this.$element.addClass('pip-drag-enter');\r\n                dragElement.addClass('pip-drag-over');\r\n            } else if (this._lastDropTouch == this.$element) {\r\n                this._lastDropTouch = null;\r\n                this.$element.removeClass('pip-drag-enter');\r\n                dragElement.removeClass('pip-drag-over');\r\n            }\r\n        };\r\n\r\n        private hitTest(x, y) {\r\n            const bounds = this.$element[0].getBoundingClientRect();\r\n            x -= this.$document[0].body.scrollLeft + this.$document[0].documentElement.scrollLeft;\r\n            y -= this.$document[0].body.scrollTop + this.$document[0].documentElement.scrollTop;\r\n            return x >= bounds.left &&\r\n                x <= bounds.right &&\r\n                y <= bounds.bottom &&\r\n                y >= bounds.top;\r\n        }\r\n    }\r\n\r\n    const Drop = function (\r\n        $parse: ng.IParseService,\r\n        $document: ng.IDocumentService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipDraggable: IDraggableService,\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: IDropLinkScope,\r\n                $element: JQuery,\r\n                $attrs: IDropLinkAttributes\r\n            ) {\r\n                new DropLink($parse, $document, $timeout, pipDraggable, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipDrop', Drop);\r\n}","{\r\n\r\n    class PreventDragLink {\r\n        constructor(\r\n            private $element: JQuery\r\n        ) {\r\n            this.initialize();\r\n        }\r\n\r\n        private initialize() {\r\n            this.$element.attr('pip-draggable', 'false');\r\n            this.toggleListeners(true);\r\n        }\r\n\r\n        private toggleListeners(enable) {\r\n            // remove listeners\r\n            if (!enable) return;\r\n            // add listeners.\r\n            this.$element.on('mousedown touchstart touchmove touchend touchcancel', (event) => { this.absorbEvent_(event); });\r\n        }\r\n\r\n        private absorbEvent_(event) {\r\n            const e = event.originalEvent;\r\n            e.preventDefault && e.preventDefault();\r\n            e.stopPropagation && e.stopPropagation();\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    const PreventDrag = function (): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: ng.IAttributes\r\n            ) {\r\n                new PreventDragLink($element);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipDraggable\")\r\n        .directive('pipPreventDrag', PreventDrag);\r\n}","angular.module(\"pipDraggable\", []);\r\n\r\nimport './DraggableService';\r\nimport './Drag';\r\nimport './Drop';\r\nimport './PreventDrag';\r\nimport './CancelDrag';\r\n","{\r\n    interface FocusedScope extends ng.IScope {\r\n        pipFocusedColor: Function;\r\n        pipFocusedClass: Function;\r\n        pipFocusedRebind: Function;\r\n        pipFocusedTabindex: Function;\r\n        pipFocusedOpacity: Function;\r\n        pipFocusedData: Function;\r\n        pipWithHidden: Function;\r\n        pipRebind: Function;\r\n    }\r\n\r\n    interface FocusedAttributes extends ng.IAttributes {\r\n        ngModel: any;\r\n        pipFocusedData: any;\r\n    }\r\n\r\n    class FocusedLink implements ng.IDirective {\r\n        private controls: JQuery;\r\n        private controlsLength: number;\r\n        private color: string;\r\n        private opacityDelta: number = 0.4;\r\n        private opacityLimit: number = 0.5;\r\n        private oldBackgroundColor: string;\r\n        private onFocusClass: string;\r\n\r\n        constructor(\r\n            private $scope: FocusedScope,\r\n            private $element: JQuery,\r\n            $attrs: FocusedAttributes,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $mdConstant: any,\r\n            private $window: ng.IWindowService\r\n        ) {\r\n\r\n            $element.on('keydown', (e) => {\r\n                this.keydownListener(e);\r\n            });\r\n\r\n            $timeout(() => {\r\n                this.init();\r\n            });\r\n\r\n            if ($attrs.ngModel) {\r\n                $scope.$watch('ngModel', function () {\r\n                    $timeout(this.init);\r\n                }, true);\r\n            }\r\n\r\n            if ($attrs.pipFocusedData) {\r\n                $scope.$watch('pipFocusedData', function () {\r\n                    $timeout(this.init);\r\n                }, true);\r\n            }\r\n        }\r\n\r\n        private init() {\r\n            const selector = this.$scope.pipWithHidden && this.$scope.pipWithHidden() ? '.pip-focusable' : '.pip-focusable:visible';\r\n            this.onFocusClass = this.$scope.pipFocusedClass ? this.$scope.pipFocusedClass() : '';\r\n            this.controls = this.$element.find(selector);\r\n            this.controlsLength = this.controls.length;\r\n            this.checkTabindex(this.controls);\r\n            // Add event listeners\r\n            this.controls.on('focus', (event) => {\r\n                const target = event.currentTarget;\r\n                if ($(target).hasClass('md-focused')) {\r\n                    return;\r\n                }\r\n                if (this.$scope.pipRebind && this.$scope.pipRebind()) {\r\n                    this.init();\r\n                }\r\n                this.$element.addClass('pip-focused-container');\r\n                $(target).addClass(this.onFocusClass);\r\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\r\n\r\n                    this.color = $(target).css('backgroundColor');\r\n                    this.oldBackgroundColor = this.color;\r\n                    $(target).css('backgroundColor', this.rgba(this.color));\r\n                    $(target).addClass('md-focused');\r\n                } else {\r\n                    $(target).addClass('md-focused md-focused-opacity');\r\n                }\r\n\r\n            }).on('focusout', (event) => {\r\n                const target = event.currentTarget;\r\n                if (!$(target).hasClass('md-focused')) {\r\n                    return;\r\n                }\r\n                this.$element.removeClass('pip-focused-container');\r\n                $(target).removeClass(this.onFocusClass);\r\n                if (!this.$scope.pipFocusedOpacity || !this.$scope.pipFocusedOpacity()) {\r\n                    $(target).css('backgroundColor', this.oldBackgroundColor);\r\n                    $(target).removeClass('md-focused md-focused-opacity');\r\n                } else {\r\n                    $(target).removeClass('md-focused');\r\n                }\r\n            });\r\n        }\r\n\r\n        private rgba(color) {\r\n            if (this.$scope.pipFocusedColor && this.$scope.pipFocusedColor()) {\r\n                return this.$scope.pipFocusedColor();\r\n            }\r\n\r\n            const arr = color.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\r\n            if (!arr || arr.length < 3) {\r\n                return ''\r\n            }\r\n\r\n            let red, blue, green, opacity;\r\n\r\n            opacity = arr.length == 3 ? 1 : parseFloat(arr[3]);\r\n            red = arr[0];\r\n            blue = arr[1];\r\n            green = arr[2];\r\n\r\n            if (opacity < this.opacityLimit) {\r\n                opacity += this.opacityDelta;\r\n            } else {\r\n                opacity -= this.opacityDelta;\r\n            }\r\n\r\n            return 'rgba(' + red + ', ' + blue + ', ' + green + ', ' + opacity + ')';\r\n        }\r\n\r\n        private setTabindex(element, value) {\r\n            element.attr('tabindex', value);\r\n        }\r\n\r\n        private checkTabindex(controls) {\r\n            const index = _.findIndex(controls, (c) => {\r\n                return c['tabindex'] > -1;\r\n            });\r\n\r\n            if (index == -1 && controls.length > 0 && this.$scope.pipFocusedTabindex) {\r\n                this.setTabindex(angular.element(controls[0]), this.$scope.pipFocusedTabindex());\r\n            }\r\n        }\r\n\r\n        private keydownListener(e) {\r\n            const keyCode = e.which || e.keyCode;\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                e.preventDefault();\r\n\r\n                const\r\n                    increment = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    moveToControl = this.controls.index(this.controls.filter(\".md-focused\")) + increment;\r\n                // Move focus to next control\r\n                if (moveToControl >= 0 && moveToControl < this.controlsLength) {\r\n                    this.controls[moveToControl].focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const Focused = function ($timeout: ng.ITimeoutService, \r\n        $mdConstant: any, \r\n        $window: ng.IWindowService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipFocusedColor: '&?',\r\n                pipFocusedClass: '&?',\r\n                pipFocusedRebind: '&?',\r\n                pipFocusedTabindex: '&?',\r\n                pipFocusedOpacity: '&?',\r\n                pipFocusedData: '&?',\r\n                pipWithHidden: '&?',\r\n                pipRebind: '&?'\r\n            },\r\n            link: function($scope: FocusedScope, $element: JQuery, $attrs: FocusedAttributes) {\r\n                new FocusedLink($scope, $element, $attrs, $timeout, $mdConstant, $window);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipFocused\", [])\r\n        .directive('pipFocused', Focused);\r\n}","﻿import './unsaved_changes/unsavedChanges';\r\nimport './shortcuts/index';\r\nimport './focused/focused';\r\nimport './draggable/index';\r\nimport './selected/selected';\r\nimport './infinite_scroll/infiniteScroll';\r\n\r\nangular.module('pipBehaviors', [\r\n    'pipFocused',\r\n    'pipSelected',\r\n    'pipInfiniteScroll',\r\n    'pipUnsavedChanges',\r\n    'pipDraggable',\r\n    'pipShortcuts'\r\n]);\r\n\r\nexport * from './shortcuts/index';\r\n","{\r\n    interface InfiniteScrollScope extends ng.IScope {\r\n        pipInfiniteScroll: Function;\r\n        pipScrollContainer: JQuery;\r\n        pipScrollDistance: number | string;\r\n        pipScrollDisabled: boolean;\r\n        pipScrollUseDocumentBottom: boolean;\r\n        pipScrollListenForEvent: string;\r\n    }\r\n\r\n    interface InfiniteScrollAttributes extends ng.IAttributes {\r\n        pipScrollParent: any;\r\n        pipScrolImmediateCheck: any;\r\n    }\r\n\r\n    class InfiniteScrollLink {\r\n        private THROTTLE_MILLISECONDS: number = 500;\r\n        private checkWhenEnabled = null;\r\n        private scrollContainer = null;\r\n        private immediateCheck = true;\r\n        private scrollDistance = null;\r\n        private scrollEnabled = null;\r\n        private unregisterEventListener = null;\r\n        private useDocumentBottom = false;\r\n        private windowElement = null;\r\n        private onContainerScrollThrottle: Function;\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $window: ng.IWindowService,\r\n            private $interval: ng.IIntervalService,\r\n            private $scope: InfiniteScrollScope,\r\n            private $element: JQuery,\r\n            private $attrs: InfiniteScrollAttributes\r\n        ) {\r\n            this.windowElement = angular.element($window);\r\n\r\n            this.onContainerScrollThrottle = _.throttle(() => {\r\n                this.onContainerScroll();\r\n            }, this.THROTTLE_MILLISECONDS);\r\n\r\n            $scope.$on('$destroy', () => {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n                if (this.unregisterEventListener !== null) {\r\n                    this.unregisterEventListener();\r\n                    return this.unregisterEventListener = null;\r\n                }\r\n            });\r\n\r\n            $scope.$watch('pipScrollDistance', (v) => {\r\n                this.handleScrollDistance(v);\r\n            });\r\n            this.handleScrollDistance($scope.pipScrollDistance);\r\n\r\n            $scope.$watch('pipScrollDisabled', (v) => {\r\n                this.handleScrollDisabled(v);\r\n            });\r\n            this.handleScrollDisabled($scope.pipScrollDisabled);\r\n\r\n            $scope.$watch('pipScrollUseDocumentBottom', (v) => {\r\n                this.handleScrollUseDocumentBottom(v);\r\n            });\r\n            this.handleScrollUseDocumentBottom($scope.pipScrollUseDocumentBottom);\r\n\r\n            this.changeContainer(this.windowElement);\r\n            if ($scope.pipScrollListenForEvent) {\r\n                this.unregisterEventListener = $rootScope.$on($scope.pipScrollListenForEvent, () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            $scope.$watch('pipScrollContainer', (newContainer) => {\r\n                if (newContainer != this.scrollContainer)\r\n                    this.handleScrollContainer(newContainer);\r\n            });\r\n            this.handleScrollContainer($scope.pipScrollContainer || []);\r\n\r\n            if ($attrs.pipScrollParent !== null) {\r\n                this.changeContainer(angular.element($element.parent()));\r\n            }\r\n            if ($attrs.pipScrolImmediateCheck !== null) {\r\n                this.immediateCheck = $scope.$eval($attrs.pipScrolImmediateCheck);\r\n            }\r\n\r\n            $interval((function () {\r\n                if (this.immediateCheck) {\r\n                    return this.onContainerScrollThrottle();\r\n                }\r\n            }), 0, 1);\r\n        }\r\n\r\n        private height(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(element.offsetHeight)) {\r\n                return element.document.documentElement.clientHeight;\r\n            } else {\r\n                return element.offsetHeight;\r\n            }\r\n        }\r\n\r\n        private offsetTop(element) {\r\n            if (!element[0].getBoundingClientRect || element.css('none')) {\r\n                return;\r\n            }\r\n            return element[0].getBoundingClientRect().top + this.pageYOffset(element);\r\n        }\r\n\r\n        private pageYOffset(element) {\r\n            element = element[0] || element;\r\n            if (isNaN(window.pageYOffset)) {\r\n                return element.document.documentElement.scrollTop;\r\n            } else {\r\n                return element.ownerDocument.defaultView.pageYOffset;\r\n            }\r\n        }\r\n\r\n        private onContainerScroll() {\r\n            let containerBottom,\r\n                containerTopOffset,\r\n                elementBottom,\r\n                remaining,\r\n                shouldScroll;\r\n\r\n            if (this.scrollContainer === this.windowElement) {\r\n                containerBottom = this.height(this.scrollContainer) + this.pageYOffset(this.scrollContainer[0].document.documentElement);\r\n                elementBottom = this.offsetTop(this.$element) + this.height(this.$element);\r\n            } else {\r\n                containerBottom = this.height(this.scrollContainer);\r\n                containerTopOffset = 0;\r\n                if (this.offsetTop(this.scrollContainer) !== void 0) {\r\n                    containerTopOffset = this.offsetTop(this.scrollContainer);\r\n                }\r\n                elementBottom = this.offsetTop(this.$element) - containerTopOffset + this.height(this.$element);\r\n            }\r\n\r\n            if (this.useDocumentBottom) {\r\n                elementBottom = this.height((this.$element[0].ownerDocument || ( < any > this.$element[0]).document).documentElement);\r\n            }\r\n\r\n            remaining = elementBottom - containerBottom;\r\n            shouldScroll = remaining <= this.height(this.scrollContainer) * this.scrollDistance + 1;\r\n\r\n            if (shouldScroll) {\r\n                this.checkWhenEnabled = true;\r\n                if (this.scrollEnabled) {\r\n                    if (this.$scope.$$phase || this.$rootScope.$$phase) {\r\n                        return this.$scope.pipInfiniteScroll();\r\n                    } else {\r\n                        return this.$scope.$apply(() => {\r\n                            this.$scope.pipInfiniteScroll();\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                return this.checkWhenEnabled = false;\r\n            }\r\n        }\r\n\r\n        private handleScrollDistance(v) {\r\n            return this.scrollDistance = parseFloat(v) || 0;\r\n        }\r\n\r\n        private handleScrollDisabled(v) {\r\n            this.scrollEnabled = !v;\r\n            if (this.scrollEnabled && this.checkWhenEnabled) {\r\n                this.checkWhenEnabled = false;\r\n                this.onContainerScrollThrottle();\r\n            }\r\n        }\r\n\r\n        private handleScrollUseDocumentBottom(v) {\r\n            return this.useDocumentBottom = v;\r\n        }\r\n\r\n        private changeContainer(newContainer) {\r\n            if (this.scrollContainer) {\r\n                this.scrollContainer.unbind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n\r\n            this.scrollContainer = newContainer;\r\n            if (newContainer) {\r\n                return this.scrollContainer.bind('scroll', () => {\r\n                    this.onContainerScrollThrottle();\r\n                });\r\n            }\r\n        }\r\n\r\n        private handleScrollContainer(newContainer) {\r\n            if ((newContainer == null) || newContainer.length === 0) {\r\n                return;\r\n            }\r\n            if (newContainer instanceof HTMLElement) {\r\n                newContainer = angular.element(newContainer);\r\n            } else if (typeof newContainer.append === 'function') {\r\n                newContainer = angular.element(newContainer[newContainer.length - 1]);\r\n            } else if (typeof newContainer === 'string') {\r\n                newContainer = this.$element.parents().find(newContainer);\r\n            }\r\n\r\n            if (newContainer != null && (!Array.isArray(newContainer) ||\r\n                    (Array.isArray(newContainer) && newContainer.length > 0))) {\r\n                return this.changeContainer(newContainer);\r\n            } else {\r\n                throw new Error(\"Invalid pip-scroll-container attribute.\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const InfiniteScroll = function (\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $interval: ng.IIntervalService\r\n    ): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                pipInfiniteScroll: '&',\r\n                pipScrollContainer: '=',\r\n                pipScrollDistance: '=',\r\n                pipScrollDisabled: '=',\r\n                pipScrollUseDocumentBottom: '=',\r\n                pipScrollListenForEvent: '@'\r\n            },\r\n            link: function (\r\n                $scope: InfiniteScrollScope,\r\n                $element: JQuery,\r\n                $attrs: InfiniteScrollAttributes\r\n            ) {\r\n                new InfiniteScrollLink($rootScope, $window, $interval, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipInfiniteScroll\", [])\r\n        .directive('pipInfiniteScroll', InfiniteScroll);\r\n}","{\r\n    interface SelectedAttributes extends ng.IAttributes {\r\n        pipSelected: any;\r\n        pipSelectedId: any;\r\n        pipSelect: any;\r\n        pipEnterSpacePress: any;\r\n        pipNoScroll: any;\r\n        pipSkipHidden: any;\r\n        pipTreeList: any;\r\n        pipSelectedWatch: any;\r\n    }\r\n\r\n    class SelectedLink {\r\n        private indexGetter: any;\r\n        private indexSetter: any;\r\n        private idSetter: any;\r\n        private idGetter: any;\r\n        private changeGetter: any;\r\n        private enterSpaceGetter: any;\r\n        private noScroll: any;\r\n        private modifier: any;\r\n        private className: any;\r\n        private selectedIndex: any;\r\n        private currentElementTabinex: any;\r\n        private pipSelectedWatch: any;\r\n        private isScrolled: any;\r\n        // Variables for touch functions\r\n        private touchStartX: any;\r\n        private touchStartY: any;\r\n        private trackingClick: any;\r\n        private trackingClickStart: any;\r\n        private targetElement: any;\r\n        private lastClickTime: any;\r\n        private cancelNextClick: any;\r\n        // Constants for touch functions\r\n        private touchBoundary: number = 10;\r\n        private tapdelay: number = 200;\r\n        private tapTimeout: number = 700;\r\n\r\n        constructor(\r\n            $parse: ng.IParseService,\r\n            private $mdConstant: any,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $scope: ng.IScope,\r\n            private $element: JQuery,\r\n            private $attrs: SelectedAttributes\r\n        ) {\r\n            this.indexGetter = $attrs.pipSelected ? $parse($attrs.pipSelected) : null;\r\n            this.indexSetter = this.indexGetter ? this.indexGetter.assign : null;\r\n            this.idGetter = $attrs.pipSelectedId ? $parse($attrs.pipSelectedId) : null;\r\n            this.idSetter = this.idGetter ? this.idGetter.assign : null;\r\n            this.changeGetter = $attrs.pipSelect ? $parse($attrs.pipSelect) : null;\r\n            this.enterSpaceGetter = $attrs.pipEnterSpacePress ? $parse($attrs.pipEnterSpacePress) : null;\r\n            this.noScroll = $attrs.pipNoScroll;\r\n            this.modifier = $attrs.pipSkipHidden ? ':visible' : '';\r\n            this.className = $attrs.pipTreeList ? '.pip-selectable-tree' : '.pip-selectable';\r\n            this.selectedIndex = this.indexGetter($scope);\r\n            this.currentElementTabinex = $element.attr('tabindex');\r\n            this.pipSelectedWatch = $attrs.pipSelectedWatch;\r\n            this.isScrolled = false;\r\n\r\n            $element.attr('tabindex', this.currentElementTabinex || 0);\r\n\r\n            $element.on('click', this.className, (event) => {\r\n                this.onClickEvent(event);\r\n            });\r\n            $element.on('touchstart', this.className, (event) => {\r\n                this.onTouchStart(event);\r\n            });\r\n            $element.on('touchmove', this.className, (event) => {\r\n                this.onTouchMove(event);\r\n            });\r\n            $element.on('touchend', this.className, (event) => {\r\n                this.onTouchEnd(event);\r\n            });\r\n            $element.on('touchcancel', this.className, (event) => {\r\n                this.onTouchCancel(event);\r\n            });\r\n            $element.on('keydown', (event) => {\r\n                this.onKeyDown(event);\r\n            });\r\n            $element.on('focusin', (event) => {\r\n                this.onFocusIn(event);\r\n            });\r\n            $element.on('focusout', (event) => {\r\n                this.onFocusOut(event);\r\n            });\r\n\r\n            // Watch selected item index\r\n            if (!$attrs.pipTreeList) {\r\n                $scope.$watch(this.indexGetter, (newSelectedIndex) => {\r\n                    this.selectItem({\r\n                        itemIndex: newSelectedIndex\r\n                    });\r\n                });\r\n            } else {\r\n                $scope.$watch(this.idGetter, (newSelectedId) => {\r\n                    $timeout(() => {\r\n                        this.selectItem({\r\n                            itemId: newSelectedId,\r\n                            raiseEvent: true\r\n                        });\r\n                    }, 0);\r\n                });\r\n            }\r\n\r\n            // Watch resync selection\r\n            if (this.pipSelectedWatch) {\r\n                $scope.$watch(this.pipSelectedWatch, () => {\r\n                    // Delay update to allow ng-repeat to update DOM\r\n                    $timeout(() => {\r\n                        this.selectedIndex = this.indexGetter($scope);\r\n                        this.selectItem({\r\n                            itemIndex: this.selectedIndex\r\n                        });\r\n                    }, 100);\r\n                });\r\n            }\r\n\r\n            // Select item defined by index\r\n            this.selectItem({\r\n                itemIndex: this.selectedIndex,\r\n                items: $element.find(this.className)\r\n            });\r\n        }\r\n\r\n        private selectItem(itemParams) {\r\n            if (this.isScrolled) return;\r\n            let itemIndex = itemParams.itemIndex,\r\n                itemId = itemParams.itemId,\r\n                items = itemParams.items || this.$element.find(this.className + this.modifier),\r\n                itemsLength = items.length,\r\n                item = () => {\r\n                    if (itemParams.item) return itemParams.item;\r\n                    if (itemIndex === undefined && itemIndex === -1) {\r\n                        itemIndex = items.index(items.filter('[pip-id=' + itemId + ']'));\r\n                    }\r\n                    if (itemIndex >= 0 && itemIndex < itemsLength) {\r\n                        return items[itemIndex]\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                raiseEvent = itemParams.raiseEvent;\r\n                item = item();\r\n            if (item) {\r\n                this.$element.find(this.className).removeClass('selected md-focused');\r\n                item = <any>angular.element(item)\r\n                    .addClass('selected md-focused')\r\n                    .focus();\r\n                if (!this.noScroll) this.scrollToItem(item);\r\n                if (raiseEvent) this.defineSelectedIndex(items);\r\n            }\r\n        };\r\n\r\n        private defineSelectedIndex(items) {\r\n            const oldSelectedIndex = this.selectedIndex;\r\n            this.selectedIndex = -1;\r\n            for (var index = 0; index < items.length; index++) {\r\n                if ($(items[index]).hasClass('selected')) {\r\n                    this.selectedIndex = index;\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            const updateIndex = () => {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.indexSetter) this.indexSetter(this.$scope, this.selectedIndex);\r\n                if (this.idSetter) this.idSetter(this.$scope, selectedId);\r\n                onSelect();\r\n            };\r\n\r\n            const onSelect = () => {\r\n                const selectedItem = angular.element(items[this.selectedIndex]),\r\n                    selectedId = selectedItem.attr('pip-id');\r\n\r\n                if (this.changeGetter) {\r\n                    this.changeGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            item: selectedItem,\r\n                            index: this.selectedIndex,\r\n                            id: selectedId,\r\n                            newIndex: this.selectedIndex,\r\n                            oldIndex: oldSelectedIndex\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Execute callback to notify about item select\r\n            if (oldSelectedIndex != this.selectedIndex && this.selectedIndex !== -1) {\r\n                this.$scope.$apply(() => { updateIndex(); });\r\n            } else {\r\n                this.$scope.$apply(() => { onSelect(); });\r\n            }\r\n        };\r\n\r\n        private scrollToItem($item) {\r\n            if (this.noScroll || !$item.offset()) return;\r\n\r\n            const\r\n                containerTop = this.$element.offset().top,\r\n                containerHeight = this.$element.height(),\r\n                containerBottom = containerTop + containerHeight,\r\n                itemTop = $item.offset().top,\r\n                itemHeight = $item.outerHeight(true),\r\n                itemBottom = itemTop + itemHeight,\r\n                containerScrollTop = this.$element.scrollTop();\r\n\r\n            this.isScrolled = true;\r\n            this.$timeout(() => {\r\n                this.isScrolled = false;\r\n            }, 100);\r\n\r\n            if (containerTop > itemTop) {\r\n                this.$element.scrollTop(containerScrollTop + itemTop - containerTop);\r\n            } else if (containerBottom < itemBottom) {\r\n                this.$element.scrollTop(containerScrollTop + itemBottom - containerBottom);\r\n            }\r\n        };\r\n\r\n        private getTargetElementFromEventTarget(eventTarget) {\r\n            // On some older browsers the event target may be a text node.\r\n            if (eventTarget.nodeType === Node.TEXT_NODE) {\r\n                return eventTarget.parentNode;\r\n            }\r\n\r\n            return eventTarget;\r\n        };\r\n\r\n        private touchHasMoved(event) {\r\n            const touch = event.changedTouches[0],\r\n                boundary = this.touchBoundary; // Touchmove boundary, beyond which a click will be cancelled.\r\n\r\n            if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        private onClickEvent(event) {\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n        }\r\n\r\n        private onTouchStart(event) {\r\n            const ev = event.originalEvent;\r\n            if (ev['targetTouches'].length > 1) {\r\n                return true;\r\n            }\r\n            const targetElement = this.getTargetElementFromEventTarget(ev.target),\r\n                touch = ev['targetTouches'][0];\r\n\r\n            this.trackingClick = true;\r\n            this.trackingClickStart = ev.timeStamp;\r\n            this.targetElement = targetElement;\r\n\r\n            this.touchStartX = touch.pageX;\r\n            this.touchStartY = touch.pageY;\r\n\r\n            /*if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                //  event.preventDefault();\r\n            }*/\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchMove(event) {\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // If the touch has moved, cancel the click tracking\r\n            if (this.targetElement !== this.getTargetElementFromEventTarget(ev.target) || this.touchHasMoved(ev)) {\r\n                this.trackingClick = false;\r\n                this.targetElement = null;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        private onTouchEnd(event) {\r\n            let forElement, newTrackingClickStart, targetTagName, scrollParent, touch, newtargetElement = this.targetElement;\r\n\r\n            if (!this.trackingClick) {\r\n                return true;\r\n            }\r\n            const ev = event.originalEvent;\r\n            // Prevent phantom clicks on fast double-tap \r\n            if ((ev.timeStamp - this.lastClickTime) < this.tapdelay) {\r\n                this.cancelNextClick = true;\r\n                return true;\r\n            }\r\n\r\n            if ((ev.timeStamp - this.trackingClickStart) > this.tapTimeout) {\r\n                return true;\r\n            }\r\n\r\n            // Reset to prevent wrong click cancel on input \r\n            this.cancelNextClick = false;\r\n\r\n            this.lastClickTime = event.timeStamp;\r\n\r\n            newTrackingClickStart = this.trackingClickStart;\r\n            this.trackingClick = false;\r\n            this.trackingClickStart = 0;\r\n\r\n            this.selectItem({\r\n                item: event.currentTarget,\r\n                raiseEvent: true\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        private onTouchCancel(event) {\r\n            this.trackingClick = false;\r\n            this.targetElement = null;\r\n        }\r\n\r\n        private onKeyDown(event) {\r\n            var keyCode = event.which || event.keyCode;\r\n\r\n            // Check control keyCode\r\n            if (keyCode == this.$mdConstant.KEY_CODE.ENTER || keyCode == this.$mdConstant.KEY_CODE.SPACE) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (this.enterSpaceGetter) {\r\n                    this.enterSpaceGetter(this.$scope, {\r\n                        $event: {\r\n                            target: this.$element,\r\n                            index: this.selectedIndex,\r\n                            item: this.$element.find('.selected')\r\n                        }\r\n                    });\r\n                }\r\n\r\n            } else\r\n            if (keyCode == this.$mdConstant.KEY_CODE.LEFT_ARROW || keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW ||\r\n                keyCode == this.$mdConstant.KEY_CODE.UP_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW\r\n            ) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                // Get next selectable control index\r\n                const items = this.$element.find(this.className + this.modifier),\r\n                    inc = (keyCode == this.$mdConstant.KEY_CODE.RIGHT_ARROW || keyCode == this.$mdConstant.KEY_CODE.DOWN_ARROW) ? 1 : -1,\r\n                    newSelectedIndex = this.selectedIndex + inc;\r\n\r\n                // Set next control as selected\r\n                this.selectItem({\r\n                    itemIndex: newSelectedIndex,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusIn(event) {\r\n            // Choose selected element\r\n            let items,\r\n                selectedItem = this.$element.find(this.className + '.selected');\r\n\r\n            selectedItem.addClass('md-focused');\r\n\r\n            // If there are not selected elements then pick the first one\r\n            if (selectedItem.length === 0) {\r\n                this.selectedIndex = this.indexGetter(this.$scope);\r\n                items = this.$element.find(this.className + this.modifier);\r\n                this.selectItem({\r\n                    itemIndex: this.selectedIndex || 0,\r\n                    items: items,\r\n                    raiseEvent: true\r\n                });\r\n            }\r\n        }\r\n\r\n        private onFocusOut(event) {\r\n            this.$element.find(this.className + '.md-focused' + this.modifier).removeClass('md-focused');\r\n        }\r\n    }\r\n\r\n    const Selected = function (\r\n        $parse: ng.IParseService,\r\n        $mdConstant: any,\r\n        $timeout: ng.ITimeoutService\r\n    ): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            link: function (\r\n                $scope: ng.IScope,\r\n                $element: JQuery,\r\n                $attrs: SelectedAttributes\r\n            ) {\r\n                new SelectedLink($parse, $mdConstant, $timeout, $scope, $element, $attrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"pipSelected\", [])\r\n        .directive('pipSelected', Selected);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\n\r\nexport class ShortcutItem {\r\n    // Shortcut combination\r\n    public shortcut: string;\r\n    // Target object \r\n    public target?: any;\r\n    // Target element by Id\r\n    public targetId?: string;\r\n    // Target element by class (firstelement??)\r\n    // Public targetClass?: string;\r\n    // Access function\r\n    public access?: (event: JQueryEventObject) => boolean;\r\n    // Window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public keypress?: (event: JQueryEventObject) => void;\r\n    // Default options\r\n    public options?: ShortcutOptions;    \r\n}\r\n\r\n// export class ShortcutItem extends SimpleShortcutItem {\r\n//     public shortcuts: SimpleShortcutItem[];\r\n// }\r\n\r\nexport class ShortcutsConfig {\r\n    // Global shortcut \r\n    public globalShortcuts: ShortcutItem[] = [];\r\n    // Local shortcut \r\n    public localShortcuts: ShortcutItem[] = [];\r\n    // Default options\r\n    public defaultOptions: ShortcutOptions = null;\r\n}\r\n\r\nexport interface IShortcutsService {\r\n    readonly config: ShortcutsConfig;\r\n\r\n    globalShortcuts: ShortcutItem[];\r\n    localShortcuts: ShortcutItem[];\r\n}\r\n\r\nexport interface IShortcutsProvider extends ng.IServiceProvider {\r\n    config: ShortcutsConfig;\r\n    \r\n    globalShortcuts: ShortcutItem[];\r\n    defaultOptions: ShortcutOptions;\r\n}\r\n","export class KeyboardEvent {\r\n    static Keydown: string = 'keydown';\r\n    static Keyup: string = 'keyup';\r\n    static Keypress: string = 'keypress';\r\n}\r\n\r\nexport class ShortcutOptions {\r\n    Type: KeyboardEvent;\r\n    Propagate: boolean;\r\n    DisableInInput: boolean;\r\n    Target: any; // Event target object\r\n    Keycode: number;\r\n}\r\n\r\nexport class Shortcut {\r\n    private shift_nums = {\r\n        \"`\": \"~\",\r\n        \"1\": \"!\",\r\n        \"2\": \"@\",\r\n        \"3\": \"#\",\r\n        \"4\": \"$\",\r\n        \"5\": \"%\",\r\n        \"6\": \"^\",\r\n        \"7\": \"&\",\r\n        \"8\": \"*\",\r\n        \"9\": \"(\",\r\n        \"0\": \")\",\r\n        \"-\": \"_\",\r\n        \"=\": \"+\",\r\n        \";\": \":\",\r\n        \"'\": \"\\\"\",\r\n        \",\": \"<\",\r\n        \".\": \">\",\r\n        \"/\": \"?\",\r\n        \"\\\\\": \"|\"\r\n    };\r\n\r\n    private special_keys = {\r\n        'esc': 27,\r\n        'escape': 27,\r\n        'tab': 9,\r\n        'space': 32,\r\n        'return': 13,\r\n        'enter': 13,\r\n        'backspace': 8,\r\n\r\n        'scrolllock': 145,\r\n        'scroll_lock': 145,\r\n        'scroll': 145,\r\n        'capslock': 20,\r\n        'caps_lock': 20,\r\n        'caps': 20,\r\n        'numlock': 144,\r\n        'num_lock': 144,\r\n        'num': 144,\r\n\r\n        'pause': 19,\r\n        'break': 19,\r\n\r\n        'insert': 45,\r\n        'home': 36,\r\n        'delete': 46,\r\n        'end': 35,\r\n\r\n        'pageup': 33,\r\n        'page_up': 33,\r\n        'pu': 33,\r\n\r\n        'pagedown': 34,\r\n        'page_down': 34,\r\n        'pd': 34,\r\n\r\n        'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,\r\n\r\n        'f1': 112,\r\n        'f2': 113,\r\n        'f3': 114,\r\n        'f4': 115,\r\n        'f5': 116,\r\n        'f6': 117,\r\n        'f7': 118,\r\n        'f8': 119,\r\n        'f9': 120,\r\n        'f10': 121,\r\n        'f11': 122,\r\n        'f12': 123\r\n    };\r\n\r\n    private modifiers = {\r\n        shift: { wanted: false, pressed: false },\r\n        ctrl: { wanted: false, pressed: false },\r\n        alt: { wanted: false, pressed: false },\r\n        meta: { wanted: false, pressed: false }\t// Meta is Mac specific\r\n    };\r\n\r\n    public eventCallback: Function;\r\n    public target: any;\r\n    public event: KeyboardEvent;\r\n    public option: ShortcutOptions;\r\n    public shorcut: string;\r\n    public callback: Function;\r\n\r\n    public constructor(\r\n        element: any,\r\n        shorcutCombination: string,\r\n        option: ShortcutOptions,\r\n        callback: (e?: JQueryEventObject) => void\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.target = element;\r\n        this.shorcut = shorcutCombination;\r\n        this.event = option.Type;\r\n        this.option = option;\r\n        this.callback = callback;\r\n\r\n        this.eventCallback = (event: JQueryEventObject) => {\r\n            let e: JQueryEventObject = event || <JQueryEventObject>window.event;\r\n            let code: number;\r\n\r\n            if (this.option.DisableInInput) { // Disable shortcut keys in Input, Textarea fields\r\n                let element;\r\n                if (e.target) {\r\n                    element = e.target;\r\n                } else if (e.srcElement) {\r\n                    element = e.srcElement;\r\n                }\r\n\r\n                if (element.nodeType == 3) {\r\n                    element = element.parentNode;\r\n                }\r\n                if (element.tagName == 'INPUT' || element.tagName == 'TEXTAREA') return;\r\n            }\r\n            // Find Which key is pressed\r\n            if (e.keyCode) {\r\n                code = e.keyCode;\r\n            } else if (e.which) {\r\n                code = e.which;\r\n            }\r\n\r\n            let character = String.fromCharCode(code).toLowerCase();\r\n\r\n            if (code == 188) character = \",\"; // If the user presses, when the type is onkeydown\r\n            if (code == 190) character = \".\"; // If the user presses, when the type is onkeydown\r\n\r\n            let keys: string[] = this.shorcut.split(\"+\");\r\n            // Key Pressed - counts the number of valid keypresses - if it is same as the number of keys, the shortcut function is invoked\r\n            let kp: number = 0;\r\n\r\n            if (e.ctrlKey) this.modifiers.ctrl.pressed = e.ctrlKey;\r\n            if (e.shiftKey) this.modifiers.shift.pressed = e.shiftKey;\r\n            if (e.altKey) this.modifiers.alt.pressed = e.altKey;\r\n            if (e.metaKey) this.modifiers.meta.pressed = e.metaKey;\r\n\r\n            let i: number = 0;\r\n            for (i = 0; i < keys.length; i++) {\r\n                let k: string = keys[i];\r\n                // Modifiers\r\n                if (k == 'ctrl' || k == 'control') {\r\n                    kp++;\r\n                    this.modifiers.ctrl.wanted = true;\r\n                } else if (k == 'shift') {\r\n                    kp++;\r\n                    this.modifiers.shift.wanted = true;\r\n                } else if (k == 'alt') {\r\n                    kp++;\r\n                    this.modifiers.alt.wanted = true;\r\n                } else if (k == 'meta') {\r\n                    kp++;\r\n                    this.modifiers.meta.wanted = true;\r\n                } else if (k.length > 1) { // If it is a special key\r\n                    if (this.special_keys[k] == code) {\r\n                        kp++;\r\n                    }\r\n                } else if (this.option.Keycode) {\r\n                    if (this.option.Keycode == code) kp++;\r\n                } else { // The special keys did not match\r\n                    if (character == k) kp++;\r\n                    else {\r\n                        if (this.shift_nums[character] && e.shiftKey) { // Stupid Shift key bug created by using lowercase\r\n                            character = this.shift_nums[character];\r\n                            if (character == k) {\r\n                                kp++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (kp == keys.length &&\r\n                this.modifiers.ctrl.pressed == this.modifiers.ctrl.wanted &&\r\n                this.modifiers.shift.pressed == this.modifiers.shift.wanted &&\r\n                this.modifiers.alt.pressed == this.modifiers.alt.wanted &&\r\n                this.modifiers.meta.pressed == this.modifiers.meta.wanted) {\r\n\r\n                this.callback(e);\r\n\r\n                if (!this.option.Propagate) { // Stop the event\r\n                    // e.cancelBubble is supported by IE - this will kill the bubbling process.\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    // e.stopPropagation works in Firefox.\r\n                    if (e.stopPropagation) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n            this.modifiers.ctrl.pressed = false;\r\n            this.modifiers.shift.pressed = false;\r\n            this.modifiers.alt.pressed = false;\r\n            this.modifiers.meta.pressed = false;\r\n        };\r\n    }\r\n}\r\n","import { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { IKeyboardShortcuts, IShortcutBindingService, IShortcutBindingProvider } from './IShortcutBindingService';\r\n\r\n{\r\n    class ShortcutBindingService implements IShortcutBindingService {\r\n        private _log: ng.ILogService;\r\n        private _defaultOption: ShortcutOptions;\r\n        private _shortcuts: IKeyboardShortcuts = {};\r\n\r\n        public constructor(\r\n            $log: ng.ILogService,\r\n            option: ShortcutOptions\r\n        ) {\r\n            \"ngInject\";\r\n            this._log = $log;\r\n            this._defaultOption = option ? _.defaults(option, this.getDefaultOption()) : this.getDefaultOption();\r\n        }\r\n\r\n        private getDefaultOption(): ShortcutOptions {\r\n            let defaultOption: ShortcutOptions = {\r\n                Type: KeyboardEvent.Keydown,\r\n                Propagate: false,\r\n                DisableInInput: false,\r\n                Target: document,\r\n                Keycode: null\r\n            };\r\n\r\n            return defaultOption;\r\n        }\r\n\r\n        public get shortcuts(): IKeyboardShortcuts {\r\n            return this._shortcuts;\r\n        }\r\n\r\n        public add(shortcut: string, callback: (e: JQueryEventObject) => void, option: ShortcutOptions): void {\r\n            this.remove(shortcut);\r\n            let shortcutOption: ShortcutOptions = option ? _.defaults(option, this._defaultOption) : this._defaultOption;\r\n            let shortcutCombination: string = shortcut.toLowerCase();\r\n            let element = shortcutOption.Target;\r\n\r\n            if (typeof shortcutOption.Target == 'string') {\r\n                element = document.getElementById(shortcutOption.Target);\r\n            } else {\r\n                element = shortcutOption.Target;\r\n            }\r\n\r\n            if (!element) {\r\n                this._log.error('Register shortcut: element undentified!');\r\n                return;\r\n            }\r\n\r\n            if (!shortcutCombination) {\r\n                this._log.error('Register shortcut: shortcut combination undentified!');\r\n                return;\r\n            }\r\n\r\n            if (!callback) {\r\n                this._log.error('Register shortcut: shorcut callback undentified!');\r\n                return;\r\n            }\r\n\r\n            let newKeyboardShortcut = new Shortcut(element, shortcutCombination, shortcutOption, callback);\r\n\r\n            this._shortcuts[shortcutCombination] = newKeyboardShortcut;\r\n\r\n            //Attach the function with the event\r\n            if (element.addEventListener) {\r\n                element.addEventListener(shortcutOption.Type, newKeyboardShortcut.eventCallback, false);\r\n            } else if (element.attachEvent) {\r\n                element.attachEvent('on' + shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n            } else {\r\n                element.on(shortcutOption.Type, newKeyboardShortcut.eventCallback);\r\n            }\r\n        }\r\n\r\n        public remove(shorcut: string): void {\r\n            let shortcutCombination = shorcut.toLowerCase();\r\n            let binding: Shortcut = this._shortcuts[shortcutCombination];\r\n\r\n            delete(this._shortcuts[shortcutCombination])\r\n            if (!binding) return;\r\n\r\n            let type = binding.event;\r\n            let element = binding.target;\r\n            let callback = binding.eventCallback;\r\n\r\n            if (element.detachEvent) {\r\n                element.detachEvent('on' + type, callback);\r\n            } else if (element.removeEventListener) {\r\n                element.removeEventListener(type, callback, false);\r\n            } else {\r\n                // element['on' + type] = false;\r\n                element.off(type, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    class ShortcutBindingProvider implements IShortcutBindingProvider {\r\n        private _service: ShortcutBindingService;\r\n        private _option: ShortcutOptions;\r\n\r\n        public get option(): ShortcutOptions {\r\n            return this._option;\r\n        }\r\n\r\n        public set option(value: ShortcutOptions) {\r\n            this._option = value || new ShortcutOptions();\r\n        }\r\n\r\n        public $get(\r\n            $log: ng.ILogService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null)\r\n                this._service = new ShortcutBindingService($log, this._option);\r\n\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .provider('pipShortcutBinding', ShortcutBindingProvider);\r\n}","import { ShortcutOptions } from \"./Shortcut\";\r\nimport { IShortcutBindingService } from \"./IShortcutBindingService\";\r\n\r\ninterface ShortcutAttributes extends ng.IAttributes {\r\n    pipShortcutAction: any;\r\n    pipShortcutName: any;\r\n    pipShorcutOptions: ShortcutOptions;\r\n}\r\n\r\nclass ShortcutController implements ng.IController  {\r\n    private actionShortcuts: Function;\r\n    private nameShortcuts: string;\r\n    private options: ShortcutOptions;\r\n\r\n    constructor(\r\n        $element: JQuery,\r\n        $attrs: ShortcutAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $parse: ng.IParseService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if ($attrs.pipShortcutAction) {\r\n            this.actionShortcuts = $parse($attrs.pipShortcutAction);\r\n            this.actionShortcuts($scope, {$event: {}});\r\n        } else {\r\n            $log.error('Shortcut action does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        if ($attrs.pipShortcutName && _.isString($attrs.pipShortcutName)) {\r\n            this.nameShortcuts = $attrs.pipShortcutName;\r\n        } else {\r\n            $log.error('Shortcut name does not set.');\r\n\r\n            return\r\n        }\r\n\r\n        this.options = $attrs.pipShorcutOptions ? <ShortcutOptions>$attrs.pipShorcutOptions : <ShortcutOptions>{};\r\n        this.options.Target = $element;\r\n        \r\n        // Registration of keybord shortcuts\r\n        pipShortcutBinding.add(this.nameShortcuts, (e?: any) => {\r\n            this.actionShortcuts($scope, {$event: {'e': e}});          \r\n        }, this.options);\r\n    }\r\n\r\n    private keypressShortcut(action) {\r\n        this.actionShortcuts();\r\n    }\r\n}\r\n\r\n// Prevent junk from going into typescript definitions\r\n{\r\n    const shortcutsDirective = function(): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,            \r\n            controller: ShortcutController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipShortcuts')\r\n        .directive('pipShortcut', shortcutsDirective);\r\n}","import { IShortcutBindingService } from \"./IShortcutBindingService\"\r\nimport { Shortcut, ShortcutOptions, KeyboardEvent } from \"./Shortcut\";\r\nimport { ShortcutsConfig, ShortcutItem, IShortcutsService, IShortcutsProvider } from './IShortcutsService';\r\n\r\nexport let ShortcutsChangedEvent = 'pipShortcutsChanged';\r\n\r\nclass ShortcutsService implements IShortcutsService {\r\n    private _oldConfig: ShortcutsConfig;\r\n    private _config: ShortcutsConfig;\r\n\r\n    public constructor(\r\n        config: ShortcutsConfig,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService, \r\n        private $location: ng.ILocationService, \r\n        private $injector: ng.auto.IInjectorService,\r\n        private pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        this._config = config;\r\n        this._oldConfig = _.cloneDeep(this._config);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this._config.globalShortcuts);\r\n        this.addShortcuts(this._config.localShortcuts);        \r\n    }\r\n\r\n    // Describe private functions\r\n    private sendChangeEvent() {\r\n        // Remove shortcuts\r\n        this.removeShortcuts(this._oldConfig.globalShortcuts);\r\n        this.removeShortcuts(this._oldConfig.localShortcuts);\r\n\r\n        // Add shortcuts\r\n        this.addShortcuts(this.config.globalShortcuts);\r\n        this.addShortcuts(this.config.localShortcuts);\r\n\r\n        this.$rootScope.$emit(ShortcutsChangedEvent, this.config);\r\n\r\n        // Save current config to oldConfig\r\n        this._oldConfig = _.cloneDeep(this.config);\r\n    }\r\n\r\n    private removeShortcuts(collection: ShortcutItem[]): void {\r\n        _.each(collection, (k) => {\r\n            this.pipShortcutBinding.remove(k.shortcut);\r\n        });\r\n    }\r\n\r\n    private keypressShortcut(item: ShortcutItem, event: JQueryEventObject) {\r\n        if (item.access && _.isFunction(item.access)) {\r\n            if (!item.access(event)) {\r\n                return;\r\n            }\r\n        } \r\n\r\n        if (item.keypress) {\r\n            item.keypress(event);\r\n            return;\r\n        }\r\n\r\n        if (item.href) {\r\n            this.$window.location.href = item.href;\r\n            return;\r\n        }\r\n\r\n        if (item.url) {\r\n            this.$location.url(item.url);\r\n            return;\r\n        }\r\n\r\n        if (item.state) {\r\n            if (this.$injector.has('$state')) {\r\n                var $state = this.$injector.get('$state');\r\n                $state['go'](item.state, item.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (item.event) {\r\n            this.$rootScope.$broadcast(item.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipShortcutKeypress', item.shortcut);\r\n        }\r\n    }\r\n\r\n    private addShortcuts(collection: ShortcutItem[]): void {\r\n        let generalOptions: ShortcutOptions = this.config.defaultOptions ? this.config.defaultOptions : <ShortcutOptions>{};\r\n        \r\n        _.each(collection, (k) => {\r\n            let option: ShortcutOptions = k.options ? k.options : generalOptions;\r\n            let target: any;\r\n\r\n            target = k.target ? k.target : k.targetId;\r\n            option.Target = target;\r\n            // Registration of keyboard shortcut\r\n            this.pipShortcutBinding.add(k.shortcut, (e?: any) => {\r\n                this.keypressShortcut(k, e);        \r\n            }, option);              \r\n        });\r\n    }\r\n\r\n    // Describe public functions \r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get localShortcuts(): ShortcutItem[] {\r\n        return this._config.localShortcuts;\r\n    }\r\n\r\n    public set localShortcuts(value: ShortcutItem[]) {\r\n        this._config.localShortcuts = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n}\r\n\r\nclass ShortcutsProvider implements IShortcutsProvider {\r\n    private _config: ShortcutsConfig = new ShortcutsConfig();\r\n    private _service: ShortcutsService;\r\n\r\n    public get config(): ShortcutsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ShortcutsConfig) {\r\n        this._config = value || new ShortcutsConfig();\r\n    }\r\n\r\n    public get defaultOptions(): ShortcutOptions {\r\n        return this._config.defaultOptions;\r\n    }\r\n\r\n    public set defaultOptions(value: ShortcutOptions) {\r\n        this._config.defaultOptions = value || null;\r\n    }\r\n\r\n    public get globalShortcuts(): ShortcutItem[] {\r\n        return this._config.globalShortcuts;\r\n    }\r\n\r\n    public set globalShortcuts(value: ShortcutItem[]) {\r\n        this._config.globalShortcuts = value || [];\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: ng.IRootScopeService, \r\n        $window: ng.IWindowService, \r\n        $location: ng.ILocationService, \r\n        $injector: ng.auto.IInjectorService,\r\n        pipShortcutBinding: IShortcutBindingService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ShortcutsService(this._config, $rootScope, $window, $location, $injector, pipShortcutBinding);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipShortcuts')\r\n    .provider('pipShortcuts', ShortcutsProvider);\r\n\r\n","angular.module('pipShortcuts', ['ngMaterial', 'ui.router']);\r\n\r\nimport './ShortcutBindingService';\r\nimport './ShortcutsService';\r\nimport './ShortcutDirective';\r\n\r\nexport * from './IShortcutsService';\r\nexport * from './IShortcutBindingService';\r\nexport * from './ShortcutsService';\r\nexport * from './ShortcutBindingService';","{\r\n    interface UnsavedChangesScope extends ng.IScope {\r\n        unsavedChangesAvailable: Function;\r\n        unsavedChangesMessage: string;\r\n        cancelLeave: Function;\r\n        afterLeave: Function;\r\n    }\r\n\r\n    class UnsavedChangesLink {\r\n        constructor(\r\n            $scope: UnsavedChangesScope,\r\n            $window: ng.IWindowService\r\n        ) {\r\n            $window.onbeforeunload = () => {\r\n                if ($scope.unsavedChangesAvailable()) {\r\n                    return $scope.unsavedChangesMessage;\r\n                }\r\n            };\r\n\r\n            const unbindFunc = $scope.$on('$stateChangeStart', (event) => {\r\n                if ($scope.unsavedChangesAvailable() && !$window.confirm($scope.unsavedChangesMessage)) {\r\n                    _.isFunction($scope.cancelLeave) && $scope.cancelLeave();\r\n                    event.preventDefault();\r\n                } else {\r\n                    _.isFunction($scope.afterLeave) && $scope.afterLeave();\r\n                }\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                $window.onbeforeunload = null;\r\n                unbindFunc();\r\n            });\r\n        }\r\n    }\r\n\r\n    const UnsavedChanges = function ($window: ng.IWindowService) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                unsavedChangesAvailable: '&pipUnsavedChangesAvailable',\r\n                unsavedChangesMessage: '@pipUnsavedChangesMessage',\r\n                afterLeave: '&pipUnsavedChangesAfterLeave',\r\n                cancelLeave: '&pipUnsavedChangesCancelLeave'\r\n            },\r\n            link: function ($scope: UnsavedChangesScope) {\r\n                new UnsavedChangesLink($scope, $window);\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"pipUnsavedChanges\", [])\r\n        .directive(\"pipUnsavedChanges\", UnsavedChanges);\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}